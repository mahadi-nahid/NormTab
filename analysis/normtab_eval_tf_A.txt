/Users/mnahid/Documents/NormTab/bin/python /Users/mnahid/Documents/Project/NormTab/run_normtab_tab_tf_eval.py
/Users/mnahid/Documents/NormTab/lib/python3.10/site-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning
  warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')
{'1-24560733-1.html.csv': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], '1-25557880-1.html.csv': [10], '2-16776506-2.html.csv': [11, 12, 13, 14], '2-14175075-5.html.csv': [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], '2-11512626-6.html.csv': [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], '2-12523044-5.html.csv': [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], '2-10301911-2.html.csv': [45, 46], '2-15547694-1.html.csv': [47, 48, 49, 50, 51, 52, 53, 54, 55, 56], '2-15214004-2.html.csv': [57, 58, 59, 60], '1-25277363-2.html.csv': [61, 62, 63, 64, 65], '1-18600760-10.html.csv': [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], '1-2126093-3.html.csv': [78, 79, 80, 81], '2-12817505-2.html.csv': [82, 83, 84, 85, 86, 87, 88, 89, 90], '2-1111973-1.html.csv': [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], '2-17245513-1.html.csv': [101, 102, 103, 104, 105], '1-2370579-1.html.csv': [106, 107, 108, 109, 110, 111, 112, 113], '2-12582968-1.html.csv': [114, 115, 116, 117, 118, 119, 120, 121, 122, 123], '2-11545282-15.html.csv': [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], '2-14291300-7.html.csv': [135, 136, 137, 138], '2-17025909-3.html.csv': [139, 140, 141, 142], '2-12076689-7.html.csv': [143, 144, 145, 146, 147, 148, 149, 150, 151, 152], '2-11545282-1.html.csv': [153, 154, 155, 156, 157, 158, 159, 160, 161, 162], '2-1015521-1.html.csv': [163, 164, 165, 166, 167, 168, 169, 170, 171, 172], '2-16835332-3.html.csv': [173, 174, 175, 176, 177, 178, 179, 180], '1-29789-1.html.csv': [181, 182], '1-1697190-2.html.csv': [183, 184, 185], '2-18844321-1.html.csv': [186, 187, 188, 189, 190, 191, 192, 193, 194], '2-10826385-15.html.csv': [195, 196, 197, 198, 199, 200, 201, 202, 203, 204], '1-2150776-1.html.csv': [205, 206, 207, 208, 209, 210, 211, 212], '2-15100419-2.html.csv': [213], '1-14562722-2.html.csv': [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], '2-18963715-1.html.csv': [225, 226, 227, 228], '2-11650849-7.html.csv': [229, 230], '2-11051845-5.html.csv': [231, 232, 233, 234, 235, 236, 237, 238, 239, 240], '1-12834315-2.html.csv': [241, 242, 243], '2-187504-13.html.csv': [244, 245, 246, 247, 248, 249, 250, 251, 252, 253], '2-15272585-8.html.csv': [254, 255, 256, 257, 258, 259, 260, 261, 262, 263], '2-16653153-30.html.csv': [264, 265, 266, 267, 268, 269, 270, 271, 272, 273], '2-12206617-3.html.csv': [274, 275, 276, 277, 278, 279, 280, 281, 282, 283], '2-17933602-1.html.csv': [284, 285, 286, 287, 288, 289, 290, 291, 292, 293], '2-10814487-4.html.csv': [294, 295, 296, 297], '2-16623894-37.html.csv': [298, 299, 300, 301, 302], '2-17751797-4.html.csv': [303, 304, 305, 306, 307, 308, 309, 310, 311], '2-11545282-4.html.csv': [312, 313, 314, 315, 316, 317, 318, 319, 320, 321], '1-1341522-41.html.csv': [322, 323, 324, 325, 326, 327], '2-16409445-1.html.csv': [328, 329, 330], '2-18622227-6.html.csv': [331, 332, 333, 334, 335, 336, 337, 338, 339, 340], '2-17340355-10.html.csv': [341, 342, 343, 344, 345, 346, 347, 348, 349, 350], '2-17338083-13.html.csv': [351, 352, 353, 354, 355, 356], '2-11821711-13.html.csv': [357, 358], '2-13312898-28.html.csv': [359, 360, 361, 362, 363, 364, 365, 366, 367, 368], '1-21092444-1.html.csv': [369, 370, 371, 372, 373, 374, 375], '2-18899538-1.html.csv': [376, 377, 378, 379, 380, 381, 382], '2-14975-5.html.csv': [383, 384], '1-16090262-1.html.csv': [385, 386, 387, 388, 389], '2-16218498-1.html.csv': [390, 391, 392, 393, 394, 395, 396, 397, 398, 399], '2-12423174-1.html.csv': [400, 401, 402, 403, 404, 405, 406, 407, 408, 409], '2-1122988-1.html.csv': [410, 411, 412, 413], '2-11206371-3.html.csv': [414, 415], '2-12472200-7.html.csv': [416, 417, 418, 419, 420, 421, 422, 423, 424, 425], '1-27833469-1.html.csv': [426, 427, 428, 429, 430, 431, 432], '2-1122485-2.html.csv': [433, 434, 435, 436, 437, 438, 439, 440, 441, 442], '2-10806592-9.html.csv': [443, 444, 445, 446, 447, 448, 449, 450, 451, 452], '2-16023753-2.html.csv': [453, 454, 455, 456, 457, 458, 459, 460, 461], '2-17245540-5.html.csv': [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], '2-10747009-18.html.csv': [476, 477, 478, 479], '2-1564278-3.html.csv': [480, 481, 482, 483, 484, 485, 486, 487, 488, 489], '1-10568553-1.html.csv': [490, 491, 492, 493, 494, 495, 496, 497], '2-11565999-5.html.csv': [498, 499], '1-28853064-15.html.csv': [500, 501, 502], '2-1554049-2.html.csv': [503, 504, 505, 506, 507, 508, 509], '1-1341690-13.html.csv': [510, 511], '2-18662685-8.html.csv': [512, 513, 514, 515], '2-147235-16.html.csv': [516, 517, 518, 519, 520, 521, 522, 523, 524, 525], '2-10776330-7.html.csv': [526, 527, 528, 529, 530, 531, 532, 533, 534, 535], '2-15399415-1.html.csv': [536, 537, 538, 539], '2-17968282-1.html.csv': [540, 541, 542, 543], '1-11210576-3.html.csv': [544, 545, 546, 547], '2-16778063-2.html.csv': [548, 549, 550], '2-14369924-1.html.csv': [551, 552, 553, 554, 555, 556, 557, 558, 559, 560], '2-15845253-1.html.csv': [561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], '2-13041602-7.html.csv': [581, 582, 583, 584, 585, 586, 587, 588, 589, 590], '1-2933761-1.html.csv': [591, 592, 593, 594, 595, 596, 597, 598, 599, 600], '2-17703223-7.html.csv': [601, 602, 603], '1-27700375-11.html.csv': [604, 605, 606, 607, 608, 609, 610, 611, 612, 613], '1-28967275-2.html.csv': [614, 615, 616, 617, 618, 619, 620, 621, 622], '2-1467600-1.html.csv': [623, 624, 625], '2-18409326-1.html.csv': [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642], '2-14123212-1.html.csv': [643, 644, 645, 646, 647, 648, 649, 650, 651, 652], '2-1486444-3.html.csv': [653, 654, 655, 656, 657, 658, 659], '2-16909120-1.html.csv': [660], '2-17916431-2.html.csv': [661, 662, 663, 664, 665, 666, 667, 668, 669, 670], '2-15780049-8.html.csv': [671, 672, 673, 674], '2-16299790-6.html.csv': [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], '2-10652530-2.html.csv': [690, 691, 692, 693, 694, 695, 696], '2-1023439-2.html.csv': [697, 698], '2-13990653-2.html.csv': [699, 700, 701, 702, 703], '1-29063233-1.html.csv': [704, 705, 706, 707, 708, 709, 710, 711, 712, 713], '2-17438913-3.html.csv': [714, 715, 716, 717, 718, 719, 720, 721, 722, 723], '2-17086086-2.html.csv': [724, 725, 726, 727, 728], '2-17138681-2.html.csv': [729], '2-14255774-8.html.csv': [730, 731, 732, 733, 734, 735, 736, 737, 738, 739], '2-1305286-7.html.csv': [740, 741, 742, 743], '2-14305653-58.html.csv': [744, 745, 746, 747, 748, 749, 750, 751, 752, 753], '2-1111662-2.html.csv': [754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765], '2-15753390-2.html.csv': [766, 767, 768, 769], '2-16778155-2.html.csv': [770, 771, 772, 773], '1-20704243-5.html.csv': [774, 775, 776, 777, 778, 779], '2-15315276-1.html.csv': [780, 781, 782, 783, 784], '2-18049082-6.html.csv': [785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795], '2-14101654-10.html.csv': [796, 797, 798, 799, 800, 801, 802, 803, 804, 805], '2-18607260-13.html.csv': [806, 807, 808, 809, 810, 811, 812, 813, 814, 815], '2-18096431-7.html.csv': [816, 817, 818, 819, 820, 821, 822, 823, 824, 825], '2-18169093-3.html.csv': [826, 827, 828, 829, 830, 831, 832, 833, 834, 835], '2-17514817-1.html.csv': [836, 837, 838, 839, 840, 841, 842, 843, 844], '1-23886181-1.html.csv': [845, 846, 847, 848, 849, 850, 851, 852, 853, 854], '1-29395291-2.html.csv': [855, 856, 857, 858, 859, 860, 861, 862, 863, 864], '2-1122039-1.html.csv': [865, 866, 867, 868, 869, 870, 871, 872, 873, 874], '2-1520559-1.html.csv': [875, 876, 877, 878, 879, 880, 881, 882, 883, 884], '2-11355733-15.html.csv': [885, 886, 887, 888], '2-15654720-1.html.csv': [889, 890], '2-11753791-1.html.csv': [891], '2-14756291-5.html.csv': [892, 893, 894], '2-16570286-3.html.csv': [895, 896, 897, 898, 899, 900, 901, 902, 903], '2-18084-3.html.csv': [904, 905, 906, 907, 908, 909, 910, 911, 912, 913], '2-12206243-10.html.csv': [914, 915, 916, 917, 918, 919, 920, 921, 922], '1-25774493-3.html.csv': [923, 924, 925, 926], '2-12019734-7.html.csv': [927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938], '1-18950570-4.html.csv': [939, 940], '2-15547582-1.html.csv': [941], '2-10724559-2.html.csv': [942, 943, 944, 945, 946, 947, 948], '2-1122319-1.html.csv': [949, 950], '2-100290-1.html.csv': [951, 952, 953], '2-17442575-3.html.csv': [954, 955, 956, 957], '1-16168849-1.html.csv': [958, 959, 960, 961], '2-10926568-2.html.csv': [962, 963, 964, 965], '1-2562572-19.html.csv': [966, 967, 968, 969], '2-17286852-1.html.csv': [970, 971, 972, 973, 974, 975, 976, 977, 978, 979], '2-1381359-2.html.csv': [980, 981, 982, 983, 984, 985, 986, 987], '1-27547668-2.html.csv': [988, 989, 990, 991, 992, 993, 994, 995, 996, 997], '2-12758642-2.html.csv': [998, 999, 1000, 1001, 1002, 1003], '2-11978803-1.html.csv': [1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011], '2-16388398-3.html.csv': [1012, 1013, 1014, 1015, 1016, 1017], '2-18662019-2.html.csv': [1018, 1019], '2-12204442-1.html.csv': [1020, 1021, 1022, 1023, 1024, 1025], '2-18138132-2.html.csv': [1026, 1027, 1028, 1029, 1030, 1031, 1032], '2-1228251-1.html.csv': [1033, 1034], '2-14347797-7.html.csv': [1035, 1036], '2-17634218-19.html.csv': [1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046], '1-11715748-2.html.csv': [1047, 1048, 1049, 1050, 1051], '2-10775890-3.html.csv': [1052, 1053, 1054], '2-15855923-1.html.csv': [1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], '2-15149189-1.html.csv': [1063, 1064, 1065], '2-18842944-2.html.csv': [1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], '2-13135264-6.html.csv': [1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], '2-18357242-2.html.csv': [1086, 1087], '1-2655016-4.html.csv': [1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097], '2-17443121-2.html.csv': [1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], '2-17012578-2.html.csv': [1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], '2-10167122-1.html.csv': [1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127], '2-18700010-1.html.csv': [1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137], '2-10809368-12.html.csv': [1138, 1139, 1140, 1141, 1142, 1143, 1144], '2-14105731-8.html.csv': [1145, 1146, 1147], '2-1613392-2.html.csv': [1148], '2-12617978-9.html.csv': [1149, 1150, 1151, 1152, 1153, 1154], '1-27755603-10.html.csv': [1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], '1-11960407-2.html.csv': [1165, 1166], '2-11983898-4.html.csv': [1167, 1168, 1169, 1170, 1171, 1172], '2-1451581-1.html.csv': [1173, 1174, 1175, 1176, 1177, 1178, 1179], '2-18569011-14.html.csv': [1180, 1181, 1182], '2-17626199-35.html.csv': [1183, 1184, 1185, 1186], '2-12546630-1.html.csv': [1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196], '2-11692087-1.html.csv': [1197, 1198, 1199, 1200], '2-15168206-1.html.csv': [1201, 1202, 1203], '2-17437287-6.html.csv': [1204, 1205, 1206, 1207, 1208, 1209, 1210], '1-10819266-8.html.csv': [1211, 1212, 1213, 1214, 1215, 1216], '2-17200019-10.html.csv': [1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226], '2-18842947-2.html.csv': [1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236], '1-24319661-5.html.csv': [1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244], '2-1590321-59.html.csv': [1245, 1246], '2-10659538-3.html.csv': [1247, 1248, 1249], '2-14783550-1.html.csv': [1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], '1-2649597-1.html.csv': [1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269], '1-23285849-5.html.csv': [1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279], '2-17486851-2.html.csv': [1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287], '2-15807932-2.html.csv': [1288, 1289, 1290, 1291], '2-18855244-2.html.csv': [1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301], '2-13167639-5.html.csv': [1302, 1303, 1304, 1305, 1306], '2-17231125-6.html.csv': [1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314], '1-1341690-20.html.csv': [1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329], '1-23248940-9.html.csv': [1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339], '2-10776868-9.html.csv': [1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348], '2-17360840-7.html.csv': [1349], '2-17445678-2.html.csv': [1350, 1351], '2-12207158-2.html.csv': [1352, 1353], '2-18160020-8.html.csv': [1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361], '1-24132054-1.html.csv': [1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371], '1-2248784-4.html.csv': [1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380], '2-12392804-3.html.csv': [1381, 1382, 1383], '2-11105214-2.html.csv': [1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393], '1-25461946-5.html.csv': [1394, 1395, 1396, 1397, 1398], '2-1075296-2.html.csv': [1399], '2-17915-12.html.csv': [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409], '2-18552926-8.html.csv': [1410, 1411, 1412, 1413], '2-17445451-2.html.csv': [1414, 1415, 1416], '2-11025881-1.html.csv': [1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426], '2-17445673-2.html.csv': [1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436], '2-10944289-2.html.csv': [1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444], '2-14669089-2.html.csv': [1445, 1446, 1447, 1448], '1-1341640-14.html.csv': [1449, 1450, 1451, 1452, 1453, 1454], '2-10918196-1.html.csv': [1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464], '2-11312764-4.html.csv': [1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473], '1-27902171-8.html.csv': [1474, 1475, 1476, 1477, 1478], '2-17150259-1.html.csv': [1479, 1480], '2-18576668-1.html.csv': [1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490], '2-1630554-8.html.csv': [1491, 1492], '2-11097420-1.html.csv': [1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502], '1-27784580-1.html.csv': [1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512], '2-11677760-30.html.csv': [1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522], '2-15198842-45.html.csv': [1523], '2-10809157-19.html.csv': [1524, 1525, 1526, 1527, 1528], '2-15352703-1.html.csv': [1529, 1530], '2-15627191-3.html.csv': [1531, 1532, 1533, 1534], '2-16083989-1.html.csv': [1535, 1536, 1537, 1538, 1539], '2-15194193-3.html.csv': [1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549], '2-1219581-1.html.csv': [1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558], '2-16369528-1.html.csv': [1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566], '2-17807292-5.html.csv': [1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576], '2-1283036-1.html.csv': [1577, 1578, 1579], '1-27332038-1.html.csv': [1580, 1581, 1582, 1583, 1584, 1585, 1586], '2-17120964-6.html.csv': [1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596], '2-18332376-1.html.csv': [1597, 1598, 1599, 1600], '2-11739153-7.html.csv': [1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610], '2-14876228-1.html.csv': [1611, 1612], '2-15930479-1.html.csv': [1613, 1614, 1615, 1616], '1-13282157-1.html.csv': [1617, 1618, 1619, 1620, 1621], '1-2602958-5.html.csv': [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], '2-14609295-5.html.csv': [1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], '2-17111841-1.html.csv': [1642, 1643], '2-10883333-10.html.csv': [1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653], '2-1031852-2.html.csv': [1654, 1655], '2-18925475-1.html.csv': [1656, 1657], '2-17288845-11.html.csv': [1658, 1659, 1660], '2-17231086-6.html.csv': [1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670], '2-18496100-2.html.csv': [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680], '2-17345263-7.html.csv': [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689], '2-1184821-1.html.csv': [1690, 1691, 1692], '2-15918328-13.html.csv': [1693, 1694, 1695, 1696, 1697, 1698, 1699], '1-1505809-2.html.csv': [1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708], '2-1169552-2.html.csv': [1709, 1710, 1711, 1712, 1713, 1714], '2-13312898-25.html.csv': [1715, 1716, 1717, 1718, 1719, 1720, 1721], '1-12125069-2.html.csv': [1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], '2-18747741-1.html.csv': [1730, 1731, 1732, 1733], '2-15451468-2.html.csv': [1734, 1735, 1736, 1737], '1-11602313-4.html.csv': [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749], '2-18546846-1.html.csv': [1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], '2-10773616-14.html.csv': [1760, 1761, 1762], '2-167235-8.html.csv': [1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772], '1-18950570-2.html.csv': [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784], '1-1342256-6.html.csv': [1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795], '2-10831820-1.html.csv': [1796, 1797], '1-18522916-5.html.csv': [1798, 1799, 1800, 1801, 1802, 1803, 1804], '2-14781412-8.html.csv': [1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814], '1-1850339-2.html.csv': [1815, 1816, 1817, 1818, 1819, 1820], '2-17311783-10.html.csv': [1821, 1822, 1823, 1824], '2-10808346-15.html.csv': [1825, 1826, 1827, 1828], '1-27133147-3.html.csv': [1829, 1830, 1831, 1832, 1833], '2-16876516-2.html.csv': [1834], '1-21696800-1.html.csv': [1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842], '2-12075099-1.html.csv': [1843, 1844, 1845, 1846, 1847], '1-14319023-2.html.csv': [1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856], '2-18156552-1.html.csv': [1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866], '2-1546813-1.html.csv': [1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876], '2-17968265-1.html.csv': [1877, 1878], '2-12825759-1.html.csv': [1879, 1880], '2-12482419-2.html.csv': [1881, 1882, 1883, 1884], '2-11840325-8.html.csv': [1885], '2-17073558-1.html.csv': [1886, 1887, 1888, 1889], '2-1598015-5.html.csv': [1890, 1891], '1-27592654-2.html.csv': [1892, 1893], '2-1195142-2.html.csv': [1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903], '2-15349635-1.html.csv': [1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913], '1-2140071-13.html.csv': [1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], '2-17344918-1.html.csv': [1922, 1923, 1924, 1925], '1-25551880-2.html.csv': [1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], '1-26099252-1.html.csv': [1936, 1937, 1938, 1939, 1940, 1941, 1942], '1-27713890-1.html.csv': [1943, 1944, 1945, 1946, 1947], '2-17344651-6.html.csv': [1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957], '2-10824095-19.html.csv': [1958, 1959, 1960, 1961], '1-27755603-2.html.csv': [1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969], '2-11128774-6.html.csv': [1970, 1971], '2-13932013-1.html.csv': [1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981], '2-18762971-2.html.csv': [1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991], '2-11916083-39.html.csv': [1992, 1993, 1994, 1995, 1996, 1997, 1998], '2-10809271-13.html.csv': [1999], '1-24239748-2.html.csv': [2000, 2001, 2002, 2003, 2004], '2-10773616-16.html.csv': [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], '2-16002638-1.html.csv': [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]}

1-24560733-1.html.csv  [['game', 'date', 'opponent', 'result', 'wildcats_points', 'opponents', 'record'],
['1', 'sept 20', 'ole miss', 'loss', '7', '14', '0 - 1'],
['2', 'sept 27', 'cincinnati', 'win', '20', '0', '1 - 1'],
['3', 'oct 4', 'xavier', 'win', '20', '7', '2 - 1'],
['4', 'oct 11', '9 georgia', 'win', '26', '0', '3 - 1 , 20'],
['5', 'oct 18', '10 vanderbilt', 'win', '14', '0', '4 - 1 , 14'],
['6', 'oct 25', 'michigan state', 'win', '7', '6', '5 - 1 , 13'],
['7', 'nov 1', '18 alabama', 'loss', '0', '13', '5 - 2'],
['8', 'nov 8', 'west virginia', 'win', '15', '6', '6 - 2'],
['9', 'nov 15', 'evansville', 'win', '36', '0', '7 - 2'],
['10', 'nov 22', 'tennessee', 'loss', '6', '13', '7 - 3']]

Table Column:  game, date, opponent, result, wildcats_points, opponents, record
DataFrame from database (3 rows) :

game | date | opponent | result | wildcats_points | opponents | record
1 | sept 20 | ole miss | loss | 7 | 14 | 0 - 1
2 | sept 27 | cincinnati | win | 20 | 0 | 1 - 1
3 | oct 4 | xavier | win | 20 | 7 | 2 - 1
table_ids:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

main_table: 1-24560733-1.html.csv table_qa_group:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] number of questions:  10


id:  1-24560733-1.html.csv  S:  the wildcats kept the opposing team scoreless in four games  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 0) = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 0) = 4
0                                                 1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats never scored more than 7 in any game they lost  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE result = 'loss' AND wildcats_points > 7) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE result = 'loss' AND wildcats_points > 7) = 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats lost one game in september and two games in november  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%' AND result = 'loss') = 1 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%' AND result = 'loss') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%' AND result = 'loss') = 1 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%' AND result = 'loss') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats played two games in september , four games in october , and four games in november  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'oct%') = 4 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'oct%') = 4 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%') = 4
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the most the wildcats outscored an opponent is by 36 points  label:  1
answer_sql;  SELECT MAX(wildcats_points - opponents) FROM T;


prediction:     MAX(wildcats_points - opponents)
0                                36
Gold answer:  1

Direct ans:  36  Gold:  1

Gen output:  36  Gold:  1
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats kept the opposing team scoreless in ten games  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 0) = 10;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 0) = 10
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats never scored more than 7 points in any game they won  label:  0
answer_sql;  SELECT COUNT(*) FROM T WHERE result = 'win' AND wildcats_points <= 7;


prediction:     COUNT(*)
0         7
Gold answer:  0

Direct ans:  7  Gold:  0

Gen output:  7  Gold:  0
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats loss one game in november and two games in september  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%' AND result = 'loss') = 1 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%' AND result = 'loss') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%' AND result = 'loss') = 1 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%' AND result = 'loss') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  8 Accuracy:  0.7499906251171861

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the wildcats played four games in september , two games in october , and two games in november  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%') = 4 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'oct%') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE 'sept%') = 4 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'oct%') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE 'nov%') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  9 Accuracy:  0.7777691358984901

-----------------------------------------------



id:  1-24560733-1.html.csv  S:  the most the wildcats outscored an opponent is by 26 points  label:  0
answer_sql;  SELECT MAX(wildcats_points - opponents) FROM T;


prediction:     MAX(wildcats_points - opponents)
0                                36
Gold answer:  0

Direct ans:  36  Gold:  0

Gen output:  36  Gold:  0
Correcet:  7 total:  10 Accuracy:  0.6999930000699993

-----------------------------------------------

***********************************************************

1-25557880-1.html.csv  [
    ["season", "series", "team", "races", "wins", "poles", "f___laps", "podiums", "points", "position"],
    ["2007", "formula renault 2 italy", "bvm minardi team", "14", "0", "0", "0", "1", "106", "14th"],
    ["2007", "eurocup formula renault 2", "bvm minardi team", "6", "0", "0", "0", "0", "", "nc"],
    ["2007", "formula renault 2 italy - wi series", "bvm minardi team", "4", "4", "4", "4", "4", "144", "1st"],
    ["2008", "formula renault 2 italy", "bvm minardi team", "14", "0", "1", "2", "4", "216", "6th"],
    ["2008", "eurocup formula renault 2", "bvm minardi team", "14", "0", "0", "0", "1", "38", "7th"],
    ["2009", "formula 3 euro series", "manor motorsport", "16", "0", "0", "0", "0", "0", "25th"],
    ["2009", "masters of formula 3", "manor motorsport", "1", "0", "0", "0", "0", "", "28th"],
    ["2010", "italian formula 3 championship", "bvm - target racing", "16", "3", "2", "7", "8", "161", "1st"],
    ["2011", "formula renault 3.5 series", "s fortec motorsport", "17", "0", "2", "0", "0", "47", "11th"]
]

Table Column:  season, series, team, races, wins, poles, f___laps, podiums, points, position
DataFrame from database (3 rows) :

season | series | team | races | wins | poles | f___laps | podiums | points | position
2007 | formula renault 2 italy | bvm minardi team | 14 | 0 | 0 | 0 | 1 | 106 | 14th
2007 | eurocup formula renault 2 | bvm minardi team | 6 | 0 | 0 | 0 | 0 |  | nc
2007 | formula renault 2 italy - wi series | bvm minardi team | 4 | 4 | 4 | 4 | 4 | 144 | 1st
table_ids:  [10]

main_table: 1-25557880-1.html.csv table_qa_group:  [10] number of questions:  1


id:  1-25557880-1.html.csv  S:  every team had several wins  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE wins > 0) = (SELECT COUNT(DISTINCT team) FROM T);


prediction:     (SELECT COUNT(*) FROM T WHERE wins > 0) = (SELECT COUNT(DISTINCT team) FROM T)
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------

***********************************************************

2-16776506-2.html.csv  [
    ["outcome", "date", "location", "surface", "opponent_in_final", "score_set1", "score_set2", "score_set3"],
    ["winner", "1999-05-02", "coatzacoalcos , mexico", "hard", "candice jairala", 3, 6, 7],
    ["winner", "1999-07-11", "felixstowe , england", "grass", "karen nugent", 6, 4, 6],
    ["runner-up", "2000-02-06", "wellington , new zealand", "hard", "mirielle dittmann", 6, 7, 6],
    ["runner-up", "2000-05-28", "el paso , texas , usa", "hard", "erin burdette", 1, 6, 3],
    ["runner-up", "2003-09-14", "spoleto , italy", "clay", "lenka snajdrova", 4, 6, 3],
    ["winner", "2005-02-06", "wellington , new zealand", "hard", "mirielle dittmann", 2, 6, 6],
    ["winner", "2005-08-28", "jesi , italy", "hard", "vanessa pinto", 6, 2, 7],
    ["winner", "2006-02-05", "taupo , new zealand", "hard", "natsumi hamamura", 6, 1, 6],
    ["winner", "2006-02-12", "wellington , new zealand", "hard", "katerina kramperová", 6, 4, 6],
    ["winner", "2008-04-20", "mazatlán , mexico", "hard", "anna lubinsky", 6, 2, 6]
]

Table Column:  outcome, date, location, surface, opponent_in_final, score_set1, score_set2, score_set3
DataFrame from database (3 rows) :

outcome | date | location | surface | opponent_in_final | score_set1 | score_set2 | score_set3
winner | 1999-05-02 | coatzacoalcos , mexico | hard | candice jairala | 3 | 6 | 7
winner | 1999-07-11 | felixstowe , england | grass | karen nugent | 6 | 4 | 6
runner-up | 2000-02-06 | wellington , new zealand | hard | mirielle dittmann | 6 | 7 | 6
table_ids:  [11, 12, 13, 14]

main_table: 2-16776506-2.html.csv table_qa_group:  [11, 12, 13, 14] number of questions:  4


id:  2-16776506-2.html.csv  S:  mirielle dittmann was the opponent in the final on hard surface on 6 february 2000 in wellington new zealand  label:  1
answer_sql;  SELECT * FROM T WHERE opponent_in_final = 'mirielle dittmann' AND surface = 'hard' AND date = '2000-02-06' AND location = 'wellington , new zealand';


prediction:       outcome        date  ... score_set2 score_set3
0  runner-up  2000-02-06  ...          7          6

[1 rows x 8 columns]
Gold answer:  1

Gen output:   Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-16776506-2.html.csv  S:  on 2 may 1999 , the surface was hard  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1999-05-02' AND surface = 'hard') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1999-05-02' AND surface = 'hard') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-16776506-2.html.csv  S:  the opponent in final on 6 february 2000 in wellington new zealand on hard surface was katerina kramperová  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2000-02-06' AND location = 'wellington , new zealand' AND surface = 'hard' AND opponent_in_final = 'katerina kramperová') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2000-02-06' AND location = 'wellington , new zealand' AND surface = 'hard' AND opponent_in_final = 'katerina kramperová') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-16776506-2.html.csv  S:  the surface was grass on 2 may 1999  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1999-05-02' AND surface = 'grass') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1999-05-02' AND surface = 'grass') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------

***********************************************************

2-14175075-5.html.csv  [['date', 'site', 'sport', 'winning_team', 'series_wins', 'series_losses'],
 ['2007-9-4', 'cedar rapids', 'm golf', 'iowa state', 2, 0],
 ['2007-9-8', 'des moines', 'volleyball', 'iowa state', 4, 0],
 ['2007-9-9', 'iowa city', 'w soccer', 'tie', 5, 1],
 ['2007-9-15', 'ames', 'football', 'iowa state', 8, 1],
 ['2007-11-10', 'peoria', 'm cross country', 'iowa state', 10, 1],
 ['2007-11-10', 'peoria', 'w cross country', 'iowa', 10, 3],
 ['2007-12-5', 'ames', 'w basketball', 'iowa state', 12, 3],
 ['2007-12-7', 'ames', 'w swimming', 'iowa state', 14, 3],
 ['2007-12-8', 'ames', 'm basketball', 'iowa state', 16, 3],
 ['2007-12-9', 'ames', 'wrestling', 'iowa', 16, 5],
 ['2008-2-22', 'ames', 'w gymnastics', 'iowa state', 18, 5],
 ['2008-3-7', 'iowa city', 'w gymnastics', 'iowa', 18, 7],
 ['2008-4-1', 'ames', 'softball', 'iowa', 18, 9]]

Table Column:  date, site, sport, winning_team, series_wins, series_losses
DataFrame from database (3 rows) :

date | site | sport | winning_team | series_wins | series_losses
2007-9-4 | cedar rapids | m golf | iowa state | 2 | 0
2007-9-8 | des moines | volleyball | iowa state | 4 | 0
2007-9-9 | iowa city | w soccer | tie | 5 | 1
table_ids:  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24]

main_table: 2-14175075-5.html.csv table_qa_group:  [15, 16, 17, 18, 19, 20, 21, 22, 23, 24] number of questions:  10


id:  2-14175075-5.html.csv  S:  cedar rapids is the site with the earliest date  label:  1
answer_sql;  SELECT (SELECT site FROM T ORDER BY date ASC LIMIT 1) = 'cedar rapids';


prediction:     (SELECT site FROM T ORDER BY date ASC LIMIT 1) = 'cedar rapids'
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  volleyball is the sport with the 2nd earliest date  label:  1
answer_sql;  SELECT sport FROM T ORDER BY date ASC LIMIT 1 OFFSET 1;


prediction:               sport
0  w cross country
Gold answer:  1

Direct ans:  w cross country  Gold:  1

Gen output:  w cross country  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  softball is the sport with the latest date  label:  1
answer_sql;  SELECT (SELECT sport FROM T ORDER BY date DESC LIMIT 1) = 'softball';


prediction:     (SELECT sport FROM T ORDER BY date DESC LIMIT 1) = 'softball'
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  w gymnastics is the sport with the earliest date in 2008  label:  1
answer_sql;  SELECT (SELECT MIN(date) FROM T WHERE date LIKE '2008%') = (SELECT MIN(date) FROM T WHERE sport = 'w gymnastics');


prediction:     (SELECT MIN(date) FROM T WHERE date LIKE '2008%') = (SELECT MIN(date) FROM T WHERE sport = 'w gymnastics')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  wrestling is the sport with the latest date in 2007  label:  1
answer_sql;  SELECT (SELECT sport FROM T WHERE date = (SELECT MAX(date) FROM T WHERE date LIKE '2007%')) = 'wrestling';


prediction:     (SELECT sport FROM T WHERE date = (SELECT MAX(date) FROM T WHERE date LIKE '2007%')) = 'wrestling'
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  ames is the site with the earliest date  label:  0
answer_sql;  SELECT (SELECT site FROM T ORDER BY date ASC LIMIT 1) = 'ames';


prediction:     (SELECT site FROM T ORDER BY date ASC LIMIT 1) = 'ames'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  volleyball is the sport with the earliest date  label:  0
answer_sql;  SELECT (SELECT sport FROM T ORDER BY date ASC LIMIT 1) = 'volleyball';


prediction:     (SELECT sport FROM T ORDER BY date ASC LIMIT 1) = 'volleyball'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  softball is the sport with the second latest date  label:  0
answer_sql;  SELECT sport FROM T ORDER BY date DESC LIMIT 1 OFFSET 1;


prediction:            sport
0  w gymnastics
Gold answer:  0

Direct ans:  w gymnastics  Gold:  0

Gen output:  w gymnastics  Gold:  0
Correcet:  4 total:  8 Accuracy:  0.499993750078124

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  w gymnastics is the sport with the earliest date in 2007  label:  0
answer_sql;  SELECT (SELECT MIN(date) FROM T WHERE sport = 'w gymnastics') = (SELECT MIN(date) FROM T WHERE date LIKE '2007%');


prediction:     (SELECT MIN(date) FROM T WHERE sport = 'w gymnastics') = (SELECT MIN(date) FROM T WHERE date LIKE '2007%')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  9 Accuracy:  0.5555493827846357

-----------------------------------------------



id:  2-14175075-5.html.csv  S:  wrestling is the sport with the latest date in 2008  label:  0
answer_sql;  SELECT (SELECT sport FROM T WHERE date = (SELECT MAX(date) FROM T WHERE date LIKE '2008%')) = 'wrestling';


prediction:     (SELECT sport FROM T WHERE date = (SELECT MAX(date) FROM T WHERE date LIKE '2008%')) = 'wrestling'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  10 Accuracy:  0.5999940000599994

-----------------------------------------------

***********************************************************

2-11512626-6.html.csv  [['date', 'opponent', 'score', 'loss', 'attendance', 'record'],
['1997-08-01', 'Pirates', '7 - 6', 'Rincón (4 - 5)', 22657, '52 - 58'],
['1997-08-02', 'Pirates', '6 - 5', 'Swift (4 - 5)', 32388, '52 - 59'],
['1997-08-03', 'Pirates', '8 - 4', 'Reed (3 - 5)', 24989, '52 - 60'],
['1997-08-04', 'Phillies', '7 - 3', 'Castillo (8 - 10)', 15230, '52 - 61'],
['1997-08-05', 'Phillies', '4 - 2', 'Bottalico (2 - 4)', 16428, '53 - 61'],
['1997-08-06', 'Mets', '4 - 0', 'Mlicki (5 - 8)', 26633, '54 - 61'],
['1997-08-07', 'Mets', '12 - 4', 'Swift (4 - 6)', 29536, '54 - 62'],
['1997-08-08', 'Pirates', '5 - 3', 'Lieber (6 - 12)', 48262, '55 - 62'],
['1997-08-09', 'Pirates', '8 - 7', 'Rincón (4 - 6)', 48323, '56 - 62'],
['1997-08-10', 'Pirates', '8 - 7', 'Wilkins (7 - 3)', 48018, '57 - 62'],
['1997-08-12', 'Phillies', '5 - 0', 'Thomson (4 - 7)', 48228, '57 - 63'],
['1997-08-13', 'Phillies', '12 - 8', 'Wright (6 - 8)', 48491, '57 - 64'],
['1997-08-15', 'Mets', '6 - 2', 'Reed (10 - 6)', 48308, '58 - 64'],
['1997-08-16', 'Mets', '7 - 5', 'Mcmichael (7 - 10)', 48311, '59 - 64'],
['1997-08-17', 'Mets', '6 - 4', 'Mlicki (5 - 10)', 48440, '60 - 64'],
['1997-08-19', 'Reds', '6 - 5', 'Wright (6 - 9)', 31722, '60 - 65'],
['1997-08-20', 'Reds', '5 - 3', 'White (1 - 1)', 21968, '61 - 65'],
['1997-08-21', 'Astros', '10 - 4', 'Bailey (9 - 9)', 22962, '61 - 66'],
['1997-08-22', 'Astros', '9 - 1', 'Thomson (5 - 8)', 33061, '61 - 67'],
['1997-08-23', 'Astros', '6 - 3', 'Hudek (0 - 2)', 32374, '62 - 67'],
['1997-08-24', 'Astros', '3 - 1', 'Wright (6 - 10)', 28918, '62 - 68'],
['1997-08-25', 'Reds', '7 - 6', 'Castillo (10 - 11)', 48143, '62 - 69'],
['1997-08-25', 'Reds', '6 - 4', 'Hutton (3 - 2)', 48081, '62 - 70'],
['1997-08-26', 'Reds', '9 - 5', 'Martínez (1 - 1)', 48063, '63 - 70'],
['1997-08-27', 'Reds', '7 - 5', 'Remlinger (6 - 6)', 48032, '64 - 70'],
['1997-08-28', 'Mariners', '9 - 5', 'Olivares (6 - 9)', 48422, '65 - 70'],
['1997-08-29', 'Mariners', '6 - 5', 'Timlin (3 - 3)', 48178, '66 - 70'],
['1997-08-30', 'Athletics', '4 - 3', 'Mohler (1 - 10)', 48308, '67 - 70'],
['1997-08-31', 'Athletics', '10 - 4', 'Oquist (2 - 5)', 48041, '68 - 70']]

Table Column:  date, opponent, score, loss, attendance, record
DataFrame from database (3 rows) :

date | opponent | score | loss | attendance | record
1997-08-01 | Pirates | 7 - 6 | Rincón (4 - 5) | 22657 | 52 - 58
1997-08-02 | Pirates | 6 - 5 | Swift (4 - 5) | 32388 | 52 - 59
1997-08-03 | Pirates | 8 - 4 | Reed (3 - 5) | 24989 | 52 - 60
table_ids:  [25, 26, 27, 28, 29, 30, 31, 32, 33, 34]

main_table: 2-11512626-6.html.csv table_qa_group:  [25, 26, 27, 28, 29, 30, 31, 32, 33, 34] number of questions:  10


id:  2-11512626-6.html.csv  S:  in a game on august 30 , mohler (1 - 10) took the loss while in a game on august 31 oquist (2 - 5) suffered the loss  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1997-08-30' AND loss = 'Mohler (1 - 10)') > 0 AND (SELECT COUNT(*) FROM T WHERE date = '1997-08-31' AND loss = 'Oquist (2 - 5)') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1997-08-30' AND loss = 'Mohler (1 - 10)') > 0 AND (SELECT COUNT(*) FROM T WHERE date = '1997-08-31' AND loss = 'Oquist (2 - 5)') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  only two times was the attendance less than 20000 people and it was on august 4 and august 5  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE attendance < 20000 AND date = '1997-08-04') = 1 AND (SELECT COUNT(*) FROM T WHERE attendance < 20000 AND date = '1997-08-05') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE attendance < 20000 AND date = '1997-08-04') = 1 AND (SELECT COUNT(*) FROM T WHERE attendance < 20000 AND date = '1997-08-05') = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  the attendance on august 26 and august 27 was 48063 and 48032  label:  1
answer_sql;  SELECT (SELECT attendance FROM T WHERE date = '1997-08-26') = 48063 AND (SELECT attendance FROM T WHERE date = '1997-08-27') = 48032;


prediction:     (SELECT attendance FROM T WHERE date = '1997-08-26') = 48063 AND (SELECT attendance FROM T WHERE date = '1997-08-27') = 48032
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  when the score was 10 - 4 , the colorado rockies' record went to 68 - 70 in a game against the athletics  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE score = '10 - 4' AND record = '68 - 70' AND opponent = 'Athletics') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE score = '10 - 4' AND record = '68 - 70' AND opponent = 'Athletics') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  on august 27 remlinger (6 - 6) took the loss as the rockies went to 64 - 70  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1997-08-27' AND loss = 'remlinger (6 - 6)' AND record = '64 - 70') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1997-08-27' AND loss = 'remlinger (6 - 6)' AND record = '64 - 70') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  in a game on august 30 , mogler (1 - 10) won while in a game against oquist  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1997-08-30' AND loss = 'Mogler (1 - 10)' AND opponent = 'Oquist') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1997-08-30' AND loss = 'Mogler (1 - 10)' AND opponent = 'Oquist') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  the attendance was less than 20000 over five times between august 4th and 6th  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date BETWEEN '1997-08-04' AND '1997-08-06' AND attendance < 20000) > 5;


prediction:     (SELECT COUNT(*) FROM T WHERE date BETWEEN '1997-08-04' AND '1997-08-06' AND attendance < 20000) > 5
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  on august 26 the attendance was 24343 and on august 27th the attendance was 2142  label:  0
answer_sql;  SELECT (SELECT attendance FROM T WHERE date = '1997-08-26') = 24343 AND (SELECT attendance FROM T WHERE date = '1997-08-27') = 2142;


prediction:     (SELECT attendance FROM T WHERE date = '1997-08-26') = 24343 AND (SELECT attendance FROM T WHERE date = '1997-08-27') = 2142
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  when the score was 4 - 5 , the athletics record went 53 - 32 against the colorado rockies  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE score = '4 - 5' AND record = '53 - 32' AND opponent = 'Athletics') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE score = '4 - 5' AND record = '53 - 32' AND opponent = 'Athletics') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  9 Accuracy:  0.8888790124554172

-----------------------------------------------



id:  2-11512626-6.html.csv  S:  on august 25 , remlinger (6 - 6) took the win against the rockies  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1997-08-25' AND opponent = 'Rockies' AND loss = 'Remlinger (6 - 6)') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1997-08-25' AND opponent = 'Rockies' AND loss = 'Remlinger (6 - 6)') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  9
Correcet:  9 total:  10 Accuracy:  0.8999910000899991

-----------------------------------------------

***********************************************************

2-12523044-5.html.csv  [
    ["place", "player", "country", "score_1", "score_2", "to_par"],
    [1, "steve stricker", "united states", 70, 69, -1],
    [2, "colin montgomerie", "scotland", 69, 71, 0],
    ["t3", "kenneth ferrie", "england", 71, 70, 1],
    ["t3", "geoff ogilvy", "australia", 71, 70, 1],
    [5, "jim furyk", "united states", 70, 72, 2],
    [5, "pádraig harrington", "ireland", 70, 72, 2],
    [7, "jason dufner", "united states", 72, 71, 3],
    [7, "graeme mcdowell", "northern ireland", 71, 72, 3],
    [7, "phil mickelson", "united states", 70, 73, 3],
    [7, "arron oberholser", "united states", 75, 68, 3]
]

Table Column:  place, player, country, score_1, score_2, to_par
DataFrame from database (3 rows) :

place | player | country | score_1 | score_2 | to_par
1 | steve stricker | united states | 70 | 69 | -1
2 | colin montgomerie | scotland | 69 | 71 | 0
t3 | kenneth ferrie | england | 71 | 70 | 1
table_ids:  [35, 36, 37, 38, 39, 40, 41, 42, 43, 44]

main_table: 2-12523044-5.html.csv table_qa_group:  [35, 36, 37, 38, 39, 40, 41, 42, 43, 44] number of questions:  10


id:  2-12523044-5.html.csv  S:  steve stricker had a score lower than phil mickelson  label:  1
answer_sql;  SELECT (SELECT score_1 FROM T WHERE player = 'steve stricker') < (SELECT score_1 FROM T WHERE player = 'phil mickelson');


prediction:     (SELECT score_1 FROM T WHERE player = 'steve stricker') < (SELECT score_1 FROM T WHERE player = 'phil mickelson')
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  pádraig harrington is the only player from northern ireland  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'pádraig harrington') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'pádraig harrington') = 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  kenneth ferrie and geoff ogilvy were the only players to score a + 1 to par  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player IN ('kenneth ferrie', 'geoff ogilvy')) = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player IN ('kenneth ferrie', 'geoff ogilvy')) = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  steve stricker has the best score out of all of the players from the united states  label:  0
answer_sql;  SELECT (SELECT MAX(score_1) FROM T WHERE country = 'united states') = (SELECT score_1 FROM T WHERE player = 'steve stricker' AND country = 'united states');


prediction:     (SELECT MAX(score_1) FROM T WHERE country = 'united states') = (SELECT score_1 FROM T WHERE player = 'steve stricker' AND country = 'united states')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  there are 5 players that are from the united states  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE country = 'united states') = 5;


prediction:     (SELECT COUNT(*) FROM T WHERE country = 'united states') = 5
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  steve stricker of of scotland had lower score than of phil mickelson of united states  label:  0
answer_sql;  SELECT (SELECT score_1 FROM T WHERE player = 'steve stricker' AND country = 'united states') < (SELECT score_1 FROM T WHERE player = 'phil mickelson' AND country = 'scotland');


prediction:    (SELECT score_1 FROM T WHERE player = 'steve stricker' AND country = 'united states') < (SELECT score_1 FROM T WHERE player = 'phil mickelson' AND country = 'scotland')
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  4 total:  6 Accuracy:  0.6666555557407376

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  pádraig harrington and graeme mcdowell are both fron northern ireland  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'pádraig harrington') > 0 AND (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'graeme mcdowell') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'pádraig harrington') > 0 AND (SELECT COUNT(*) FROM T WHERE country = 'northern ireland' AND player = 'graeme mcdowell') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  kenneth ferrie and geoff ogilvy of australia were the only players to score a + 1 to par  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player = 'kenneth ferrie') = 1 AND (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player = 'geoff ogilvy') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player = 'kenneth ferrie') = 1 AND (SELECT COUNT(*) FROM T WHERE to_par = 1 AND player = 'geoff ogilvy') = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  6
Correcet:  6 total:  8 Accuracy:  0.7499906251171861

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  steve stricker of united states has the lowest score among all the players  label:  1
answer_sql;  SELECT (SELECT MIN(score_1) FROM T WHERE player = 'steve stricker' AND country = 'united states') = (SELECT MIN(score_1) FROM T);


prediction:     (SELECT MIN(score_1) FROM T WHERE player = 'steve stricker' AND country = 'united states') = (SELECT MIN(score_1) FROM T)
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  6 total:  9 Accuracy:  0.6666592593415629

-----------------------------------------------



id:  2-12523044-5.html.csv  S:  there are more players from england than of united states during the event in the 2nd round  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE country = 'england' AND score_2 IS NOT NULL) > (SELECT COUNT(*) FROM T WHERE country = 'united states' AND score_2 IS NOT NULL);


prediction:     (SELECT COUNT(*) FROM T WHERE country = 'england' AND score_2 IS NOT NULL) > (SELECT COUNT(*) FROM T WHERE country = 'united states' AND score_2 IS NOT NULL)
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  10 Accuracy:  0.6999930000699993

-----------------------------------------------

***********************************************************

2-10301911-2.html.csv  [
    ["rank", "rider", "team", "speed_mph", "time"],
    [1, "frank whiteway", "suzuki", 89.94, "2:5.52.0"],
    [2, "gordon pantall", "triumph", 88.9, "2:7.20.0"],
    [3, "ray knight", "triumph", 88.89, "2:7.20.4"],
    [4, "rbaylie", "triumph", 87.58, "2:9.15.0"],
    [5, "graham penny", "triumph", 86.7, "2:10.34.4"],
    [6, "jwade", "suzuki", 85.31, "2:12.42.0"],
    [7, "brian finch", "velocette", 83.86, "2:14.59.0"]
]

Table Column:  rank, rider, team, speed_mph, time
DataFrame from database (3 rows) :

rank | rider | team | speed_mph | time
1 | frank whiteway | suzuki | 89.94 | 2:5.52.0
2 | gordon pantall | triumph | 88.9 | 2:7.20.0
3 | ray knight | triumph | 88.89 | 2:7.20.4
table_ids:  [45, 46]

main_table: 2-10301911-2.html.csv table_qa_group:  [45, 46] number of questions:  2


id:  2-10301911-2.html.csv  S:  brian finch rank is greater than 3 and he finished with a time of 2:14.59.0  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE rank > 3 AND time = '2:14.59.0' AND rider = 'brian finch') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE rank > 3 AND time = '2:14.59.0' AND rider = 'brian finch') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-10301911-2.html.csv  S:  the time value for the rider brian finch , team suzuki and a rank greater than 3 is 2:14.59.0  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE rider = 'brian finch' AND team = 'suzuki' AND rank > 3 AND time = '2:14.59.0') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE rider = 'brian finch' AND team = 'suzuki' AND rank > 3 AND time = '2:14.59.0') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------

***********************************************************

2-15547694-1.html.csv  [
    ['party', 'panel_type', 'panel_count', 'nominated_by', 'total'],
    ['fianna fáil', 'administrative_panel', 4, 'nominated_by_the_taoiseach', 21],
    ['fianna fáil', 'agricultural_panel', 4, 'nominated_by_the_taoiseach', 21],
    ['fianna fáil', 'cultural_and_educational_panel', 2, 'nominated_by_the_taoiseach', 21],
    ['fianna fáil', 'industrial_and_commercial_panel', 3, 'nominated_by_the_taoiseach', 21],
    ['fine gael', 'administrative_panel', 1, 'nominated_by_the_taoiseach', 9],
    ['fine gael', 'agricultural_panel', 3, 'nominated_by_the_taoiseach', 9],
    ['fine gael', 'cultural_and_educational_panel', 2, 'nominated_by_the_taoiseach', 9],
    ['fine gael', 'industrial_and_commercial_panel', 2, 'nominated_by_the_taoiseach', 9],
    ['labour party', 'industrial_and_commercial_panel', 1, 'nominated_by_the_taoiseach', 8],
    ['labour party', 'labour_panel', 5, 'nominated_by_the_taoiseach', 8],
    ['labour party', 'nominated_by_the_taoiseach', 2, 'nominated_by_the_taoiseach', 8],
    ['clann na talmhan', 'agricultural_panel', 2, 'nominated_by_the_taoiseach', 3],
    ['clann na talmhan', 'industrial_and_commercial_panel', 1, 'nominated_by_the_taoiseach', 3],
    ['independent', 'agricultural_panel', 1, 'university_of_dublin', 9],
    ['independent', 'industrial_and_commercial_panel', 1, 'university_of_dublin', 9],
    ['independent', 'national_university_of_ireland', 1, 'nominated_by_the_taoiseach', 9],
    ['independent', 'university_of_dublin', 3, 'nominated_by_the_taoiseach', 9]
]

Table Column:  party, panel_type, panel_count, nominated_by, total
DataFrame from database (3 rows) :

party | panel_type | panel_count | nominated_by | total
fianna fáil | administrative_panel | 4 | nominated_by_the_taoiseach | 21
fianna fáil | agricultural_panel | 4 | nominated_by_the_taoiseach | 21
fianna fáil | cultural_and_educational_panel | 2 | nominated_by_the_taoiseach | 21
table_ids:  [47, 48, 49, 50, 51, 52, 53, 54, 55, 56]

main_table: 2-15547694-1.html.csv table_qa_group:  [47, 48, 49, 50, 51, 52, 53, 54, 55, 56] number of questions:  10


id:  2-15547694-1.html.csv  S:  the agricultural panel and labour panel both have 11 total members  label:  1
answer_sql;  SELECT (SELECT panel_count FROM T WHERE panel_type = 'agricultural_panel') = 11 AND (SELECT panel_count FROM T WHERE panel_type = 'labour_panel') = 11;


prediction:     (SELECT panel_count FROM T WHERE panel_type = 'agricultural_panel') = 11 AND (SELECT panel_count FROM T WHERE panel_type = 'labour_panel') = 11
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  the party with 21 total members has 18 more members than the party with the fewest total members  label:  1
answer_sql;  SELECT (SELECT MAX(total) FROM T) - (SELECT MIN(total) FROM T) = 18;


prediction:     (SELECT MAX(total) FROM T) - (SELECT MIN(total) FROM T) = 18
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  university of dublin is the only group of origin made up entirely of members from one party  label:  1
answer_sql;  SELECT (SELECT COUNT(DISTINCT party) FROM T WHERE panel_type = 'university_of_dublin') = 1;


prediction:     (SELECT COUNT(DISTINCT party) FROM T WHERE panel_type = 'university_of_dublin') = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  nominated by the taoiseach has the most members from one party  label:  1
answer_sql;  SELECT party
FROM T
GROUP BY party
ORDER BY COUNT(*) DESC
LIMIT 1;


prediction:           party
0  independent
Gold answer:  1

Direct ans:  independent  Gold:  1

Gen output:  independent  Gold:  1
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  industrial and commercial panel has four more members than cultural and educational panel  label:  1
answer_sql;  SELECT (SELECT panel_count FROM T WHERE panel_type = 'industrial_and_commercial_panel') = (SELECT panel_count FROM T WHERE panel_type = 'cultural_and_educational_panel') + 4;


prediction:     (SELECT panel_count FROM T WHERE panel_type = 'industrial_and_commercial_panel') = (SELECT panel_count FROM T WHERE panel_type = 'cultural_and_educational_panel') + 4
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  the agricultural panel has 2 members and the labour panel has 5 members  label:  0
answer_sql;  SELECT (SELECT panel_count FROM T WHERE panel_type = 'agricultural_panel') = 2 AND (SELECT panel_count FROM T WHERE panel_type = 'labour_panel') = 5;


prediction:     (SELECT panel_count FROM T WHERE panel_type = 'agricultural_panel') = 2 AND (SELECT panel_count FROM T WHERE panel_type = 'labour_panel') = 5
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  the party with 21 total members has 9 more members than the party with the second most members  label:  0
answer_sql;  SELECT (SELECT party FROM T GROUP BY party ORDER BY total DESC LIMIT 1) = (SELECT party FROM T GROUP BY party ORDER BY total DESC LIMIT 2 OFFSET 1) AND (SELECT total FROM T GROUP BY party ORDER BY total DESC LIMIT 1) = (SELECT total FROM T GROUP BY party ORDER BY total DESC LIMIT 2 OFFSET 1) + 9;


prediction:     (SELECT party FROM T GROUP BY party ORDER BY total DESC LIMIT 1) = (SELECT party FROM T GROUP BY party ORDER BY total DESC LIMIT 2 OFFSET 1) AND (SELECT total FROM T GROUP BY party ORDER BY total DESC LIMIT 1) = (SELECT total FROM T GROUP BY party ORDER BY total DESC LIMIT 2 OFFSET 1) + 9
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  national university of ireland is the only group of origin made up mostly of members from two parties  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE panel_type = 'national university of ireland' GROUP BY party HAVING COUNT(*) > 1) = 2;


prediction:    (SELECT COUNT(*) FROM T WHERE panel_type = 'national university of ireland' GROUP BY party HAVING COUNT(*) > 1) = 2
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  4 total:  8 Accuracy:  0.499993750078124

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  agricultural panel has the most members from one party  label:  0
answer_sql;  SELECT panel_type
FROM T
GROUP BY panel_type
ORDER BY panel_count DESC
LIMIT 1;


prediction:       panel_type
0  labour_panel
Gold answer:  0

Direct ans:  labour_panel  Gold:  0

Gen output:  labour_panel  Gold:  0
Correcet:  4 total:  9 Accuracy:  0.4444395062277086

-----------------------------------------------



id:  2-15547694-1.html.csv  S:  administrative panel has four more members than national university of ireland  label:  1
answer_sql;  SELECT (SELECT panel_count FROM T WHERE panel_type = 'administrative_panel') = (SELECT panel_count FROM T WHERE panel_type = 'national_university_of_ireland') + 4;


prediction:     (SELECT panel_count FROM T WHERE panel_type = 'administrative_panel') = (SELECT panel_count FROM T WHERE panel_type = 'national_university_of_ireland') + 4
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  4 total:  10 Accuracy:  0.39999600003999963

-----------------------------------------------

***********************************************************

2-15214004-2.html.csv  [
    ["pick", "mls_team", "player", "position", "affiliation"],
    [15, "san jose earthquakes", "shea salinas", "m", "furman carolina dynamo"],
    [16, "new york red bulls", "eric brunner", "d", "ohio state michigan bucks"],
    [17, "real salt lake", "alex nimo", "f", "generation adidas"],
    [18, "new england revolution", "michael videira", "m", "duke cary railhawks u23 's"],
    [19, "fc dallas", "eric avila", "m", "uc santa barbara ventura county fusion"],
    [20, "columbus crew", "george josten", "m / f", "gonzaga michigan bucks"],
    [21, "los angeles galaxy", "ely allen", "f / m", "washington"],
    [22, "columbus crew", "ricardo pierre - louis", "f", "lee university cape cod crusaders"],
    [23, "kansas city wizards", "yomby william", "d", "old dominion hampton roads piranhas"],
    [24, "dc united", "andrew jacobson", "m", "california"],
    [25, "kansas city wizards", "jonathan leathers", "d", "furman atlanta silverbacks u23 's"],
    [26, "chicago fire", "peter lowry", "m / f", "santa clara san jose frogs"],
    [27, "new england revolution", "joe germanese", "m", "duke cary railhawks u23 's"],
    [28, "toronto fc", "brian edwards", "gk", "wake forest"]
]

Table Column:  pick, mls_team, player, position, affiliation
DataFrame from database (3 rows) :

pick | mls_team | player | position | affiliation
15 | san jose earthquakes | shea salinas | m | furman carolina dynamo
16 | new york red bulls | eric brunner | d | ohio state michigan bucks
17 | real salt lake | alex nimo | f | generation adidas
table_ids:  [57, 58, 59, 60]

main_table: 2-15214004-2.html.csv table_qa_group:  [57, 58, 59, 60] number of questions:  4


id:  2-15214004-2.html.csv  S:  joe germanese was the 27th pick  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'joe germanese' AND pick = 27) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'joe germanese' AND pick = 27) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-15214004-2.html.csv  S:  jonathan leathers was picked 25th  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'jonathan leathers' AND pick = 25) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'jonathan leathers' AND pick = 25) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-15214004-2.html.csv  S:  joe germanese is the player with the number of 24 picks  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'joe germanese' AND pick = 24) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'joe germanese' AND pick = 24) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-15214004-2.html.csv  S:  peter lowry 's pick number was 25  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'peter lowry' AND pick = 25) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'peter lowry' AND pick = 25) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------

***********************************************************

1-25277363-2.html.csv  [
    ["no_in_series", "no_in_season", "title", "directed_by", "written_by", "original_air_date"],
    [145, 1, "it was a dark and stormy tni", "john tracy", "marc warren & dennis rinsler", "1993-09-14"],
    [146, 2, "the apartment", "john tracy", "tom burkhard", "1993-09-21"],
    [147, 3, "wrong - way tanner", "john tracy", "jamie tatham & chuck tatham", "1993-09-28"],
    [148, 4, "tough love", "joel zwick", "ellen guylas", "1993-10-05"],
    [149, 5, "fast friends", "john tracy", "bob sand", "1993-10-12"],
    [150, 6, "smash club : the next generation", "john tracy", "carolyn omine", "1993-10-19"],
    [151, 7, "high anxiety", "john tracy", "tom amundsen", "1993-10-26"],
    [152, 8, "another opening , another no show", "joel zwick", "story by : elias davis teleplay by : tom burkhard", "1993-11-02"],
    [153, 9, "2024-4-16 of the rhino", "james o'keefe", "adam i lapidus", "1993-11-09"],
    [154, 10, "the prying game", "john tracy", "ellen guylas", "1993-11-16"],
    [155, 11, "the bicycle thief", "john tracy", "chuck tatham & jamie tatham", "1993-11-23"],
    [156, 12, "support your local parents", "james o'keefe", "bob sand", "1993-11-30"],
    [157, 13, "the perfect couple", "john tracy", "marc warren & dennis rinsler", "1993-12-14"],
    [158, 14, "is it true about stephanie", "joel zwick", "carolyn omine", "1994-01-04"],
    [159, 15, "the test", "john tracy", "dan chasin & linda lane", "1994-01-11"],
    [160, 16, "joey 's funny valentine", "john tracy", "adam i lapidus", "1994-01-25"],
    [161, 17, "the last dance", "john tracy", "tom amundsen", "1994-02-08"],
    [162, 18, "kissing cousins", "john tracy", "tom burkhard", "1994-02-15"],
    [163, 19, "love on the rocks", "tom rickard", "ellen guylas", "1994-03-01"]
]

Table Column:  no_in_series, no_in_season, title, directed_by, written_by, original_air_date
DataFrame from database (3 rows) :

no_in_series | no_in_season | title | directed_by | written_by | original_air_date
145 | 1 | it was a dark and stormy tni | john tracy | marc warren & dennis rinsler | 1993-09-14
146 | 2 | the apartment | john tracy | tom burkhard | 1993-09-21
147 | 3 | wrong - way tanner | john tracy | jamie tatham & chuck tatham | 1993-09-28
table_ids:  [61, 62, 63, 64, 65]

main_table: 1-25277363-2.html.csv table_qa_group:  [61, 62, 63, 64, 65] number of questions:  5


id:  1-25277363-2.html.csv  S:  bob sand wrote episode 149  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE written_by LIKE '%bob sand%') > 0 AND (SELECT COUNT(*) FROM T WHERE no_in_series = 149) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE written_by LIKE '%bob sand%') > 0 AND (SELECT COUNT(*) FROM T WHERE no_in_series = 149) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-25277363-2.html.csv  S:  tough love was the title of episode 148  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE no_in_series = 148 AND title = 'tough love') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE no_in_series = 148 AND title = 'tough love') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  1-25277363-2.html.csv  S:  fast friends originally aired on october 12 , 1993  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE title = 'fast friends' AND original_air_date = '1993-10-12') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE title = 'fast friends' AND original_air_date = '1993-10-12') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  1-25277363-2.html.csv  S:  fast friends originally aired on october11 , 1992  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE title = 'fast friends' AND original_air_date = '1992-10-11') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE title = 'fast friends' AND original_air_date = '1992-10-11') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  1-25277363-2.html.csv  S:  the episode number in the series the test is before 148.0  label:  0
answer_sql;  SELECT (SELECT MAX(no_in_series) FROM T) < 148.0;


prediction:     (SELECT MAX(no_in_series) FROM T) < 148.0
0                                          0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  5 Accuracy:  0.999980000399992

-----------------------------------------------

***********************************************************


Process finished with exit code 0


/Users/mnahid/Documents/NormTab/bin/python /Users/mnahid/Documents/Project/NormTab/run_normtab_tab_tf_eval.py
/Users/mnahid/Documents/NormTab/lib/python3.10/site-packages/fuzzywuzzy/fuzz.py:11: UserWarning: Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning
  warnings.warn('Using slow pure-python SequenceMatcher. Install python-Levenshtein to remove this warning')
{'1-24560733-1.html.csv': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], '1-25557880-1.html.csv': [10], '2-16776506-2.html.csv': [11, 12, 13, 14], '2-14175075-5.html.csv': [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], '2-11512626-6.html.csv': [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], '2-12523044-5.html.csv': [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], '2-10301911-2.html.csv': [45, 46], '2-15547694-1.html.csv': [47, 48, 49, 50, 51, 52, 53, 54, 55, 56], '2-15214004-2.html.csv': [57, 58, 59, 60], '1-25277363-2.html.csv': [61, 62, 63, 64, 65], '1-18600760-10.html.csv': [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], '1-2126093-3.html.csv': [78, 79, 80, 81], '2-12817505-2.html.csv': [82, 83, 84, 85, 86, 87, 88, 89, 90], '2-1111973-1.html.csv': [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], '2-17245513-1.html.csv': [101, 102, 103, 104, 105], '1-2370579-1.html.csv': [106, 107, 108, 109, 110, 111, 112, 113], '2-12582968-1.html.csv': [114, 115, 116, 117, 118, 119, 120, 121, 122, 123], '2-11545282-15.html.csv': [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], '2-14291300-7.html.csv': [135, 136, 137, 138], '2-17025909-3.html.csv': [139, 140, 141, 142], '2-12076689-7.html.csv': [143, 144, 145, 146, 147, 148, 149, 150, 151, 152], '2-11545282-1.html.csv': [153, 154, 155, 156, 157, 158, 159, 160, 161, 162], '2-1015521-1.html.csv': [163, 164, 165, 166, 167, 168, 169, 170, 171, 172], '2-16835332-3.html.csv': [173, 174, 175, 176, 177, 178, 179, 180], '1-29789-1.html.csv': [181, 182], '1-1697190-2.html.csv': [183, 184, 185], '2-18844321-1.html.csv': [186, 187, 188, 189, 190, 191, 192, 193, 194], '2-10826385-15.html.csv': [195, 196, 197, 198, 199, 200, 201, 202, 203, 204], '1-2150776-1.html.csv': [205, 206, 207, 208, 209, 210, 211, 212], '2-15100419-2.html.csv': [213], '1-14562722-2.html.csv': [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], '2-18963715-1.html.csv': [225, 226, 227, 228], '2-11650849-7.html.csv': [229, 230], '2-11051845-5.html.csv': [231, 232, 233, 234, 235, 236, 237, 238, 239, 240], '1-12834315-2.html.csv': [241, 242, 243], '2-187504-13.html.csv': [244, 245, 246, 247, 248, 249, 250, 251, 252, 253], '2-15272585-8.html.csv': [254, 255, 256, 257, 258, 259, 260, 261, 262, 263], '2-16653153-30.html.csv': [264, 265, 266, 267, 268, 269, 270, 271, 272, 273], '2-12206617-3.html.csv': [274, 275, 276, 277, 278, 279, 280, 281, 282, 283], '2-17933602-1.html.csv': [284, 285, 286, 287, 288, 289, 290, 291, 292, 293], '2-10814487-4.html.csv': [294, 295, 296, 297], '2-16623894-37.html.csv': [298, 299, 300, 301, 302], '2-17751797-4.html.csv': [303, 304, 305, 306, 307, 308, 309, 310, 311], '2-11545282-4.html.csv': [312, 313, 314, 315, 316, 317, 318, 319, 320, 321], '1-1341522-41.html.csv': [322, 323, 324, 325, 326, 327], '2-16409445-1.html.csv': [328, 329, 330], '2-18622227-6.html.csv': [331, 332, 333, 334, 335, 336, 337, 338, 339, 340], '2-17340355-10.html.csv': [341, 342, 343, 344, 345, 346, 347, 348, 349, 350], '2-17338083-13.html.csv': [351, 352, 353, 354, 355, 356], '2-11821711-13.html.csv': [357, 358], '2-13312898-28.html.csv': [359, 360, 361, 362, 363, 364, 365, 366, 367, 368], '1-21092444-1.html.csv': [369, 370, 371, 372, 373, 374, 375], '2-18899538-1.html.csv': [376, 377, 378, 379, 380, 381, 382], '2-14975-5.html.csv': [383, 384], '1-16090262-1.html.csv': [385, 386, 387, 388, 389], '2-16218498-1.html.csv': [390, 391, 392, 393, 394, 395, 396, 397, 398, 399], '2-12423174-1.html.csv': [400, 401, 402, 403, 404, 405, 406, 407, 408, 409], '2-1122988-1.html.csv': [410, 411, 412, 413], '2-11206371-3.html.csv': [414, 415], '2-12472200-7.html.csv': [416, 417, 418, 419, 420, 421, 422, 423, 424, 425], '1-27833469-1.html.csv': [426, 427, 428, 429, 430, 431, 432], '2-1122485-2.html.csv': [433, 434, 435, 436, 437, 438, 439, 440, 441, 442], '2-10806592-9.html.csv': [443, 444, 445, 446, 447, 448, 449, 450, 451, 452], '2-16023753-2.html.csv': [453, 454, 455, 456, 457, 458, 459, 460, 461], '2-17245540-5.html.csv': [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475], '2-10747009-18.html.csv': [476, 477, 478, 479], '2-1564278-3.html.csv': [480, 481, 482, 483, 484, 485, 486, 487, 488, 489], '1-10568553-1.html.csv': [490, 491, 492, 493, 494, 495, 496, 497], '2-11565999-5.html.csv': [498, 499], '1-28853064-15.html.csv': [500, 501, 502], '2-1554049-2.html.csv': [503, 504, 505, 506, 507, 508, 509], '1-1341690-13.html.csv': [510, 511], '2-18662685-8.html.csv': [512, 513, 514, 515], '2-147235-16.html.csv': [516, 517, 518, 519, 520, 521, 522, 523, 524, 525], '2-10776330-7.html.csv': [526, 527, 528, 529, 530, 531, 532, 533, 534, 535], '2-15399415-1.html.csv': [536, 537, 538, 539], '2-17968282-1.html.csv': [540, 541, 542, 543], '1-11210576-3.html.csv': [544, 545, 546, 547], '2-16778063-2.html.csv': [548, 549, 550], '2-14369924-1.html.csv': [551, 552, 553, 554, 555, 556, 557, 558, 559, 560], '2-15845253-1.html.csv': [561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], '2-13041602-7.html.csv': [581, 582, 583, 584, 585, 586, 587, 588, 589, 590], '1-2933761-1.html.csv': [591, 592, 593, 594, 595, 596, 597, 598, 599, 600], '2-17703223-7.html.csv': [601, 602, 603], '1-27700375-11.html.csv': [604, 605, 606, 607, 608, 609, 610, 611, 612, 613], '1-28967275-2.html.csv': [614, 615, 616, 617, 618, 619, 620, 621, 622], '2-1467600-1.html.csv': [623, 624, 625], '2-18409326-1.html.csv': [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642], '2-14123212-1.html.csv': [643, 644, 645, 646, 647, 648, 649, 650, 651, 652], '2-1486444-3.html.csv': [653, 654, 655, 656, 657, 658, 659], '2-16909120-1.html.csv': [660], '2-17916431-2.html.csv': [661, 662, 663, 664, 665, 666, 667, 668, 669, 670], '2-15780049-8.html.csv': [671, 672, 673, 674], '2-16299790-6.html.csv': [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], '2-10652530-2.html.csv': [690, 691, 692, 693, 694, 695, 696], '2-1023439-2.html.csv': [697, 698], '2-13990653-2.html.csv': [699, 700, 701, 702, 703], '1-29063233-1.html.csv': [704, 705, 706, 707, 708, 709, 710, 711, 712, 713], '2-17438913-3.html.csv': [714, 715, 716, 717, 718, 719, 720, 721, 722, 723], '2-17086086-2.html.csv': [724, 725, 726, 727, 728], '2-17138681-2.html.csv': [729], '2-14255774-8.html.csv': [730, 731, 732, 733, 734, 735, 736, 737, 738, 739], '2-1305286-7.html.csv': [740, 741, 742, 743], '2-14305653-58.html.csv': [744, 745, 746, 747, 748, 749, 750, 751, 752, 753], '2-1111662-2.html.csv': [754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765], '2-15753390-2.html.csv': [766, 767, 768, 769], '2-16778155-2.html.csv': [770, 771, 772, 773], '1-20704243-5.html.csv': [774, 775, 776, 777, 778, 779], '2-15315276-1.html.csv': [780, 781, 782, 783, 784], '2-18049082-6.html.csv': [785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795], '2-14101654-10.html.csv': [796, 797, 798, 799, 800, 801, 802, 803, 804, 805], '2-18607260-13.html.csv': [806, 807, 808, 809, 810, 811, 812, 813, 814, 815], '2-18096431-7.html.csv': [816, 817, 818, 819, 820, 821, 822, 823, 824, 825], '2-18169093-3.html.csv': [826, 827, 828, 829, 830, 831, 832, 833, 834, 835], '2-17514817-1.html.csv': [836, 837, 838, 839, 840, 841, 842, 843, 844], '1-23886181-1.html.csv': [845, 846, 847, 848, 849, 850, 851, 852, 853, 854], '1-29395291-2.html.csv': [855, 856, 857, 858, 859, 860, 861, 862, 863, 864], '2-1122039-1.html.csv': [865, 866, 867, 868, 869, 870, 871, 872, 873, 874], '2-1520559-1.html.csv': [875, 876, 877, 878, 879, 880, 881, 882, 883, 884], '2-11355733-15.html.csv': [885, 886, 887, 888], '2-15654720-1.html.csv': [889, 890], '2-11753791-1.html.csv': [891], '2-14756291-5.html.csv': [892, 893, 894], '2-16570286-3.html.csv': [895, 896, 897, 898, 899, 900, 901, 902, 903], '2-18084-3.html.csv': [904, 905, 906, 907, 908, 909, 910, 911, 912, 913], '2-12206243-10.html.csv': [914, 915, 916, 917, 918, 919, 920, 921, 922], '1-25774493-3.html.csv': [923, 924, 925, 926], '2-12019734-7.html.csv': [927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938], '1-18950570-4.html.csv': [939, 940], '2-15547582-1.html.csv': [941], '2-10724559-2.html.csv': [942, 943, 944, 945, 946, 947, 948], '2-1122319-1.html.csv': [949, 950], '2-100290-1.html.csv': [951, 952, 953], '2-17442575-3.html.csv': [954, 955, 956, 957], '1-16168849-1.html.csv': [958, 959, 960, 961], '2-10926568-2.html.csv': [962, 963, 964, 965], '1-2562572-19.html.csv': [966, 967, 968, 969], '2-17286852-1.html.csv': [970, 971, 972, 973, 974, 975, 976, 977, 978, 979], '2-1381359-2.html.csv': [980, 981, 982, 983, 984, 985, 986, 987], '1-27547668-2.html.csv': [988, 989, 990, 991, 992, 993, 994, 995, 996, 997], '2-12758642-2.html.csv': [998, 999, 1000, 1001, 1002, 1003], '2-11978803-1.html.csv': [1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011], '2-16388398-3.html.csv': [1012, 1013, 1014, 1015, 1016, 1017], '2-18662019-2.html.csv': [1018, 1019], '2-12204442-1.html.csv': [1020, 1021, 1022, 1023, 1024, 1025], '2-18138132-2.html.csv': [1026, 1027, 1028, 1029, 1030, 1031, 1032], '2-1228251-1.html.csv': [1033, 1034], '2-14347797-7.html.csv': [1035, 1036], '2-17634218-19.html.csv': [1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046], '1-11715748-2.html.csv': [1047, 1048, 1049, 1050, 1051], '2-10775890-3.html.csv': [1052, 1053, 1054], '2-15855923-1.html.csv': [1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], '2-15149189-1.html.csv': [1063, 1064, 1065], '2-18842944-2.html.csv': [1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075], '2-13135264-6.html.csv': [1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085], '2-18357242-2.html.csv': [1086, 1087], '1-2655016-4.html.csv': [1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097], '2-17443121-2.html.csv': [1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107], '2-17012578-2.html.csv': [1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118], '2-10167122-1.html.csv': [1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127], '2-18700010-1.html.csv': [1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137], '2-10809368-12.html.csv': [1138, 1139, 1140, 1141, 1142, 1143, 1144], '2-14105731-8.html.csv': [1145, 1146, 1147], '2-1613392-2.html.csv': [1148], '2-12617978-9.html.csv': [1149, 1150, 1151, 1152, 1153, 1154], '1-27755603-10.html.csv': [1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164], '1-11960407-2.html.csv': [1165, 1166], '2-11983898-4.html.csv': [1167, 1168, 1169, 1170, 1171, 1172], '2-1451581-1.html.csv': [1173, 1174, 1175, 1176, 1177, 1178, 1179], '2-18569011-14.html.csv': [1180, 1181, 1182], '2-17626199-35.html.csv': [1183, 1184, 1185, 1186], '2-12546630-1.html.csv': [1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196], '2-11692087-1.html.csv': [1197, 1198, 1199, 1200], '2-15168206-1.html.csv': [1201, 1202, 1203], '2-17437287-6.html.csv': [1204, 1205, 1206, 1207, 1208, 1209, 1210], '1-10819266-8.html.csv': [1211, 1212, 1213, 1214, 1215, 1216], '2-17200019-10.html.csv': [1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226], '2-18842947-2.html.csv': [1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236], '1-24319661-5.html.csv': [1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244], '2-1590321-59.html.csv': [1245, 1246], '2-10659538-3.html.csv': [1247, 1248, 1249], '2-14783550-1.html.csv': [1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259], '1-2649597-1.html.csv': [1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269], '1-23285849-5.html.csv': [1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279], '2-17486851-2.html.csv': [1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287], '2-15807932-2.html.csv': [1288, 1289, 1290, 1291], '2-18855244-2.html.csv': [1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301], '2-13167639-5.html.csv': [1302, 1303, 1304, 1305, 1306], '2-17231125-6.html.csv': [1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314], '1-1341690-20.html.csv': [1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329], '1-23248940-9.html.csv': [1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339], '2-10776868-9.html.csv': [1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348], '2-17360840-7.html.csv': [1349], '2-17445678-2.html.csv': [1350, 1351], '2-12207158-2.html.csv': [1352, 1353], '2-18160020-8.html.csv': [1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361], '1-24132054-1.html.csv': [1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371], '1-2248784-4.html.csv': [1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380], '2-12392804-3.html.csv': [1381, 1382, 1383], '2-11105214-2.html.csv': [1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393], '1-25461946-5.html.csv': [1394, 1395, 1396, 1397, 1398], '2-1075296-2.html.csv': [1399], '2-17915-12.html.csv': [1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409], '2-18552926-8.html.csv': [1410, 1411, 1412, 1413], '2-17445451-2.html.csv': [1414, 1415, 1416], '2-11025881-1.html.csv': [1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426], '2-17445673-2.html.csv': [1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436], '2-10944289-2.html.csv': [1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444], '2-14669089-2.html.csv': [1445, 1446, 1447, 1448], '1-1341640-14.html.csv': [1449, 1450, 1451, 1452, 1453, 1454], '2-10918196-1.html.csv': [1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464], '2-11312764-4.html.csv': [1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473], '1-27902171-8.html.csv': [1474, 1475, 1476, 1477, 1478], '2-17150259-1.html.csv': [1479, 1480], '2-18576668-1.html.csv': [1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490], '2-1630554-8.html.csv': [1491, 1492], '2-11097420-1.html.csv': [1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502], '1-27784580-1.html.csv': [1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512], '2-11677760-30.html.csv': [1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522], '2-15198842-45.html.csv': [1523], '2-10809157-19.html.csv': [1524, 1525, 1526, 1527, 1528], '2-15352703-1.html.csv': [1529, 1530], '2-15627191-3.html.csv': [1531, 1532, 1533, 1534], '2-16083989-1.html.csv': [1535, 1536, 1537, 1538, 1539], '2-15194193-3.html.csv': [1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549], '2-1219581-1.html.csv': [1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558], '2-16369528-1.html.csv': [1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566], '2-17807292-5.html.csv': [1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576], '2-1283036-1.html.csv': [1577, 1578, 1579], '1-27332038-1.html.csv': [1580, 1581, 1582, 1583, 1584, 1585, 1586], '2-17120964-6.html.csv': [1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596], '2-18332376-1.html.csv': [1597, 1598, 1599, 1600], '2-11739153-7.html.csv': [1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610], '2-14876228-1.html.csv': [1611, 1612], '2-15930479-1.html.csv': [1613, 1614, 1615, 1616], '1-13282157-1.html.csv': [1617, 1618, 1619, 1620, 1621], '1-2602958-5.html.csv': [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631], '2-14609295-5.html.csv': [1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], '2-17111841-1.html.csv': [1642, 1643], '2-10883333-10.html.csv': [1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653], '2-1031852-2.html.csv': [1654, 1655], '2-18925475-1.html.csv': [1656, 1657], '2-17288845-11.html.csv': [1658, 1659, 1660], '2-17231086-6.html.csv': [1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670], '2-18496100-2.html.csv': [1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680], '2-17345263-7.html.csv': [1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689], '2-1184821-1.html.csv': [1690, 1691, 1692], '2-15918328-13.html.csv': [1693, 1694, 1695, 1696, 1697, 1698, 1699], '1-1505809-2.html.csv': [1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708], '2-1169552-2.html.csv': [1709, 1710, 1711, 1712, 1713, 1714], '2-13312898-25.html.csv': [1715, 1716, 1717, 1718, 1719, 1720, 1721], '1-12125069-2.html.csv': [1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], '2-18747741-1.html.csv': [1730, 1731, 1732, 1733], '2-15451468-2.html.csv': [1734, 1735, 1736, 1737], '1-11602313-4.html.csv': [1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749], '2-18546846-1.html.csv': [1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], '2-10773616-14.html.csv': [1760, 1761, 1762], '2-167235-8.html.csv': [1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772], '1-18950570-2.html.csv': [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784], '1-1342256-6.html.csv': [1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795], '2-10831820-1.html.csv': [1796, 1797], '1-18522916-5.html.csv': [1798, 1799, 1800, 1801, 1802, 1803, 1804], '2-14781412-8.html.csv': [1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814], '1-1850339-2.html.csv': [1815, 1816, 1817, 1818, 1819, 1820], '2-17311783-10.html.csv': [1821, 1822, 1823, 1824], '2-10808346-15.html.csv': [1825, 1826, 1827, 1828], '1-27133147-3.html.csv': [1829, 1830, 1831, 1832, 1833], '2-16876516-2.html.csv': [1834], '1-21696800-1.html.csv': [1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842], '2-12075099-1.html.csv': [1843, 1844, 1845, 1846, 1847], '1-14319023-2.html.csv': [1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856], '2-18156552-1.html.csv': [1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866], '2-1546813-1.html.csv': [1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876], '2-17968265-1.html.csv': [1877, 1878], '2-12825759-1.html.csv': [1879, 1880], '2-12482419-2.html.csv': [1881, 1882, 1883, 1884], '2-11840325-8.html.csv': [1885], '2-17073558-1.html.csv': [1886, 1887, 1888, 1889], '2-1598015-5.html.csv': [1890, 1891], '1-27592654-2.html.csv': [1892, 1893], '2-1195142-2.html.csv': [1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903], '2-15349635-1.html.csv': [1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913], '1-2140071-13.html.csv': [1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], '2-17344918-1.html.csv': [1922, 1923, 1924, 1925], '1-25551880-2.html.csv': [1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], '1-26099252-1.html.csv': [1936, 1937, 1938, 1939, 1940, 1941, 1942], '1-27713890-1.html.csv': [1943, 1944, 1945, 1946, 1947], '2-17344651-6.html.csv': [1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957], '2-10824095-19.html.csv': [1958, 1959, 1960, 1961], '1-27755603-2.html.csv': [1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969], '2-11128774-6.html.csv': [1970, 1971], '2-13932013-1.html.csv': [1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981], '2-18762971-2.html.csv': [1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991], '2-11916083-39.html.csv': [1992, 1993, 1994, 1995, 1996, 1997, 1998], '2-10809271-13.html.csv': [1999], '1-24239748-2.html.csv': [2000, 2001, 2002, 2003, 2004], '2-10773616-16.html.csv': [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014], '2-16002638-1.html.csv': [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023]}

1-18600760-10.html.csv  [
    ["township", "county", "pop_2010", "land_sqmi", "water_sqmi", "latitude", "longitude", "geo_id", "ansi_code"],
    ["jackson", "sargent", 33, 35.809, 0.0, 46.066276, -97.94553, 3808140460, 1036797],
    ["james hill", "mountrail", 32, 31.82, 4.243, 48.423125, -102.429934, 3806140500, 1037048],
    ["james river valley", "dickey", 40, 28.597, 0.0, 46.246641, -98.188329, 3802140540, 1036767],
    ["janke", "logan", 28, 35.995, 0.163, 46.415512, -99.131701, 3804740620, 1037193],
    ["jefferson", "pierce", 45, 35.069, 1.125, 48.232149, -100.18237, 3806940700, 1759556],
    ["jim river valley", "stutsman", 38, 34.134, 1.746, 47.112388, -98.778478, 3809340780, 1036484],
    ["johnson", "wells", 36, 35.299, 0.908, 47.377745, -99.458677, 3810340820, 1037137],
    ["johnstown", "grand forks", 79, 36.199, 0.0, 48.151362, -97.449033, 3803540940, 1036624],
    ["joliette", "pembina", 67, 70.044, 0.771, 48.796545, -97.217227, 3806741020, 1036723]
]

Table Column:  township, county, pop_2010, land_sqmi, water_sqmi, latitude, longitude, geo_id, ansi_code
DataFrame from database (3 rows) :

township | county | pop_2010 | land_sqmi | water_sqmi | latitude | longitude | geo_id | ansi_code
jackson | sargent | 33 | 35.809 | 0.0 | 46.066276 | -97.94553 | 3808140460 | 1036797
james hill | mountrail | 32 | 31.82 | 4.243 | 48.423125 | -102.429934 | 3806140500 | 1037048
james river valley | dickey | 40 | 28.597 | 0.0 | 46.246641 | -98.188329 | 3802140540 | 1036767
table_ids:  [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]

main_table: 1-18600760-10.html.csv table_qa_group:  [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77] number of questions:  12


id:  1-18600760-10.html.csv  S:  joliette has 0.771 square miles of water , and can be found with geo id 3806741020  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND water_sqmi = 0.771 AND geo_id = 3806741020) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND water_sqmi = 0.771 AND geo_id = 3806741020) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for janke township in logan county is 3804740620  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'janke' AND county = 'logan' AND geo_id = 3804740620) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'janke' AND county = 'logan' AND geo_id = 3804740620) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  grand forks county has 36.199 square miles of land  label:  1
answer_sql;  SELECT land_sqmi FROM T WHERE county = 'grand forks' AND land_sqmi = 36.199;


prediction:     land_sqmi
0     36.199
Gold answer:  1

Direct ans:  36.199  Gold:  1

Gen output:  36.199  Gold:  1
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  joliette township has a geo id of 3806741020  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND geo_id = 3806741020) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND geo_id = 3806741020) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  james hill township has 4.243 sqmi of water and a latitude of 48.423125  label:  1
answer_sql;  SELECT * FROM T WHERE township = 'james hill' AND water_sqmi = 4.243 AND latitude = 48.423125;


prediction:       township     county  pop_2010  ...   longitude      geo_id  ansi_code
0  james hill  mountrail        32  ... -102.429934  3806140500    1037048

[1 rows x 9 columns]
Gold answer:  1

Gen output:   Gold:  1
Correcet:  3 total:  5 Accuracy:  0.5999880002399952

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the township that has 28.597 sqmi of land is that of james river valley  label:  1
answer_sql;  SELECT (SELECT township FROM T WHERE land_sqmi = 28.597) = 'james river valley';


prediction:     (SELECT township FROM T WHERE land_sqmi = 28.597) = 'james river valley'
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  6 Accuracy:  0.6666555557407376

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for a township with 0.717 square miles of water is 3806741020  label:  0
answer_sql;  SELECT (SELECT geo_id FROM T WHERE water_sqmi = 0.717) = 3806741020;


prediction:    (SELECT geo_id FROM T WHERE water_sqmi = 0.717) = 3806741020
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for dickey county is 3804740620  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE county = 'dickey' AND geo_id = 3804740620) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE county = 'dickey' AND geo_id = 3804740620) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  8 Accuracy:  0.6249921875976551

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the township of jackson is in the mountrail county  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'jackson' AND county = 'mountrail') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'jackson' AND county = 'mountrail') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  9 Accuracy:  0.6666592593415629

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for johnstown is 3810340820  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'johnstown' AND geo_id = 3810340820) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'johnstown' AND geo_id = 3810340820) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  10 Accuracy:  0.6999930000699993

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  james hill has the least amount of land (sqmi)  label:  0
answer_sql;  SELECT township FROM T WHERE land_sqmi = (SELECT MIN(land_sqmi) FROM T);


prediction:               township
0  james river valley
Gold answer:  0

Direct ans:  james river valley  Gold:  0

Gen output:  james river valley  Gold:  0
Correcet:  7 total:  11 Accuracy:  0.636357851292261

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the latitude for the township janke is - 97.945530  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'janke' AND latitude = -97.945530) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'janke' AND latitude = -97.945530) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  12 Accuracy:  0.666661111157407

-----------------------------------------------

***********************************************************

1-18600760-10.html.csv  [
    ["township", "county", "pop_2010", "land_sqmi", "water_sqmi", "latitude", "longitude", "geo_id", "ansi_code"],
    ["jackson", "sargent", 33, 35.809, 0.0, 46.066276, -97.94553, 3808140460, 1036797],
    ["james hill", "mountrail", 32, 31.82, 4.243, 48.423125, -102.429934, 3806140500, 1037048],
    ["james river valley", "dickey", 40, 28.597, 0.0, 46.246641, -98.188329, 3802140540, 1036767],
    ["janke", "logan", 28, 35.995, 0.163, 46.415512, -99.131701, 3804740620, 1037193],
    ["jefferson", "pierce", 45, 35.069, 1.125, 48.232149, -100.18237, 3806940700, 1759556],
    ["jim river valley", "stutsman", 38, 34.134, 1.746, 47.112388, -98.778478, 3809340780, 1036484],
    ["johnson", "wells", 36, 35.299, 0.908, 47.377745, -99.458677, 3810340820, 1037137],
    ["johnstown", "grand forks", 79, 36.199, 0.0, 48.151362, -97.449033, 3803540940, 1036624],
    ["joliette", "pembina", 67, 70.044, 0.771, 48.796545, -97.217227, 3806741020, 1036723]
]

Table Column:  township, county, pop_2010, land_sqmi, water_sqmi, latitude, longitude, geo_id, ansi_code
DataFrame from database (3 rows) :

township | county | pop_2010 | land_sqmi | water_sqmi | latitude | longitude | geo_id | ansi_code
jackson | sargent | 33 | 35.809 | 0.0 | 46.066276 | -97.94553 | 3808140460 | 1036797
james hill | mountrail | 32 | 31.82 | 4.243 | 48.423125 | -102.429934 | 3806140500 | 1037048
james river valley | dickey | 40 | 28.597 | 0.0 | 46.246641 | -98.188329 | 3802140540 | 1036767
table_ids:  [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]

main_table: 1-18600760-10.html.csv table_qa_group:  [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77] number of questions:  12


id:  1-18600760-10.html.csv  S:  joliette has 0.771 square miles of water , and can be found with geo id 3806741020  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND water_sqmi = 0.771 AND geo_id = 3806741020) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND water_sqmi = 0.771 AND geo_id = 3806741020) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for janke township in logan county is 3804740620  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'janke' AND county = 'logan' AND geo_id = 3804740620) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'janke' AND county = 'logan' AND geo_id = 3804740620) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  grand forks county has 36.199 square miles of land  label:  1
answer_sql;  SELECT (SELECT land_sqmi FROM T WHERE county = 'grand forks') = 36.199;


prediction:     (SELECT land_sqmi FROM T WHERE county = 'grand forks') = 36.199
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  joliette township has a geo id of 3806741020  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND geo_id = 3806741020) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'joliette' AND geo_id = 3806741020) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  james hill township has 4.243 sqmi of water and a latitude of 48.423125  label:  1
answer_sql;  SELECT * FROM T WHERE township = 'james hill' AND water_sqmi = 4.243 AND latitude = 48.423125;


prediction:       township     county  pop_2010  ...   longitude      geo_id  ansi_code
0  james hill  mountrail        32  ... -102.429934  3806140500    1037048

[1 rows x 9 columns]
Gold answer:  1

Gen output:   Gold:  1
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the township that has 28.597 sqmi of land is that of james river valley  label:  1
answer_sql;  SELECT (SELECT township FROM T WHERE land_sqmi = 28.597) = 'james river valley';


prediction:     (SELECT township FROM T WHERE land_sqmi = 28.597) = 'james river valley'
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for a township with 0.717 square miles of water is 3806741020  label:  0
answer_sql;  SELECT (SELECT geo_id FROM T WHERE water_sqmi = 0.717) = 3806741020;


prediction:    (SELECT geo_id FROM T WHERE water_sqmi = 0.717) = 3806741020
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for dickey county is 3804740620  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE county = 'dickey' AND geo_id = 3804740620) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE county = 'dickey' AND geo_id = 3804740620) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  8 Accuracy:  0.7499906251171861

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the township of jackson is in the mountrail county  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'jackson' AND county = 'mountrail') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'jackson' AND county = 'mountrail') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  9 Accuracy:  0.7777691358984901

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the geo id for johnstown is 3810340820  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'johnstown' AND geo_id = 3810340820) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'johnstown' AND geo_id = 3810340820) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  10 Accuracy:  0.7999920000799993

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  james hill has the least amount of land (sqmi)  label:  0
answer_sql;  SELECT township FROM T WHERE land_sqmi = (SELECT MIN(land_sqmi) FROM T)


prediction:               township
0  james river valley
Gold answer:  0

Direct ans:  james river valley  Gold:  0

Gen output:  james river valley  Gold:  0
Correcet:  8 total:  11 Accuracy:  0.727266115762584

-----------------------------------------------



id:  1-18600760-10.html.csv  S:  the latitude for the township janke is - 97.945530  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE township = 'janke' AND latitude = -97.945530) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE township = 'janke' AND latitude = -97.945530) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  9
Correcet:  9 total:  12 Accuracy:  0.7499937500520829

-----------------------------------------------

***********************************************************

1-2126093-3.html.csv  [
    ["no", "date", "tournament", "winning_score", "to_par", "margin_of_victory", "runner_up"],
    [1, "2003-09-28", "miyagi tv cup dunlop ladies open (as an amateur)", "70 + 70 + 71

error

2-12817505-2.html.csv  [['date', 'opponents', 'h_a', 'result_f_a', 'attendance', 'league_position'],
['2005-8-13', 'everton', 'a', '2 - 0', 38610, 4],
['2005-8-20', 'aston villa', 'h', '1 - 0', 67934, 4],
['2005-8-28', 'newcastle united', 'a', '2 - 0', 52327, 4],
['2005-9-10', 'manchester city', 'h', '1 - 1', 67839, 4],
['2005-9-18', 'liverpool', 'a', '0 - 0', 44917, 3],
['2005-9-24', 'blackburn rovers', 'h', '1 - 2', 67765, 6],
['2005-10-1', 'fulham', 'a', '3 - 2', 21862, 4],
['2005-10-15', 'sunderland', 'a', '3 - 1', 39085, 3],
['2005-10-22', 'tottenham hotspur', 'h', '1 - 1', 67856, 5],
['2005-10-29', 'middlesbrough', 'a', '1 - 4', 30579, 7],
['2005-11-6', 'chelsea', 'h', '1 - 0', 67864, 4],
['2005-11-19', 'charlton athletic', 'a', '3 - 1', 26730, 3],
['2005-11-27', 'west ham united', 'a', '2 - 1', 34755, 2],
['2005-12-3', 'portsmouth', 'h', '3 - 0', 67684, 2],
['2005-12-11', 'everton', 'h', '1 - 1', 67831, 3],
['2005-12-14', 'wigan athletic', 'h', '4 - 0', 67793, 2],
['2005-12-17', 'aston villa', 'a', '2 - 0', 37128, 2],
['2005-12-26', 'west bromwich albion', 'h', '3 - 0', 67972, 2],
['2005-12-28', 'birmingham city', 'a', '2 - 2', 28459, 2],
['2005-12-31', 'bolton wanderers', 'h', '4 - 1', 67858, 2],
['2006-1-3', 'arsenal', 'a', '0 - 0', 38313, 2],
['2006-1-14', 'manchester city', 'a', '1 - 3', 47192, 2],
['2006-1-22', 'liverpool', 'h', '1 - 0', 67874, 2],
['2006-2-1', 'blackburn rovers', 'a', '3 - 4', 25484, 2],
['2006-2-4', 'fulham', 'h', '4 - 2', 67844, 2],
['2006-2-11', 'portsmouth', 'a', '3 - 1', 20206, 2],
['2006-3-6', 'wigan athletic', 'a', '2 - 1', 23524, 2],
['2006-3-12', 'newcastle united', 'h', '2 - 0', 67858, 2],
['2006-3-18', 'west bromwich albion', 'a', '2 - 1', 27623, 2],
['2006-3-26', 'birmingham city', 'h', '3 - 0', 69070, 2],
['2006-3-29', 'west ham united', 'h', '1 - 0', 69522, 2],
['2006-4-1', 'bolton wanderers', 'a', '2 - 1', 27718, 2],
['2006-4-9', 'arsenal', 'h', '2 - 0', 70908, 2],
['2006-4-14', 'sunderland', 'h', '0 - 0', 72519, 2],
['2006-4-17', 'tottenham hotspur', 'a', '2 - 1', 36141, 2],
['2006-4-29', 'chelsea', 'a', '0 - 3', 42219, 2],
['2006-5-1', 'middlesbrough', 'h', '0 - 0', 69531, 2],
['2006-5-7', 'charlton athletic', 'h', '4 - 0', 73006, 2]]

Table Column:  date, opponents, h_a, result_f_a, attendance, league_position
DataFrame from database (3 rows) :

date | opponents | h_a | result_f_a | attendance | league_position
2005-8-13 | everton | a | 2 - 0 | 38610 | 4
2005-8-20 | aston villa | h | 1 - 0 | 67934 | 4
2005-8-28 | newcastle united | a | 2 - 0 | 52327 | 4
table_ids:  [82, 83, 84, 85, 86, 87, 88, 89, 90]

main_table: 2-12817505-2.html.csv table_qa_group:  [82, 83, 84, 85, 86, 87, 88, 89, 90] number of questions:  9


id:  2-12817505-2.html.csv  S:  manchester united has been 2nd in league position since 17 november 2005  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE league_position = 2 AND date >= '2005-11-17') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE league_position = 2 AND date >= '2005-11-17') > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  manchester united has beaten portsmouth 2 out of two times since 13 august 2005  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 'portsmouth' AND result_f_a LIKE '2 - %') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 'portsmouth' AND result_f_a LIKE '2 - %') = 2
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  manchester united has lost to the blackburn rovers 2 out of two times since 13 august 2005  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 'blackburn rovers' AND result_f_a LIKE '%0 - 2%' AND date >= '2005-8-13') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 'blackburn rovers' AND result_f_a LIKE '%0 - 2%' AND date >= '2005-8-13') = 2
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  3 Accuracy:  0.0

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  there have been 19 games since 13 august 2005 which had an attendance of 60000 or more  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date >= '2005-8-13' AND attendance >= 60000) = 19;


prediction:     (SELECT COUNT(*) FROM T WHERE date >= '2005-8-13' AND attendance >= 60000) = 19
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  4 Accuracy:  0.0

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  the game with the lowest attendance happened on 11 february 2006  label:  1
answer_sql;  SELECT (SELECT MIN(attendance) FROM T WHERE date = '2006-2-11') > 0;


prediction:     (SELECT MIN(attendance) FROM T WHERE date = '2006-2-11') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  5 Accuracy:  0.1999960000799984

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  manchester united has always lost 3 out of three times to portsmouth since 10 september 2005  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 'portsmouth' AND result_f_a LIKE '%-3' AND date >= '2005-9-10') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 'portsmouth' AND result_f_a LIKE '%-3' AND date >= '2005-9-10') = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  6 Accuracy:  0.3333277778703688

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  manchester united has drawn all mathces to the blackburn rovers 2 out of two times since 13 august 2005  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponents = 'blackburn rovers' AND result_f_a = '0 - 0' AND date >= '2005-8-13') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE opponents = 'blackburn rovers' AND result_f_a = '0 - 0' AND date >= '2005-8-13') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  7 Accuracy:  0.4285653062099113

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  there have been 19 games since 13 august 2005 which had an attendance exactly equal to that of arsenal in 9 april 2006  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date > '2005-8-13' AND attendance = (SELECT attendance FROM T WHERE date = '2006-4-9' AND opponents = 'arsenal')) = 19;


prediction:     (SELECT COUNT(*) FROM T WHERE date > '2005-8-13' AND attendance = (SELECT attendance FROM T WHERE date = '2006-4-9' AND opponents = 'arsenal')) = 19
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  8 Accuracy:  0.499993750078124

-----------------------------------------------



id:  2-12817505-2.html.csv  S:  the last game of the season happened on 11 february 2006  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2006-2-11') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2006-2-11') > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  4 total:  9 Accuracy:  0.4444395062277086

-----------------------------------------------

***********************************************************

2-1111973-1.html.csv  [
    ["vctp", "vca_155", "vctm", "vcpc", "vclc", "vcrt"],
    ["28.2", "40", "26", "25", "32", "32"],
    ["31.1", "44.1", "28.7", "27.6", "35.3", "35.3"],
    ["20 mm", "155 mm", "120 mm", "7.62 mm", "160 mm or 350 mm", "7.62 mm"],
    ["79", "6.1", "4.72", "0.3", "6.3 or 13.8", "0.3"],
    ["km", "none", "km", "none", "km", "km"],
    ["t00 / t", "t18 / t", "28.t20 / t", "28.t20 / t", "22.t17 / t", "22.t17 / t"],
    ["t23 / ton", "16.t17 / ton", "25.t13 / ton", "25.t13 / ton", "20.t16 / ton", "20.t16 / ton"],
    ["75", "55", "75", "75", "75", "75"],
    ["47", "34", "47", "47", "47", "47"]
]

Table Column:  vctp, vca_155, vctm, vcpc, vclc, vcrt
DataFrame from database (3 rows) :

vctp | vca_155 | vctm | vcpc | vclc | vcrt
28.2 | 40 | 26 | 25 | 32 | 32
31.1 | 44.1 | 28.7 | 27.6 | 35.3 | 35.3
20 mm | 155 mm | 120 mm | 7.62 mm | 160 mm or 350 mm | 7.62 mm
table_ids:  [91, 92, 93, 94, 95, 96, 97, 98, 99, 100]

main_table: 2-1111973-1.html.csv table_qa_group:  [91, 92, 93, 94, 95, 96, 97, 98, 99, 100] number of questions:  10


id:  2-1111973-1.html.csv  S:  the vctp 20 mm (79in) rh - 202 autocannon does not have 75 km / h (47 mph) as the vcrt  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vctp = '20 mm' AND vcrt <> '75 km/h (47 mph)') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vctp = '20 mm' AND vcrt <> '75 km/h (47 mph)') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vca 40t (44.1tons) and 155 mm (6.1in) l / 41 howitzer have a vctm of 26t (28.7tons) and 120 mm (4.72in) mortar respectively  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vca_155 = 44.1 AND vctm = 28.7) > 0 AND (SELECT COUNT(*) FROM T WHERE vca_155 = '155 mm' AND vctm = '120 mm') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vca_155 = 44.1 AND vctm = 28.7) > 0 AND (SELECT COUNT(*) FROM T WHERE vca_155 = '155 mm' AND vctm = '120 mm') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vctp 24hp / t (23hp / ton) has a vca 155 of 18hp / t ( 16.5hp / ton) , and not 55 km / h (34 mph)  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vctp = '24hp / t' AND vca_155 = '18hp / t' AND vcrt != '55 km / h (34 mph)') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vctp = '24hp / t' AND vca_155 = '18hp / t' AND vcrt != '55 km / h (34 mph)') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vclc 32t (35.3tons) has the same vcrt but vclc 160 mm (6.3in) or 350 mm (13.8in) rockets has a vcrt of 7.62 mm (0.3in) fn mag 60 - 20 machine gun  label:  1
answer_sql;  SELECT (SELECT vcrt FROM T WHERE vclc = '35.3') = (SELECT vcrt FROM T WHERE vclc = '160 mm or 350 mm');


prediction:     (SELECT vcrt FROM T WHERE vclc = '35.3') = (SELECT vcrt FROM T WHERE vclc = '160 mm or 350 mm')
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  the vcpc and vcrt of 7.62 mm (0.3in) fn mag 60 - 20 machine gun are the same for vctp 20 mm (79in) rh - 202 autocannon , and so is the vcpc and vcrt of 75 km / h (47 mph) for vctp 75 km / h (47 mph)  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vcpc = '7.62 mm' AND vcrt = '7.62 mm') = (SELECT COUNT(*) FROM T WHERE vctp = '20 mm') AND (SELECT COUNT(*) FROM T WHERE vcpc = '75 km/h' AND vcrt = '75 km/h') = (SELECT COUNT(*) FROM T WHERE vctp = '75 km/h');


prediction:     (SELECT COUNT(*) FROM T WHERE vcpc = '7.62 mm' AND vcrt = '7.62 mm') = (SELECT COUNT(*) FROM T WHERE vctp = '20 mm') AND (SELECT COUNT(*) FROM T WHERE vcpc = '75 km/h' AND vcrt = '75 km/h') = (SELECT COUNT(*) FROM T WHERE vctp = '75 km/h')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  5 Accuracy:  0.5999880002399952

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  the vctp 20 mm (79in) rh - 202 autocannon does not have 7.62 mm (0.3in) fn mag 60 - 20 machine gun as the vcrt  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vctp = '20 mm' AND vcrt = '7.62 mm') = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vctp = '20 mm' AND vcrt = '7.62 mm') = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  6 Accuracy:  0.6666555557407376

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vca 40t (44.1tons) and 155 mm (6.1in) l / 41 howitzer have a vctm of 28.8hp / t (25.1hp / ton) and 120 mm (4.72in) mortar respectively  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vca_155 = 44.1 AND vctm = 28.7) > 0 AND (SELECT COUNT(*) FROM T WHERE vctp = 31.1 AND vctm = 26) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vca_155 = 44.1 AND vctm = 28.7) > 0 AND (SELECT COUNT(*) FROM T WHERE vctp = 31.1 AND vctm = 26) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vctp 24hp / t (23hp / ton) has a vca 155 of 155 mm (6.1in) l / 41 howitzer , and not 55 km / h (34 mph)  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vctp = '24hp / t' AND vca_155 = '155 mm' AND vcrt = '55 km / h') = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vctp = '24hp / t' AND vca_155 = '155 mm' AND vcrt = '55 km / h') = 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  5 total:  8 Accuracy:  0.6249921875976551

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  vclc 32t (35.3tons) has the same vcpc but vclc 160 mm (6.3in) or 350 mm (13.8in) rockets has a vcrt of 7.62 mm (0.3in) fn mag 60 - 20 machine gun  label:  0
answer_sql;  SELECT (SELECT vcpc FROM T WHERE vclc = 35.3) = (SELECT vcpc FROM T WHERE vclc = '160 mm or 350 mm') AND (SELECT vcrt FROM T WHERE vclc = '160 mm or 350 mm') = '7.62 mm';


prediction:     (SELECT vcpc FROM T WHERE vclc = 35.3) = (SELECT vcpc FROM T WHERE vclc = '160 mm or 350 mm') AND (SELECT vcrt FROM T WHERE vclc = '160 mm or 350 mm') = '7.62 mm'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  9 Accuracy:  0.6666592593415629

-----------------------------------------------



id:  2-1111973-1.html.csv  S:  the vcpc and vctp of 7.62 mm (0.3in) fn mag 60 - 20 machine gun are the same for vcrt 20 mm (79in) rh - 202 autocannon , and so is the vcpc and vcrt of 75 km / h (47 mph) for vctp 75 km / h (47 mph)  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE vcpc = '7.62 mm' AND vctp = '7.62 mm' AND vcrt = '20 mm') > 0 AND (SELECT COUNT(*) FROM T WHERE vcpc = '75 km/h' AND vcrt = '75 km/h' AND vctp = '75 km/h') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE vcpc = '7.62 mm' AND vctp = '7.62 mm' AND vcrt = '20 mm') > 0 AND (SELECT COUNT(*) FROM T WHERE vcpc = '75 km/h' AND vcrt = '75 km/h' AND vctp = '75 km/h') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  6 total:  10 Accuracy:  0.5999940000599994

-----------------------------------------------

***********************************************************

2-17245513-1.html.csv  [['place', 'player', 'country', 'score', 'to_par', 'money'],
['t1', 'lou graham', 'united states', '287', '+3', 'playoff'],
['t1', 'john mahaffey', 'united states', '287', '+3', 'playoff'],
['t3', 'frank beard', 'united states', '288', '+4', '10875'],
['t3', 'ben crenshaw', 'united states', '288', '+4', '10875'],
['t3', 'hale irwin', 'united states', '288', '+4', '10875'],
['t3', 'bob murphy', 'united states', '288', '+4', '10875'],
['t7', 'jack nicklaus', 'united states', '289', '+5', '7500'],
['t7', 'peter oosterhuis', 'england', '289', '+5', '7500'],
['t9', 'pat fitzsimons', 'united states', '290', '+6', '5000'],
['t9', 'arnold palmer', 'united states', '290', '+6', '5000'],
['t9', 'tom watson', 'united states', '290', '+6', '5000']]

Table Column:  place, player, country, score, to_par, money
DataFrame from database (3 rows) :

place | player | country | score | to_par | money
t1 | lou graham | united states | 287 | +3 | playoff
t1 | john mahaffey | united states | 287 | +3 | playoff
t3 | frank beard | united states | 288 | +4 | 10875
table_ids:  [101, 102, 103, 104, 105]

main_table: 2-17245513-1.html.csv table_qa_group:  [101, 102, 103, 104, 105] number of questions:  5


id:  2-17245513-1.html.csv  S:  t9 place has a score of 67 + 68 + 78 + 77 = 290  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE place = 't9' AND score = 290) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE place = 't9' AND score = 290) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-17245513-1.html.csv  S:  t7 is the place of peter oosterhuis , who won 7500  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE place = 't7' AND player = 'peter oosterhuis' AND money = '7500') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE place = 't7' AND player = 'peter oosterhuis' AND money = '7500') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-17245513-1.html.csv  S:  jack nicklaus of the united states has a score of 72 + 70 + 75 + 72 = 289  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'jack nicklaus' AND score = 289) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'jack nicklaus' AND score = 289) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-17245513-1.html.csv  S:  t7 is the place of player peter oosterhuis , who has 10875  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE place = 't7' AND player = 'peter oosterhuis' AND money = 10875) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE place = 't7' AND player = 'peter oosterhuis' AND money = 10875) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-17245513-1.html.csv  S:  united states has a 69 + 73 + 72 + 75 = 289 score  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE country = 'united states' AND score = 289) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE country = 'united states' AND score = 289) > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------

***********************************************************

1-2370579-1.html.csv  [['episode', 'prod', 'title', 'directed_by', 'written_by', 'originalairdate', 'filmed'],
['1', '104', 'diplomatic immunity', 'leslie norman', 'dennis spooner', '1966-09-28', '1965-09'],
['2', '107', 'epitaph for a hero', 'john moxey', 'terry nation', '1966-10-05', '1965-10'],
['3', '109', 'something for a rainy day', 'cyril frankel', 'terry nation', '1966-10-12', '1965-12'],
['4', '102', 'red horse , red rider', 'john moxey', 'terry nation', '1966-10-19', '1965-08'],
['5', '110', 'enemy of the state', 'jeremy summers', 'dennis spooner', '1966-10-26', '1965-12'],
['6', '114', 'masquerade (part 1)', 'cyril frankel', 'terry nation', '1966-11-02', '1966-03'],
['7', '115', 'the killing (part 2)', 'cyril frankel', 'terry nation', '1966-11-09', '1966-03'],
['8', '108', 'the persuaders', 'leslie norman', 'dennis spooner', '1966-11-16', '1965-10'],
['9', '112', "and suddenly you 're dead", 'cyril frankel', 'terry nation and dennis spooner', '1966-11-23', '1966-01'],
['10', '103', 'the legions of ammak', 'john moxey', 'michael cramoy', '1966-11-30', '1965-08'],
['11', '101', 'samurai west', 'john moxey', 'brian degas', '1966-12-07', '1965-07'],
['12', '123', 'the maze', 'jeremy summers', 'tony ogrady (pseudonym of brian clemens)', '1966-12-14', '1966-07'],
['13', '105', 'portrait of louisa', 'john moxey', 'terry nation', '1966-12-21', '1965-09'],
['14', '111', 'there s somebody close behind you', 'roy baker', 'terry nation and dennis spooner', '1966-12-28', '1965-12'],
['15', '125', 'storm warning (part 1)', 'gordon flemyng', 'terry nation', '1967-01-04', '1966-08'],
['16', '126', 'the island (part 2)', 'gordon flemyng', 'terry nation', '1967-01-11', '1966-08'],
['17', '121', 'time to kill', 'jeremy summers', 'dennis spooner', '1967-01-18', '1966-06'],
['18', '113', 'a memory of evil', 'don chaffey', 'terry nation and dennis spooner', '1967-01-25', '1966-02'],
['19', '117', 'you cant win them all', 'don chaffey', 'dennis spooner', '1967-02-01', '1966-04'],
['20', '128', 'the high terrace', 'robert asher', 'dennis spooner', '1967-02-08', '1966-09'],
['21', '118', 'the 7 eyes of tni', 'robert asher', 'terry nation', '1967-02-15', '1966-04'],
['22', '124', 'tni of the hunter', 'roy baker', 'terry nation', '1967-02-22', '1966-07'],
['23', '120', 'the edge of fear', 'quentin lawrence', 'dennis spooner', '1967-03-01', '1966-05'],
['24', '116', 'long ago and far away', 'robert asher', 'dennis spooner', '1967-03-08', '1966-05'],
['25', '122', 'so dark the tni', 'robert tronson', 'terry nation and dennis spooner', '1967-03-15', '1966-06'],
['26', '119', 'the long , long day', 'roy baker', 'tony ogrady', '1967-03-22', '1966-05'],
['27', '127', 'roundabout', 'robert tronson', 'terry nation', '1967-03-29', '1966-09'],
['28', '129', 'the man outside', 'roy baker', 'terry nation', '1967-04-05', '1966-09'],
['29', '130', 'countdown', 'robert asher', 'terry nation', '1967-04-12', '1966-10']]

Table Column:  episode, prod, title, directed_by, written_by, originalairdate, filmed
DataFrame from database (3 rows) :

episode | prod | title | directed_by | written_by | originalairdate | filmed
1 | 104 | diplomatic immunity | leslie norman | dennis spooner | 1966-09-28 | 1965-09
2 | 107 | epitaph for a hero | john moxey | terry nation | 1966-10-05 | 1965-10
3 | 109 | something for a rainy day | cyril frankel | terry nation | 1966-10-12 | 1965-12
table_ids:  [106, 107, 108, 109, 110, 111, 112, 113]

main_table: 1-2370579-1.html.csv table_qa_group:  [106, 107, 108, 109, 110, 111, 112, 113] number of questions:  8


id:  1-2370579-1.html.csv  S:  the killing (part two) originally aired on 9 november 1966  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE title = 'the killing (part two)' AND originalairdate = '1966-11-09') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE title = 'the killing (part two)' AND originalairdate = '1966-11-09') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  jeremy summers directed the episode written by tony o'grady (pseudonym of brian clemens)  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE directed_by = 'jeremy summers' AND written_by = 'tony ogrady') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE directed_by = 'jeremy summers' AND written_by = 'tony ogrady') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  the production number for episode 23 is 120  label:  1
answer_sql;  SELECT (SELECT prod FROM T WHERE episode = 23) = 120;


prediction:     (SELECT prod FROM T WHERE episode = 23) = 120
0                                              1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  during jul / aug 1966 , storm warning (part one) was filmed  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE filmed LIKE '1966-07%' OR filmed LIKE '1966-08%') > 0 AND title = 'storm warning (part one)';
error:  1-2370579-1.html.csv


id:  1-2370579-1.html.csv  S:  on 30 november 1966 , the episode the killing (part two) originally air  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE originalairdate = '1966-11-30' AND title = 'the killing (part two)') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE originalairdate = '1966-11-30' AND title = 'the killing (part two)') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  john moxey directed the episode written by tony o'grady (pseudonym of brian clemens)  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE directed_by = 'john moxey' AND written_by = 'tony o''grady') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE directed_by = 'john moxey' AND written_by = 'tony o''grady') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  5 Accuracy:  0.5999880002399952

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  the production number for episode 23 is 118.0  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE episode = 23 AND prod = 118.0) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE episode = 23 AND prod = 118.0) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  6 Accuracy:  0.6666555557407376

-----------------------------------------------



id:  1-2370579-1.html.csv  S:  on jul / aug 1966 , there 's somebody close behind you was filmed  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE filmed LIKE '1966-07%' OR filmed LIKE '1966-08%') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE filmed LIKE '1966-07%' OR filmed LIKE '1966-08%') > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------

***********************************************************

2-12582968-1.html.csv  [
    ["year", "competition", "venue", "position", "notes"],
    ["1998", "world junior championships", "annecy , france", "10th", "61.51 m"],
    ["1999", "european junior championships", "riga , latvia", "5th", "64.2 m"],
    ["2001", "european u23 championships", "amsterdam , netherlands", "11th", "66.41 m"],
    ["2003", "universiade", "daegu , south korea", "4th", "71.26 m"],
    ["2005", "world championships", "helsinki , finland", "14th", "74.53 m"],
    ["2006", "european championships", "gothenburg , sweden", "15th", "73.77 m"],
    ["2008", "olympic games", "beijing , pr china", "29th", "70.56 m"],
    ["2009", "world championships", "berlin , germany", "14th", "74.47 m"],
    ["2012", "olympic games", "london , great britain", "6th", "77.17 m"],
    ["2013", "world championships", "moscow , russia", "3rd", "79.36 m"]
]

Table Column:  year, competition, venue, position, notes
DataFrame from database (3 rows) :

year | competition | venue | position | notes
1998 | world junior championships | annecy , france | 10th | 61.51 m
1999 | european junior championships | riga , latvia | 5th | 64.2 m
2001 | european u23 championships | amsterdam , netherlands | 11th | 66.41 m
table_ids:  [114, 115, 116, 117, 118, 119, 120, 121, 122, 123]

main_table: 2-12582968-1.html.csv table_qa_group:  [114, 115, 116, 117, 118, 119, 120, 121, 122, 123] number of questions:  10


id:  2-12582968-1.html.csv  S:  lukáš melich completed in the olympic games two times  label:  1
answer_sql;  SELECT (SELECT COUNT(DISTINCT year) FROM T WHERE competition LIKE '%olympic games%') = 2;


prediction:     (SELECT COUNT(DISTINCT year) FROM T WHERE competition LIKE '%olympic games%') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  lukáš melich placed third place or higher in one competition  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position <= 3) = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE position <= 3) = 1
0                                                 0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  the competition type was a junior championship two times  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE competition LIKE '%junior%') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE competition LIKE '%junior%') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  four of the competitions out of ten were world wide championships  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE competition LIKE '%world championships%') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE competition LIKE '%world championships%') = 4
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  in lukáš melich 's last two competitions he threw an average distance of 78.27 m  label:  1
answer_sql;  SELECT (SELECT AVG(CAST(SUBSTR(notes, 1, LENGTH(notes) - 2) AS DECIMAL)) FROM T ORDER BY year DESC LIMIT 2) = 78.27;


prediction:     (SELECT AVG(CAST(SUBSTR(notes, 1, LENGTH(notes) - 2) AS DECIMAL)) FROM T ORDER BY year DESC LIMIT 2) = 78.27
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  lukáš melich won a medal at the olympic games  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE competition = 'olympic games' AND position IN ('1st', '2nd', '3rd')) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE competition = 'olympic games' AND position IN ('1st', '2nd', '3rd')) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  lukáš melich 's best finish was second  label:  0
answer_sql;  SELECT (SELECT MAX(position) FROM T WHERE position != 'dns' AND position != 'dq') = '2nd';


prediction:     (SELECT MAX(position) FROM T WHERE position != 'dns' AND position != 'dq') = '2nd'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  lukáš melich 's highest finish was as a junior  label:  0
answer_sql;  SELECT MAX(position) FROM T WHERE competition LIKE '%junior%';


prediction:    MAX(position)
0           5th
Gold answer:  0

Direct ans:  5th  Gold:  0

Gen output:  5th  Gold:  0
Correcet:  4 total:  8 Accuracy:  0.499993750078124

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  four of the competitions were senior world championships  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE competition LIKE '%world championships%') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE competition LIKE '%world championships%') = 4
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  9 Accuracy:  0.5555493827846357

-----------------------------------------------



id:  2-12582968-1.html.csv  S:  lukáš melich never threw for greater than 78 m  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE CAST(REPLACE(notes, ' m', '') AS DECIMAL) > 78) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE CAST(REPLACE(notes, ' m', '') AS DECIMAL) > 78) = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  10 Accuracy:  0.5999940000599994

-----------------------------------------------

***********************************************************

2-11545282-15.html.csv  [
    ["player", "nationality", "position", "start_year", "end_year", "school_club_team"],
    ["mehmet okur", "turkey", "forward - center", 2004, 2011, "efes pilsen ( turkey )"],
    ["josã ortiz", "puerto rico", "center", 1988, 1990, "oregon state"],
    ["greg ostertag", "united states", "center", 1995, 2004, "kansas"],
    ["greg ostertag", "united states", "center", 2005, 2006, "kansas"],
    ["dan o 'sullivan", "united states", "center", 1990, 1991, "fordham"],
    ["andre owens", "united states", "guard", 2005, 2006, "houston"]
]

Table Column:  player, nationality, position, start_year, end_year, school_club_team
DataFrame from database (3 rows) :

player | nationality | position | start_year | end_year | school_club_team
mehmet okur | turkey | forward - center | 2004 | 2011 | efes pilsen ( turkey )
josã ortiz | puerto rico | center | 1988 | 1990 | oregon state
greg ostertag | united states | center | 1995 | 2004 | kansas
table_ids:  [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]

main_table: 2-11545282-15.html.csv table_qa_group:  [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134] number of questions:  11


id:  2-11545282-15.html.csv  S:  jose ortiz was the center in the oregon state jazz club from 1988 - 90  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'josã ortiz' AND position = 'center' AND school_club_team = 'oregon state' AND start_year = 1988 AND end_year = 1990) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'josã ortiz' AND position = 'center' AND school_club_team = 'oregon state' AND start_year = 1988 AND end_year = 1990) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  andre owens was the houston jazz club guard from 2005 - 06  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'andre owens' AND school_club_team = 'houston jazz' AND start_year = 2005 AND end_year = 2006) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'andre owens' AND school_club_team = 'houston jazz' AND start_year = 2005 AND end_year = 2006) > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  houston had a jazz club during the 2005 - 06 school year  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE school_club_team LIKE '%houston%' AND start_year = 2005 AND end_year = 2006) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE school_club_team LIKE '%houston%' AND start_year = 2005 AND end_year = 2006) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  dan o 'sullivan plays center for the fordham jazz club  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'dan o\'sullivan' AND position = 'center' AND school_club_team = 'fordham jazz club') > 0;
error:  2-11545282-15.html.csv


id:  2-11545282-15.html.csv  S:  greg ostertag played the center position for the jazz from 1995 to 2004 and then from 2005 to 2006  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND position = 'center' AND ((start_year = 1995 AND end_year = 2004) OR (start_year = 2005 AND end_year = 2006))) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND position = 'center' AND ((start_year = 1995 AND end_year = 2004) OR (start_year = 2005 AND end_year = 2006))) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  greg ostertag played center and went to kansas  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND position = 'center' AND school_club_team = 'kansas') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND position = 'center' AND school_club_team = 'kansas') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  greg ostertag went to oregon state and played for the jazz from 1988 - 90  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND school_club_team LIKE '%oregon state%' AND start_year = 1988 AND end_year = 1990) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'greg ostertag' AND school_club_team LIKE '%oregon state%' AND start_year = 1988 AND end_year = 1990) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  andre owens played center for the jazz from 2005 - 06  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'andre owens' AND position = 'center' AND start_year = 2005 AND end_year = 2006) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'andre owens' AND position = 'center' AND start_year = 2005 AND end_year = 2006) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  the jazz had a houston graduate from turkey play for them from 2005 - 06  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE school_club_team LIKE '%houston%' AND nationality = 'turkey' AND start_year = 2005 AND end_year = 2006) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE school_club_team LIKE '%houston%' AND nationality = 'turkey' AND start_year = 2005 AND end_year = 2006) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-11545282-15.html.csv  S:  dan o 'sullivan went to kansas and played the center position  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE school_club_team = 'kansas' AND position = 'center' AND player = 'dan o\'sullivan') > 0;
error:  2-11545282-15.html.csv


id:  2-11545282-15.html.csv  S:  the position was center in the club team of efes pilsen (turkey)  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position = 'center' AND school_club_team = 'efes pilsen ( turkey )') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE position = 'center' AND school_club_team = 'efes pilsen ( turkey )') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  9 Accuracy:  0.8888790124554172

-----------------------------------------------

***********************************************************

2-14291300-7.html.csv  [
    ["game", "date", "opponent", "score_home", "score_away", "record_wins", "record_losses", "record_overtime_losses", "points"],
    [63, 4, "detroit red wings", 2, 2, 24, 28, 11, 59],
    [64, 6, "california golden seals", 4, 4, 24, 28, 12, 60],
    [65, 7, "minnesota north stars", 1, 3, 24, 29, 12, 60],
    [66, 10, "pittsburgh penguins", 2, 2, 24, 29, 13, 61],
    [67, 12, "new york rangers", 2, 7, 24, 30, 13, 61],
    [68, 13, "toronto maple leafs", 3, 2, 25, 30, 13, 63],
    [69, 18, "new york rangers", 2, 1, 26, 30, 13, 65],
    [70, 20, "boston bruins", 3, 5, 26, 31, 13, 65],
    [71, 21, "toronto maple leafs", 1, 1, 26, 31, 14, 66],
    [72, 24, "montreal canadiens", 3, 5, 26, 32, 14, 66],
    [73, 25, "minnesota north stars", 2, 2, 26, 32, 15, 67],
    [74, 27, "chicago black hawks", 1, 3, 26, 33, 15, 67],
    [75, 28, "pittsburgh penguins", 3, 1, 27, 33, 15, 69]
]

Table Column:  game, date, opponent, score_home, score_away, record_wins, record_losses, record_overtime_losses, points
DataFrame from database (3 rows) :

game | date | opponent | score_home | score_away | record_wins | record_losses | record_overtime_losses | points
63 | 4 | detroit red wings | 2 | 2 | 24 | 28 | 11 | 59
64 | 6 | california golden seals | 4 | 4 | 24 | 28 | 12 | 60
65 | 7 | minnesota north stars | 1 | 3 | 24 | 29 | 12 | 60
table_ids:  [135, 136, 137, 138]

main_table: 2-14291300-7.html.csv table_qa_group:  [135, 136, 137, 138] number of questions:  4


id:  2-14291300-7.html.csv  S:  the toronto maple leafs is the only opponent with 63 points  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE points = 63 AND opponent = 'toronto maple leafs') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE points = 63 AND opponent = 'toronto maple leafs') = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-14291300-7.html.csv  S:  during march 13 , the toronto maple leafs were the opponent with 63 points  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = 'march 13' AND opponent = 'toronto maple leafs' AND points = 63) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = 'march 13' AND opponent = 'toronto maple leafs' AND points = 63) > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-14291300-7.html.csv  S:  the toronto maple leafs are the opponent listed with 63 , 66 , and 69 points  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'toronto maple leafs' AND points IN (63, 66, 69)) = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'toronto maple leafs' AND points IN (63, 66, 69)) = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-14291300-7.html.csv  S:  the chicago black hawks are the only opponent with 63 points  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE points = 63 AND opponent = 'chicago black hawks') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE points = 63 AND opponent = 'chicago black hawks') = 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------

***********************************************************

2-17025909-3.html.csv  [['rank', 'nation', 'gold', 'silver', 'bronze', 'total'],
['1', 'south korea', '8', '0', '2', '10'],
['2', 'iran', '2', '2', '1', '5'],
['3', 'chinese taipei', '2', '0', '1', '3'],
['4', 'united states', '1', '2', '3', '6'],
['5', 'spain', '1', '1', '3', '5'],
['6', 'china', '1', '1', '1', '3'],
['7', 'greece', '1', '0', '2', '3'],
['8', 'croatia', '0', '2', '1', '3'],
['9', 'france', '0', '2', '0', '2'],
['10', 'germany', '0', '1', '2', '3'],
['11', 'canada', '0', '1', '1', '2'],
['11', 'denmark', '0', '1', '1', '1'],
['13', 'cuba', '0', '1', '0', '1'],
['13', 'great britain', '0', '1', '0', '1'],
['13', 'mexico', '0', '1', '0', '1'],
['16', 'azerbaijan', '0', '0', '4', '4'],
['17', 'thailand', '0', '0', '2', '2'],
['18', 'australia', '0', '0', '1', '1'],
['18', 'austria', '0', '0', '1', '1'],
['18', 'belarus', '0', '0', '1', '1'],
['18', 'kazakhstan', '0', '0', '1', '1'],
['18', 'morocco', '0', '0', '1', '1'],
['18', 'philippines', '0', '0', '1', '1'],
['18', 'turkey', '0', '0', '1', '1'],
['18', 'venezuela', '0', '0', '1', '1']]

Table Column:  rank, nation, gold, silver, bronze, total
DataFrame from database (3 rows) :

rank | nation | gold | silver | bronze | total
1 | south korea | 8 | 0 | 2 | 10
2 | iran | 2 | 2 | 1 | 5
3 | chinese taipei | 2 | 0 | 1 | 3
table_ids:  [139, 140, 141, 142]

main_table: 2-17025909-3.html.csv table_qa_group:  [139, 140, 141, 142] number of questions:  4


id:  2-17025909-3.html.csv  S:  the nation of croatia won 3 medals all together , 2 of which were silver  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'croatia' AND total = 3 AND silver = 2) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'croatia' AND total = 3 AND silver = 2) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-17025909-3.html.csv  S:  australia did not received any gold medals  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'australia' AND gold = 0) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'australia' AND gold = 0) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-17025909-3.html.csv  S:  the nation of croatia received less than 2 silver medals with a total medal of only 1  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'croatia' AND silver < 2 AND total = 1) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'croatia' AND silver < 2 AND total = 1) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-17025909-3.html.csv  S:  australia received 0 gold medals and more than 1 bronze  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'australia' AND gold = 0 AND bronze > 1) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'australia' AND gold = 0 AND bronze > 1) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------

***********************************************************

2-12076689-7.html.csv  [['date', 'opponent', 'score', 'loss', 'attendance', 'record'],
['september 1', 'indians', '7 - 2', 'padilla', '23776', '69 - 67'],
['september 2', 'indians', '6 - 5', 'volquez', '40222', '69 - 68'],
['september 3', 'indians', '5 - 2', 'byrd', '19667', '70 - 68'],
['september 4', 'athletics', '8 - 1', 'zito', '23949', '71 - 68'],
['september 5', 'athletics', '5 - 4', 'saarloos', '27225', '72 - 68'],
['september 6', 'athletics', '9 - 6', 'rupe', '17838', '72 - 69'],
['september 8', 'mariners', '7 - 2', 'millwood', '28646', '72 - 70'],
['september 9', 'mariners', '3 - 2', 'rheinecker', '33454', '72 - 71'],
['september 10', 'mariners', '4 - 2', 'huber', '34321', '73 - 71'],
['september 12', 'tigers', '3 - 2', 'mahay', '24196', '73 - 72'],
['september 13', 'tigers', '11 - 3', 'verlander', '24672', '74 - 72'],
['september 14', 'angels', '2 - 1', 'volquez', '21488', '74 - 73'],
['september 15', 'angels', '2 - 1', 'francisco', '30788', '74 - 74'],
['september 16', 'angels', '12 - 6', 'lackey', '40196', '75 - 74'],
['september 17', 'angels', '8 - 1', 'santana', '24303', '76 - 74'],
['september 18', 'mariners', '8 - 1', 'hernández', '18214', '77 - 74'],
['september 19', 'mariners', '9 - 7', 'wilson', '18551', '77 - 75'],
['september 20', 'mariners', '6 - 3', 'tejeda', '26006', '77 - 76'],
['september 22', 'indians', '12 - 4', 'byrd', '26284', '78 - 76'],
['september 23', 'indians', '6 - 3', 'padilla', '38351', '78 - 77'],
['september 24', 'indians', '11 - 6', 'millwood', '36617', '78 - 78'],
['september 25', 'angels', '8 - 3', 'volquez', '39781', '78 - 79'],
['september 26', 'angels', '5 - 2', 'escobar', '37339', '79 - 79'],
['september 27', 'angels', '6 - 5', 'wilson', '38032', '79 - 80'],
['september 29', 'mariners', '6 - 5', 'fruto', '30766', '80 - 80'],
['september 30', 'mariners', '3 - 1', 'millwood', '23310', '80 - 81'],
['october 1', 'mariners', '3 - 2', 'tejeda', '28361', '80 - 82']]

Table Column:  date, opponent, score, loss, attendance, record
DataFrame from database (3 rows) :

date | opponent | score | loss | attendance | record
september 1 | indians | 7 - 2 | padilla | 23776 | 69 - 67
september 2 | indians | 6 - 5 | volquez | 40222 | 69 - 68
september 3 | indians | 5 - 2 | byrd | 19667 | 70 - 68
table_ids:  [143, 144, 145, 146, 147, 148, 149, 150, 151, 152]

main_table: 2-12076689-7.html.csv table_qa_group:  [143, 144, 145, 146, 147, 148, 149, 150, 151, 152] number of questions:  10


id:  2-12076689-7.html.csv  S:  in the 2006 season the texas rangers played the mariners nine times  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'mariners') = 9;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'mariners') = 9
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  all games in the 2006 season were played in the month of september  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date NOT LIKE 'sept%') = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date NOT LIKE 'sept%') = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  the final game score was 7 - 2 in two different games of the 2006 season  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE score = '7 - 2') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE score = '7 - 2') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  the texas rangers played the tigers two times in the 2006 season  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'tigers') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'tigers') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  in three different baseball games the final score was 8 - 1  label:  1
answer_sql;  SELECT COUNT(*) FROM T WHERE score = '8 - 1';


prediction:     COUNT(*)
0         3
Gold answer:  1

Direct ans:  3  Gold:  1

Gen output:  3  Gold:  1
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  in the 2006 season the texas mariners played the angels nine times  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'angels') = 9;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'angels') = 9
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  all games in the 2007 season were played in the month of october  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date NOT LIKE 'oct%') = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date NOT LIKE 'oct%') = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  the final game score was 8 - 3 in two different games of the 2007 season  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE score = '8 - 3') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE '%2007%') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE score = '8 - 3') = 2 AND (SELECT COUNT(*) FROM T WHERE date LIKE '%2007%') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  the texas mariners played the tigers two times in the 2008 season  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'tigers') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'tigers') = 2
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  7 total:  9 Accuracy:  0.7777691358984901

-----------------------------------------------



id:  2-12076689-7.html.csv  S:  in four different baseball games the final score was 9 - 2  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE score = '9 - 2') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE score = '9 - 2') = 4
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  10 Accuracy:  0.7999920000799993

-----------------------------------------------

***********************************************************

2-11545282-1.html.csv  [
    ["player", "nationality", "position", "start_year", "end_year", "school___club_team"],
    ["rick adelman", "united states", "guard", 1974, 1975, "loyola (ca)"],
    ["john amaechi", "england", "center / forward", 2001, 2003, "penn state"],
    ["louis amundson", "united states", "forward", 2007, 2007, "unlv"],
    ["j j anderson", "united states", "forward", 1982, 1985, "bradley"],
    ["shandon anderson", "united states", "guard / forward", 1996, 1999, "georgia"],
    ["rafael araãjo", "brazil", "center", 2006, 2007, "byu"],
    ["carlos arroyo", "puerto rico", "guard", 2002, 2005, "florida international"],
    ["isaac austin", "united states", "center", 1991, 1993, "arizona state"],
    ["anthony avent", "united states", "forward", 1998, 1999, "seton hall"]
]

Table Column:  player, nationality, position, start_year, end_year, school___club_team
DataFrame from database (3 rows) :

player | nationality | position | start_year | end_year | school___club_team
rick adelman | united states | guard | 1974 | 1975 | loyola (ca)
john amaechi | england | center / forward | 2001 | 2003 | penn state
louis amundson | united states | forward | 2007 | 2007 | unlv
table_ids:  [153, 154, 155, 156, 157, 158, 159, 160, 161, 162]

main_table: 2-11545282-1.html.csv table_qa_group:  [153, 154, 155, 156, 157, 158, 159, 160, 161, 162] number of questions:  10


id:  2-11545282-1.html.csv  S:  the utah jazz had six player from the united states  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nationality = 'united states') = 6;


prediction:     (SELECT COUNT(*) FROM T WHERE nationality = 'united states') = 6
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  of the three different position georgia and penn state contributed two of the same  label:  0
answer_sql;  SELECT (SELECT COUNT(DISTINCT position) FROM T) = 3 AND (SELECT COUNT(DISTINCT school___club_team) FROM T WHERE school___club_team LIKE '%georgia%' OR school___club_team LIKE '%penn state%') = 2;


prediction:     (SELECT COUNT(DISTINCT position) FROM T) = 3 AND (SELECT COUNT(DISTINCT school___club_team) FROM T WHERE school___club_team LIKE '%georgia%' OR school___club_team LIKE '%penn state%') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  after 2000 england , the united states , brazil , and and puerto rico each contributed one player  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nationality = 'england' AND end_year > 2000) = 1 AND
(SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND end_year > 2000) = 1 AND
(SELECT COUNT(*) FROM T WHERE nationality = 'brazil' AND end_year > 2000) = 1 AND
(SELECT COUNT(*) FROM T WHERE nationality = 'puerto rico' AND end_year > 2000) = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE nationality = 'england' AND end_year > 2000) = 1 AND \n(SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND end_year > 2000) = 1 AND \n(SELECT COUNT(*) FROM T WHERE nationality = 'brazil' AND end_year > 2000) = 1 AND \n(SELECT COUNT(*) FROM T WHERE nationality = 'puerto rico' AND end_year > 2000) = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  the united states contributed the most players of all the countries  label:  1
answer_sql;  SELECT nationality, COUNT(*) as player_count
FROM T
GROUP BY nationality
ORDER BY player_count DESC
LIMIT 1;


prediction:       nationality  player_count
0  united states             6
Gold answer:  1

Gen output:   Gold:  1
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  after 1985 , the united states contributed four players with louis amundson being the most recent  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND start_year > 1985) = 4 AND (SELECT MAX(start_year) FROM T WHERE nationality = 'united states') = (SELECT start_year FROM T WHERE player = 'louis amundson');


prediction:     (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND start_year > 1985) = 4 AND (SELECT MAX(start_year) FROM T WHERE nationality = 'united states') = (SELECT start_year FROM T WHERE player = 'louis amundson')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  the utah jazz had three players from the united states  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nationality = 'united states') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE nationality = 'united states') = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  of the three different positions , georgia and penn state contributed a center and a guard  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE school___club_team LIKE '%georgia%' AND position = 'center') > 0 AND (SELECT COUNT(*) FROM T WHERE school___club_team LIKE '%penn state%' AND position = 'guard') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE school___club_team LIKE '%georgia%' AND position = 'center') > 0 AND (SELECT COUNT(*) FROM T WHERE school___club_team LIKE '%penn state%' AND position = 'guard') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  after 2000 , only brazil and england contributed one player to the utah jazz  label:  0
answer_sql;  SELECT (SELECT COUNT(DISTINCT nationality) FROM T WHERE end_year > 2000) = 2;


prediction:     (SELECT COUNT(DISTINCT nationality) FROM T WHERE end_year > 2000) = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  8 Accuracy:  0.7499906251171861

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  of all the countries , england contributed the most players of all the countries  label:  0
answer_sql;  SELECT nationality, COUNT(*) FROM T GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;


prediction:       nationality  COUNT(*)
0  united states         6
Gold answer:  0

Gen output:   Gold:  0
Correcet:  6 total:  9 Accuracy:  0.6666592593415629

-----------------------------------------------



id:  2-11545282-1.html.csv  S:  after 1985 , the united states contributed two players with rafael araãjo being the most recent  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND start_year > 1985) = 2 AND (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND player = 'rafael araãjo') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND start_year > 1985) = 2 AND (SELECT COUNT(*) FROM T WHERE nationality = 'united states' AND player = 'rafael araãjo') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  10 Accuracy:  0.6999930000699993

-----------------------------------------------

***********************************************************

2-1015521-1.html.csv  [
    ["aircraft", "origin", "type", "versions", "in_service"],
    ["cessna a -37 dragonfly", "united states", "attack / fighter", "a -37", "12"],
    ["fma ia 58 pucarã¡", "argentina", "attack", "a -58", "5"],
    ["lockheed c -130 hercules", "united states", "transport / utility", "c -130", "2"],
    ["embraer emb 110 bandeirante", "brazil", "transport / utility", "c -95", "3"],
    ["beechcraft twin bonanza", "united states", "transport / utility", "d50", "1"],
    ["casa c -212 aviocar", "spain", "transport", "c -212 - 200", "2"],
    ["embraer emb 120 brasilia", "brazil", "transport", "emb 120", "1"],
    ["cessna 206 stationair", "united states", "utility / liaison", "u206h", "10"],
    ["beechcraft b58 baron", "united states", "trainer / liaison", "b -58", "2"],
    ["british aerospace 125", "united kingdom", "vip transport", "700a 600a", "2"],
    ["aermacchi sf260", "italy", "trainer", "t -260 eu", "12"],
    ["pilatus pc -7 turbo trainer", "switzerland", "trainer", "-92", "5"],
    ["cessna t -41 mescalero", "united states", "trainer", "t - 41d", "7"],
    ["aerospatiale as 365 dauphin", "france", "liaison / transport", "as 365", "1"],
    ["bell 212 twin huey", "united states", "transport / utility", "bell 212", "4"],
    ["bell uh -1 iroquois", "united states", "transport / utility", "uh pt-1h", "13"]
]

Table Column:  aircraft, origin, type, versions, in_service
DataFrame from database (3 rows) :

aircraft | origin | type | versions | in_service
cessna a -37 dragonfly | united states | attack / fighter | a -37 | 12
fma ia 58 pucarã¡ | argentina | attack | a -58 | 5
lockheed c -130 hercules | united states | transport / utility | c -130 | 2
table_ids:  [163, 164, 165, 166, 167, 168, 169, 170, 171, 172]

main_table: 2-1015521-1.html.csv table_qa_group:  [163, 164, 165, 166, 167, 168, 169, 170, 171, 172] number of questions:  10


id:  2-1015521-1.html.csv  S:  there are currently 12 t - 260 eu aircrafts in service  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu') = 12;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu') = 12
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  there are 3 c - 95 aircrafts of brazilian origin currently in service  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 'c - 95' AND origin = 'brazil' AND in_service > 0) = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 'c - 95' AND origin = 'brazil' AND in_service > 0) = 3
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  there are 12 t - 260 eu aircrafts currently in service  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu') = 12;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu') = 12
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  3 Accuracy:  0.0

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  there are 3 c - 95 brazilian aircrafts currently in service  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 'c - 95 brazilian') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 'c - 95 brazilian') = 3
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  4 Accuracy:  0.0

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  with 2 in service by the us , the beechcraft represents the b58 model aircraft  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE origin = 'united states' AND in_service = 2 AND aircraft = 'beechcraft b58') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE origin = 'united states' AND in_service = 2 AND aircraft = 'beechcraft b58') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  5 Accuracy:  0.0

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  bell uh - 1 iroquois is the version of b - 58 aircraft model originated in the united states which has 2 in service  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 'bell uh - 1 iroquois' AND type = 'attack' AND origin = 'united states' AND versions = 'b - 58' AND in_service = 2) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 'bell uh - 1 iroquois' AND type = 'attack' AND origin = 'united states' AND versions = 'b - 58' AND in_service = 2) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  6 Accuracy:  0.1666638889351844

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  the ebraer emb 120 basilia from switzerland is a transport / utility type aircraft  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 'ebraer emb 120 basilia' AND origin = 'switzerland' AND type = 'transport / utility') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 'ebraer emb 120 basilia' AND origin = 'switzerland' AND type = 'transport / utility') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  7 Accuracy:  0.28571020413994086

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  brazil has transport / utility and attack type aircrafts  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE origin = 'brazil' AND type = 'transport / utility') > 0 AND (SELECT COUNT(*) FROM T WHERE origin = 'brazil' AND type = 'attack') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE origin = 'brazil' AND type = 'transport / utility') > 0 AND (SELECT COUNT(*) FROM T WHERE origin = 'brazil' AND type = 'attack') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  8 Accuracy:  0.37499531255859303

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  there are 12 t - 260 eu aircraft currently in service that originated from switzerland  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu' AND origin = 'switzerland' AND in_service = 12) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 't - 260 eu' AND origin = 'switzerland' AND in_service = 12) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  9 Accuracy:  0.4444395062277086

-----------------------------------------------



id:  2-1015521-1.html.csv  S:  the aircraft bell 212 twin huey was a trainer type  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE aircraft = 'bell 212 twin huey' AND type = 'trainer') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE aircraft = 'bell 212 twin huey' AND type = 'trainer') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  10 Accuracy:  0.4999950000499995

-----------------------------------------------

***********************************************************

2-16835332-3.html.csv  [
    ["rank", "player", "start_year", "end_year", "years", "games", "reb_avg", "total_rebounds"],
    [1, "jim nowers", 1972, 1976, "1972 - 1976", 112, 9.4, 1048],
    [2, "kenny sanders", 1985, 1989, "1985 - 1989", 107, 9.6, 1026],
    [3, "will thomas", 2004, 2008, "2004 - 2008", 131, 7.6, 993],
    [4, "george evans", 1997, 2001, "1997 - 2001", 116, 8.2, 953],
    [5, "robert dykes", 1987, 1991, "1987 - 1991", 122, 7.5, 925],
    [6, "andre gaddy", 1977, 1982, "1977 - 1982", 98, 9.3, 916],
    [7, "jai lewis", 2002, 2006, "2002 - 2006", 125, 7.2, 895],
    [8, "rob rose", 1982, 1986, "1982 - 1986", 113, 7.1, 805],
    [9, "herb estes", 1973, 1976, "1973 - 1976", 80, 9.2, 734],
    [10, "jesse young", 1999, 2003, "1999 - 2003", 115, 6.2, 708]
]

Table Column:  rank, player, start_year, end_year, years, games, reb_avg, total_rebounds
DataFrame from database (3 rows) :

rank | player | start_year | end_year | years | games | reb_avg | total_rebounds
1 | jim nowers | 1972 | 1976 | 1972 - 1976 | 112 | 9.4 | 1048
2 | kenny sanders | 1985 | 1989 | 1985 - 1989 | 107 | 9.6 | 1026
3 | will thomas | 2004 | 2008 | 2004 - 2008 | 131 | 7.6 | 993
table_ids:  [173, 174, 175, 176, 177, 178, 179, 180]

main_table: 2-16835332-3.html.csv table_qa_group:  [173, 174, 175, 176, 177, 178, 179, 180] number of questions:  8


id:  2-16835332-3.html.csv  S:  the years 1972 - 1976 have a rank of 1  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE years = '1972 - 1976' AND rank = 1) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE years = '1972 - 1976' AND rank = 1) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  there are no games that have rebounds larger than 1048  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE total_rebounds > 1048) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE total_rebounds > 1048) = 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  the total rebounds of player herb estes are 734  label:  1
answer_sql;  SELECT (SELECT total_rebounds FROM T WHERE player = 'herb estes') = 734;


prediction:     (SELECT total_rebounds FROM T WHERE player = 'herb estes') = 734
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  7.2 is the rebound average when games is 125 and the rank is 7  label:  1
answer_sql;  SELECT (SELECT reb_avg FROM T WHERE games = 125 AND rank = 7) = 7.2;


prediction:     (SELECT reb_avg FROM T WHERE games = 125 AND rank = 7) = 7.2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  no other game have total rebounds smaller than 1048  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE total_rebounds < 1048) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE total_rebounds < 1048) = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  5 Accuracy:  0.999980000399992

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  there are zero rebounds with george evans as a player and a rank larger than 8  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'george evans' AND rank > 8 AND total_rebounds = 0) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'george evans' AND rank > 8 AND total_rebounds = 0) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  6 Accuracy:  0.9999833336111065

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  herb estes has 708 rebounds  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'herb estes' AND total_rebounds = 708) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'herb estes' AND total_rebounds = 708) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  7 Accuracy:  0.999985714489793

-----------------------------------------------



id:  2-16835332-3.html.csv  S:  6.2 is the total of rebound averages with more than 124 games and a rank of 10  label:  0
answer_sql;  SELECT (SELECT SUM(reb_avg) FROM T WHERE games > 124 AND rank = 10) = 6.2;


prediction:    (SELECT SUM(reb_avg) FROM T WHERE games > 124 AND rank = 10) = 6.2
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------

***********************************************************

1-29789-1.html.csv  [
    ["rank", "country", "unwto_region", "international_tourist_arrivals_year_2012", "international_tourist_arrivals_year_2011", "change_2011_to_2012", "change_2010_to_2011"],
    [1, "france", "europe", 83000000, 81600000, "+1.8%", "+5%"],
    [2, "united states", "north america", 67000000, 62700000, "+6.8%", "+4.9%"],
    [3, "china", "asia", 57700000, 57600000, "+0.3%", "+3.4%"],
    [4, "spain", "europe", 57700000, 56200000, "+2.7%", "+6.6%"],
    [5, "italy", "europe", 46400000, 46100000, "+0.5%", "+5.7%"],
    [6, "turkey", "europe", 35700000, 34700000, "+3%", "+10.5%"],
    [7, "germany", "europe", 30400000, 28400000, "+7.3%", "+5.5%"],
    [8, "united kingdom", "europe", 29300000, 29300000, "-0.1%", "+3.6%"],
    [9, "russia", "europe", 25700000, 22700000, "+13.4%", "+11.9%"]
]

Table Column:  rank, country, unwto_region, international_tourist_arrivals_year_2012, international_tourist_arrivals_year_2011, change_2011_to_2012, change_2010_to_2011
DataFrame from database (3 rows) :

rank | country | unwto_region | international_tourist_arrivals_year_2012 | international_tourist_arrivals_year_2011 | change_2011_to_2012 | change_2010_to_2011
1 | france | europe | 83000000 | 81600000 | +1.8% | +5%
2 | united states | north america | 67000000 | 62700000 | +6.8% | +4.9%
3 | china | asia | 57700000 | 57600000 | +0.3% | +3.4%
table_ids:  [181, 182]

main_table: 1-29789-1.html.csv table_qa_group:  [181, 182] number of questions:  2


id:  1-29789-1.html.csv  S:  25.7 million international tourists visited russia in 2012  label:  1
answer_sql;  SELECT (SELECT international_tourist_arrivals_year_2012 FROM tourism WHERE country = 'russia') = 25700000;
error:  1-29789-1.html.csv


id:  1-29789-1.html.csv  S:  in the unwto region of asia , 57.7 million international tourist arrivals (2012) which was less than in 2011  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM tourism WHERE unwto_region = 'asia' AND international_tourist_arrivals_year_2012 < international_tourist_arrivals_year_2011) > 0;
error:  1-29789-1.html.csv
***********************************************************

1-1697190-2.html.csv  [
    ["year", "tournaments_played", "cuts_made", "wins", "best_finish", "earnings", "money_list_rank"],
    [1998, 3, 2, 0, "t -23", 37221, 221],
    [2000, 29, 14, 0, "t -17", 143248, 179],
    [2001, 2, 0, 0, "cut", 0, None],
    [2002, 3, 0, 0, "cut", 0, None],
    [2003, 1, 0, 0, "cut", 0, None],
    [2004, 2, 2, 0, "t -69", 15858, None],
    [2005, 1, 1, 0, "t -65", 10547, None]
]

Table Column:  year, tournaments_played, cuts_made, wins, best_finish, earnings, money_list_rank
DataFrame from database (3 rows) :

year | tournaments_played | cuts_made | wins | best_finish | earnings | money_list_rank
1998 | 3 | 2 | 0 | t -23 | 37221 | 221.0
2000 | 29 | 14 | 0 | t -17 | 143248 | 179.0
2001 | 2 | 0 | 0 | cut | 0 | nan
table_ids:  [183, 184, 185]

main_table: 1-1697190-2.html.csv table_qa_group:  [183, 184, 185] number of questions:  3


id:  1-1697190-2.html.csv  S:  this person 's lowest yearly earnings between 1998 and 2005 was 0  label:  1
answer_sql;  SELECT MIN(earnings) = 0 FROM T WHERE year BETWEEN 1998 AND 2005;


prediction:     MIN(earnings) = 0
0                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-1697190-2.html.csv  S:  casey martin never won a tournament  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE wins > 0) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE wins > 0) = 0
0                                            1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  1-1697190-2.html.csv  S:  the number of tournaments played in 2000 was 2  label:  0
answer_sql;  SELECT (SELECT tournaments_played FROM T WHERE year = 2000) = 2;


prediction:     (SELECT tournaments_played FROM T WHERE year = 2000) = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------

***********************************************************

2-18844321-1.html.csv  [
    ["opposing_team", "against", "date", "venue", "status"],
    ["cambridge university", 12, "1978-10-18", "grange road , cambridge", "tour match"],
    ["cardiff", 7, "1978-10-21", "cardiff arms park , cardiff", "tour match"],
    ["west wales xv", 7, "1978-10-25", "st helen 's , swansea", "tour match"],
    ["london counties", 12, "1978-10-28", "twickenham , london", "tour match"],
    ["munster", 12, "1978-10-31", "thomond park , limerick", "tour match"],
    ["ireland", 6, "1978-11-4", "lansdowne road , dublin", "test match"],
    ["ulster", 7, "1978-11-7", "ravenhill , belfast", "tour match"],
    ["wales", 12, "1978-11-11", "cardiff arms park , cardiff", "test match"],
    ["south and south - west counties", 0, "1978-11-15", "memorial ground , bristol", "tour match"],
    ["midland counties", 15, "1978-11-18", "welford road , leicester", "tour match"],
    ["combined services", 6, "1978-11-21", "aldershot military stadium , aldershot", "tour match"],
    ["england", 6, "1978-11-25", "twickenham , london", "test match"],
    ["monmouthshire", 9, "1978-11-29", "rodney parade , newport", "tour match"],
    ["north of england", 6, "1978-12-2", "birkenhead park , birkenhead", "tour match"],
    ["north and midland of scotland", 3, "1978-12-5", "linksfield stadium , aberdeen", "tour match"],
    ["scotland", 9, "1978-12-9", "murrayfield , edinburgh", "test match"],
    ["bridgend", 6, "1978-12-13", "brewery field , bridgend", "tour match"],
    ["barbarians", 16, "1978-12-16", "cardiff arms park , cardiff", "tour match"]
]

Table Column:  opposing_team, against, date, venue, status
DataFrame from database (3 rows) :

opposing_team | against | date | venue | status
cambridge university | 12 | 1978-10-18 | grange road , cambridge | tour match
cardiff | 7 | 1978-10-21 | cardiff arms park , cardiff | tour match
west wales xv | 7 | 1978-10-25 | st helen 's , swansea | tour match
table_ids:  [186, 187, 188, 189, 190, 191, 192, 193, 194]

main_table: 2-18844321-1.html.csv table_qa_group:  [186, 187, 188, 189, 190, 191, 192, 193, 194] number of questions:  9


id:  2-18844321-1.html.csv  S:  there was 13 tour matches in the last 3 months of 1978  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date BETWEEN '1978-10-01' AND '1978-12-31' AND status = 'tour match') = 13;


prediction:     (SELECT COUNT(*) FROM T WHERE date BETWEEN '1978-10-01' AND '1978-12-31' AND status = 'tour match') = 13
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  there were 4 test matches in the last 2 months of 1978  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE status = 'test match' AND date >= '1978-11-01') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE status = 'test match' AND date >= '1978-11-01') = 4
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  there were four teams that scored exactly 12 against cambridge university  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE against = 12 AND opposing_team = 'cambridge university') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE against = 12 AND opposing_team = 'cambridge university') = 4
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  there was a tour match held in october and a test match held in november in twickenham , london  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%' AND venue = 'twickenham , london' AND status = 'tour match') > 0 AND (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london' AND status = 'test match') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%' AND venue = 'twickenham , london' AND status = 'tour match') > 0 AND (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london' AND status = 'test match') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  there were 5 matches held in october of 1978  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%') = 5;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%') = 5
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  all 4 test matches took place in october of 1978  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%') = 4;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%') = 4
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  no team scored more than 10 against cambridge university  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opposing_team = 'cambridge university' AND against > 10) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE opposing_team = 'cambridge university' AND against > 10) = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  all matches held in november in twickenham , london were tour matches  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london' AND status = 'tour match') = (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london');


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london' AND status = 'tour match') = (SELECT COUNT(*) FROM T WHERE date LIKE '1978-11%' AND venue = 'twickenham , london')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-18844321-1.html.csv  S:  all 5 matches held in october of 1978 took place after the 25th of the month  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%' AND date > '1978-10-25') = 5;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '1978-10%' AND date > '1978-10-25') = 5
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  9 Accuracy:  0.8888790124554172

-----------------------------------------------

***********************************************************

2-10826385-15.html.csv  [['home_team', 'home_team_score', 'away_team', 'away_team_score', 'venue', 'crowd', 'date'],
['footscray', '14.7', 'st kilda', '9.11', 'western oval', '18655', '1972-07-15'],
['fitzroy', '16.14', 'north melbourne', '9.12', 'junction oval', '7007', '1972-07-15'],
['essendon', '13.12', 'richmond', '17.9', 'windy hill', '22251', '1972-07-15'],
['carlton', '20.8', 'south melbourne', '8.15', 'princes park', '14465', '1972-07-15'],
['hawthorn', '19.14', 'geelong', '15.8', 'glenferrie oval', '12425', '1972-07-15'],
['collingwood', '10.13', 'melbourne', '8.1', 'vfl park', '30883', '1972-07-15']]

Table Column:  home_team, home_team_score, away_team, away_team_score, venue, crowd, date
DataFrame from database (3 rows) :

home_team | home_team_score | away_team | away_team_score | venue | crowd | date
footscray | 14.7 | st kilda | 9.11 | western oval | 18655 | 1972-07-15
fitzroy | 16.14 | north melbourne | 9.12 | junction oval | 7007 | 1972-07-15
essendon | 13.12 | richmond | 17.9 | windy hill | 22251 | 1972-07-15
table_ids:  [195, 196, 197, 198, 199, 200, 201, 202, 203, 204]

main_table: 2-10826385-15.html.csv table_qa_group:  [195, 196, 197, 198, 199, 200, 201, 202, 203, 204] number of questions:  10


id:  2-10826385-15.html.csv  S:  melbourne had the lowest score when playing as the away team  label:  1
answer_sql;  SELECT (SELECT MIN(away_team_score) FROM T WHERE away_team = 'melbourne') > 0;


prediction:     (SELECT MIN(away_team_score) FROM T WHERE away_team = 'melbourne') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  the collingwood vs melbourne game has the largest crowd size  label:  1
answer_sql;  SELECT MAX(crowd) FROM T WHERE home_team = 'collingwood' OR away_team = 'collingwood' OR home_team = 'melbourne' OR away_team = 'melbourne';


prediction:    MAX(crowd)
0      30883
Gold answer:  1

Direct ans:  30883  Gold:  1

Gen output:  30883  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  the crowd at the fitzroy vs north melbourne game was smaller than the crowd at the essendon vs richmond game  label:  1
answer_sql;  SELECT (SELECT crowd FROM T WHERE home_team = 'fitzroy' AND away_team = 'north melbourne') < (SELECT crowd FROM T WHERE home_team = 'essendon' AND away_team = 'richmond');


prediction:     (SELECT crowd FROM T WHERE home_team = 'fitzroy' AND away_team = 'north melbourne') < (SELECT crowd FROM T WHERE home_team = 'essendon' AND away_team = 'richmond')
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  the average of all the home team scores is 15.67  label:  1
answer_sql;  SELECT AVG(home_team_score) = 15.67 FROM T;


prediction:     AVG(home_team_score) = 15.67
0                             0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  4 Accuracy:  0.24999375015624611

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  1 / 3 of the away teams had a score greater than 10  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE away_team_score > 10) = (SELECT COUNT(*) FROM T WHERE away_team IS NOT NULL) / 3;


prediction:     (SELECT COUNT(*) FROM T WHERE away_team_score > 10) = (SELECT COUNT(*) FROM T WHERE away_team IS NOT NULL) / 3
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  5 Accuracy:  0.1999960000799984

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  melbourne had the second lowest score when playing as the away team  label:  0
answer_sql;  SELECT (SELECT away_team_score FROM T WHERE away_team = 'melbourne' ORDER BY away_team_score ASC LIMIT 1 OFFSET 1) > (SELECT away_team_score FROM T WHERE away_team = 'melbourne');


prediction:    (SELECT away_team_score FROM T WHERE away_team = 'melbourne' ORDER BY away_team_score ASC LIMIT 1 OFFSET 1) > (SELECT away_team_score FROM T WHERE away_team = 'melbourne')
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  1 total:  6 Accuracy:  0.1666638889351844

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  the collingwood vs melbourne game has the third largest crowd size  label:  0
answer_sql;  SELECT (SELECT MAX(crowd) FROM T WHERE home_team = 'collingwood' AND away_team = 'melbourne') = (SELECT MAX(crowd) FROM T ORDER BY crowd DESC LIMIT 1 OFFSET 2);


prediction:    (SELECT MAX(crowd) FROM T WHERE home_team = 'collingwood' AND away_team = 'melbourne') = (SELECT MAX(crowd) FROM T ORDER BY crowd DESC LIMIT 1 OFFSET 2)
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  1 total:  7 Accuracy:  0.14285510206997043

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  more attended the fitzroy vs north melbourne game than the essendon vs richmond game  label:  0
answer_sql;  SELECT (SELECT crowd FROM T WHERE home_team = 'fitzroy' AND away_team = 'north melbourne') > (SELECT crowd FROM T WHERE home_team = 'essendon' AND away_team = 'richmond');


prediction:     (SELECT crowd FROM T WHERE home_team = 'fitzroy' AND away_team = 'north melbourne') > (SELECT crowd FROM T WHERE home_team = 'essendon' AND away_team = 'richmond')
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  1 total:  8 Accuracy:  0.124998437519531

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  the average of all the home team scores is less than 12  label:  0
answer_sql;  SELECT AVG(home_team_score) < 12 FROM T;


prediction:     AVG(home_team_score) < 12
0                          0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  9 Accuracy:  0.2222197531138543

-----------------------------------------------



id:  2-10826385-15.html.csv  S:  more than half of the away teams had a score greater than 10  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE away_team_score > 10) > (SELECT COUNT(*)/2 FROM T WHERE away_team IS NOT NULL);


prediction:     (SELECT COUNT(*) FROM T WHERE away_team_score > 10) > (SELECT COUNT(*)/2 FROM T WHERE away_team IS NOT NULL)
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  2 total:  10 Accuracy:  0.19999800001999982

-----------------------------------------------

***********************************************************

1-2150776-1.html.csv  [['year', 'date', 'driver', 'team', 'manufacturer', 'laps', 'race_time', 'average_speed_mph', 'report'],
['1982', 'june 6', 'bobby allison', 'digard motorsports', 'buick', '200', '4:24:8', '113.579', 'report'],
['1983', 'june 12', 'bobby allison', 'digard motorsports', 'buick', '200', '3:53:13', '128.636', 'report'],
['1984', 'june 10', 'cale yarborough', 'ranier - lundy', 'chevrolet', '200', '3:37:8', '138.164', 'report'],
['1985', 'june 9', 'bill elliott', 'melling racing', 'ford', '200', '3:35:48', '138.974', 'report'],
['1986', 'june 8', 'tim richmond', 'hendrick motorsports', 'chevrolet', '200', '4:24:50', '113.279', 'report'],
['1987', 'june 14', 'tim richmond', 'hendrick motorsports', 'chevrolet', '200', '4:5:57', '122.166', 'report'],
['1988', 'june 19', 'geoffrey bodine', 'hendrick motorsports', 'chevrolet', '200', '3:58:21', '126.147', 'report'],
['1989', 'june 18', 'terry labonte', 'junior johnson & associates', 'ford', '200', '3:48:27', '131.32', 'report'],
['1990', 'june 17', 'harry gant', 'leo jackson racing', 'oldsmobile', '200', '4:8:25', '120.6', 'report'],
['1991', 'june 16', 'darrell waltrip', 'darwal , inc', 'chevrolet', '200', '4:4:34', '122.666', 'report'],
['1992', 'june 14', 'alan kulwicki', 'ak racing', 'ford', '200', '3:28:18', '144.023', 'report'],
['1993', 'june 13', 'kyle petty', 'sabco racing', 'pontiac', '200', '3:37:23', '138.005', 'report'],
['1994', 'june 12', 'rusty wallace', 'penske racing', 'ford', '200', '3:52:55', '128.801', 'report'],
['1995', 'june 11', 'terry labonte', 'hendrick motorsports', 'chevrolet', '200', '3:37:50', '137.72', 'report'],
['1996', 'june 16', 'jeff gordon', 'hendrick motorsports', 'chevrolet', '200', '3:35:40', '139.104', 'report'],
['1997', 'june 8', 'jeff gordon', 'hendrick motorsports', 'chevrolet', '200', '3:34:33', '139.828', 'report'],
['1998', 'june 21', 'jeremy mayfield', 'penske racing', 'ford', '200', '4:14:39', '117.809', 'report'],
['1999', 'june 20', 'bobby labonte', 'joe gibbs racing', 'pontiac', '200', '4:12:19', '118.898', 'report'],
['2000', 'june 19', 'jeremy mayfield', 'penske racing', 'ford', '200', '3:34:41', '139.741', 'report'],
['2001', 'june 17', 'ricky rudd', 'robert yates racing', 'ford', '200', '3:43:14', '134.389', 'report'],
['2002', 'june 9', 'dale jarrett', 'robert yates racing', 'ford', '200', '3:29:10', '143.426', 'report'],
['2003', 'june 8', 'tony stewart', 'joe gibbs racing', 'chevrolet', '200', '3:42:24', '134.892', 'report'],
['2004', 'june 13', 'jimmie johnson', 'hendrick motorsports', 'chevrolet', '200', '4:27:33', '112.129', 'report'],
['2005', 'june 12', 'carl edwards', 'roush racing', 'ford', '201', '3:53:24', '129.177', 'report'],
['2006', 'june 11', 'denny hamlin', 'joe gibbs racing', 'chevrolet', '200', '3:47:52', '131.656', 'report'],
['2007', 'june 10', 'jeff gordon', 'hendrick motorsports', 'chevrolet', '106', '1:57:15', '135.608', 'report'],
['2008', 'june 8', 'kasey kahne', 'gillett evernham motorsports', 'dodge', '200', '3:59:36', '125.209', 'report'],
['2009', 'june 7', 'tony stewart', 'stewart - haas racing', 'chevrolet', '200', '3:36:35', '138.515', 'report'],
['2010', 'june 6', 'denny hamlin', 'joe gibbs racing', 'toyota', '204', '3:44:30', '136.303', 'report'],
['2011', 'june 12', 'jeff gordon', 'hendrick motorsports', 'chevrolet', '200', '3:26:21', '145.384', 'report'],
['2012', 'june 10', 'joey logano', 'joe gibbs racing', 'toyota', '160', '3:3:12', '131.004', 'report']]

Table Column:  year, date, driver, team, manufacturer, laps, race_time, average_speed_mph, report
DataFrame from database (3 rows) :

year | date | driver | team | manufacturer | laps | race_time | average_speed_mph | report
1982 | june 6 | bobby allison | digard motorsports | buick | 200 | 4:24:8 | 113.579 | report
1983 | june 12 | bobby allison | digard motorsports | buick | 200 | 3:53:13 | 128.636 | report
1984 | june 10 | cale yarborough | ranier - lundy | chevrolet | 200 | 3:37:8 | 138.164 | report
table_ids:  [205, 206, 207, 208, 209, 210, 211, 212]

main_table: 1-2150776-1.html.csv table_qa_group:  [205, 206, 207, 208, 209, 210, 211, 212] number of questions:  8


id:  1-2150776-1.html.csv  S:  on june 16th jeff gordon was on hendrick motorsports  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = 'june 16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = 'june 16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  on june 8th , 1997 , jeff gordon drove for 200 laps  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = 'june 8, 1997' AND driver = 'jeff gordon' AND laps = 200) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = 'june 8, 1997' AND driver = 'jeff gordon' AND laps = 200) > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  on jun 16 , 1996 , jeff gordon drove for hendrick motorsports  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1996-6-16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1996-6-16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  in 1997 , jeff gordon finished with a time of 3:34:33  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE year = 1997 AND race_time = '3:34:33') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE year = 1997 AND race_time = '3:34:33') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  on june 16th , jeff gordon was the driver in a ford for hendrick motorsports  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = 'june 16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports' AND manufacturer = 'ford') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = 'june 16' AND driver = 'jeff gordon' AND team = 'hendrick motorsports' AND manufacturer = 'ford') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  5 Accuracy:  0.5999880002399952

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  in 1997 , jeff gordon finished 200 laps with an average speed of 139.104 mph  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE year = 1997 AND driver = 'jeff gordon' AND laps = 200 AND average_speed_mph = 139.104) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE year = 1997 AND driver = 'jeff gordon' AND laps = 200 AND average_speed_mph = 139.104) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  6 Accuracy:  0.6666555557407376

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  the team for ricky rudd is joe gibbs racing  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE driver = 'ricky rudd' AND team = 'joe gibbs racing') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE driver = 'ricky rudd' AND team = 'joe gibbs racing') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  7 Accuracy:  0.7142755103498521

-----------------------------------------------



id:  1-2150776-1.html.csv  S:  jeremy mayfield was the driver with 200 laps in 1997  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE driver = 'jeremy mayfield' AND laps = 200 AND year = 1997) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE driver = 'jeremy mayfield' AND laps = 200 AND year = 1997) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  8 Accuracy:  0.7499906251171861

-----------------------------------------------

***********************************************************

2-15100419-2.html.csv  [
    ["round", "pick", "overall", "name", "position", "college"],
    [1, 2, 2, "kevin hardy", "linebacker", "illinois"],
    [2, 3, 33, "tony brackens", "defensive end", "texas"],
    [2, 30, 60, "michael cheever", "center", "georgia tech"],
    [3, 2, 63, "aaron beasley", "cornerback", "west virginia"],
    [4, 15, 110, "reggie barlow", "wide receiver", "alabama state"],
    [5, 14, 146, "jimmy herndon", "guard", "houston"],
    [6, 3, 170, "john fisher", "defensive back", "missouri western"],
    [6, 18, 185, "chris doering", "wide receiver", "florida"],
    [7, 18, 227, "clarence jones", "wide receiver", "tennessee state"],
    [7, 19, 228, "gregory spann", "wide receiver", "jackson state"]
]

Table Column:  round, pick, overall, name, position, college
DataFrame from database (3 rows) :

round | pick | overall | name | position | college
1 | 2 | 2 | kevin hardy | linebacker | illinois
2 | 3 | 33 | tony brackens | defensive end | texas
2 | 30 | 60 | michael cheever | center | georgia tech
table_ids:  [213]

main_table: 2-15100419-2.html.csv table_qa_group:  [213] number of questions:  1


id:  2-15100419-2.html.csv  S:  there are no defensive end picks and an overall smaller than 2  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position = 'defensive end' AND overall < 2) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE position = 'defensive end' AND overall < 2) = 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------

***********************************************************

1-14562722-2.html.csv  [['volume', 'discs', 'episodes', 'region_1_start', 'region_1_end', 'region_2_start', 'region_2_end', 'region_4_start', 'region_4_end'],
['1', '1', '4', '2006-1-31', '2007-2-19', '2007-2-19', '2007-6-4', '2007-6-4', '2007-7-5'],
['2', '1', '4', '2006-3-28', '2007-6-4', '2007-6-4', '2007-9-3', '2007-9-3', '2008-3-13'],
['3', '1', '4', '2006-5-30', '2007-9-3', '2007-9-3', '2008-2-18', '2008-2-18', '2008-6-19'],
['4', '1', '4', '2006-7-18', '2008-2-18', '2008-2-18', '2008-5-26', '2008-5-26', '2009-3-5']]

Table Column:  volume, discs, episodes, region_1_start, region_1_end, region_2_start, region_2_end, region_4_start, region_4_end
DataFrame from database (3 rows) :

volume | discs | episodes | region_1_start | region_1_end | region_2_start | region_2_end | region_4_start | region_4_end
1 | 1 | 4 | 2006-1-31 | 2007-2-19 | 2007-2-19 | 2007-6-4 | 2007-6-4 | 2007-7-5
2 | 1 | 4 | 2006-3-28 | 2007-6-4 | 2007-6-4 | 2007-9-3 | 2007-9-3 | 2008-3-13
3 | 1 | 4 | 2006-5-30 | 2007-9-3 | 2007-9-3 | 2008-2-18 | 2008-2-18 | 2008-6-19
table_ids:  [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224]

main_table: 1-14562722-2.html.csv table_qa_group:  [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224] number of questions:  11


id:  1-14562722-2.html.csv  S:  volume 5 , of 4 episodes , took place of september 19 , 2006 , in region 1  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE volume = 5 AND episodes = 4 AND region_1_start <= '2006-9-19' AND region_1_end >= '2006-9-19') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE volume = 5 AND episodes = 4 AND region_1_start <= '2006-9-19' AND region_1_end >= '2006-9-19') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the highest number of discs released for any of the volumes is only 1  label:  1
answer_sql;  SELECT MAX(discs) = 1 FROM T;


prediction:     MAX(discs) = 1
0               0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the 5th volume was released in region 1 on september 19 , 2006 , there were 4 episodes  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE volume = 5 AND region_1_start = '2006-9-19' AND episodes = 4) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE volume = 5 AND region_1_start = '2006-9-19' AND episodes = 4) > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  3 Accuracy:  0.0

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the maximum number discs is 1  label:  1
answer_sql;  SELECT MAX(discs) = 1 FROM T;


prediction:     MAX(discs) = 1
0               0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  4 Accuracy:  0.0

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  on march 15 , 2007 and in region 4 , the highest number of episodes was 4  label:  1
answer_sql;  SELECT (SELECT MAX(episodes) FROM T WHERE region_4_start <= '2007-3-15' AND region_4_end >= '2007-3-15') = 4;


prediction:    (SELECT MAX(episodes) FROM T WHERE region_4_start <= '2007-3-15' AND region_4_end >= '2007-3-15') = 4
0                                               None
Gold answer:  1

Direct ans:  none  Gold:  1

Gen output:  none  Gold:  1
Correcet:  0 total:  5 Accuracy:  0.0

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  there were four episodes in region 4 on march 13 , 2008  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE region_4_start <= '2008-3-13' AND region_4_end >= '2008-3-13' AND episodes = 4) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE region_4_start <= '2008-3-13' AND region_4_end >= '2008-3-13' AND episodes = 4) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  6 Accuracy:  0.1666638889351844

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the volume that has 1 disc , 4 episodes , and a region 1 of may 30 , 2006 is volume 5  label:  0
answer_sql;  SELECT (SELECT volume FROM T WHERE discs = 1 AND episodes = 4 AND region_1_start = '2006-5-30') = 5;


prediction:     (SELECT volume FROM T WHERE discs = 1 AND episodes = 4 AND region_1_start = '2006-5-30') = 5
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  7 Accuracy:  0.28571020413994086

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the volume 's 2 , 4 , and 5 have 2 discs and 3 episodes  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE volume = 2 AND discs = 2 AND episodes = 3) > 0 AND
(SELECT COUNT(*) FROM T WHERE volume = 4 AND discs = 2 AND episodes = 3) > 0 AND
(SELECT COUNT(*) FROM T WHERE volume = 5 AND discs = 2 AND episodes = 3) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE volume = 2 AND discs = 2 AND episodes = 3) > 0 AND \n(SELECT COUNT(*) FROM T WHERE volume = 4 AND discs = 2 AND episodes = 3) > 0 AND \n(SELECT COUNT(*) FROM T WHERE volume = 5 AND discs = 2 AND episodes = 3) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  8 Accuracy:  0.37499531255859303

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  the region 1 episode that aired in september aired in region 2 earlier  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE region_1_start LIKE '%-09-%' AND region_2_start < region_1_start) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE region_1_start LIKE '%-09-%' AND region_2_start < region_1_start) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  9 Accuracy:  0.4444395062277086

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  there is more than one disc  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE discs > 1) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE discs > 1) > 0
0                                             0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  10 Accuracy:  0.4999950000499995

-----------------------------------------------



id:  1-14562722-2.html.csv  S:  on march 15 , 2007 and in region 2 the highest number of episodes is 3  label:  0
answer_sql;  SELECT (SELECT MAX(episodes) FROM T WHERE region_2_start <= '2007-3-15' AND region_2_end >= '2007-3-15') = 3;


prediction:     (SELECT MAX(episodes) FROM T WHERE region_2_start <= '2007-3-15' AND region_2_end >= '2007-3-15') = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  11 Accuracy:  0.545449586821938

-----------------------------------------------

***********************************************************

2-18963715-1.html.csv  [['year', 'award_ceremony', 'category', 'nominee', 'result'],
['2009', 'tony award', 'best play', 'neil labute', 'nominated'],
['2009', 'tony award', 'best performance by a leading actor in a play', 'thomas sadoski', 'nominated'],
['2009', 'tony award', 'best performance by a featured actress in a play', 'marin ireland', 'nominated'],
['2009', 'drama desk award', 'outstanding play', 'outstanding play', 'nominated'],
['2009', 'drama desk award', 'outstanding actor in a play', 'thomas sadoski', 'nominated'],
['2009', 'drama desk award', 'outstanding director of a play', 'terry kinney', 'nominated'],
['2009', 'theatre world award', 'theatre world award', 'marin ireland', 'won']]

Table Column:  year, award_ceremony, category, nominee, result
DataFrame from database (3 rows) :

year | award_ceremony | category | nominee | result
2009 | tony award | best play | neil labute | nominated
2009 | tony award | best performance by a leading actor in a play | thomas sadoski | nominated
2009 | tony award | best performance by a featured actress in a play | marin ireland | nominated
table_ids:  [225, 226, 227, 228]

main_table: 2-18963715-1.html.csv table_qa_group:  [225, 226, 227, 228] number of questions:  4


id:  2-18963715-1.html.csv  S:  neil labute was nominated for best play in 2009  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE year = 2009 AND category = 'best play' AND nominee = 'neil labute' AND result = 'nominated') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE year = 2009 AND category = 'best play' AND nominee = 'neil labute' AND result = 'nominated') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-18963715-1.html.csv  S:  thomas sadoski was nominated for best performance by a leading actor in a play in 2009  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE year = 2009 AND category = 'best performance by a leading actor in a play' AND nominee = 'thomas sadoski' AND result = 'nominated') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE year = 2009 AND category = 'best performance by a leading actor in a play' AND nominee = 'thomas sadoski' AND result = 'nominated') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-18963715-1.html.csv  S:  reasons to be pretty was nominated for best play more than one time  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE category = 'best play' AND result = 'nominated') > 1;


prediction:     (SELECT COUNT(*) FROM T WHERE category = 'best play' AND result = 'nominated') > 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-18963715-1.html.csv  S:  before 2009 was the only year that reasons to be pretty had a nominee at the drama desk award ceremony  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE award_ceremony = 'drama desk award' AND year < 2009) = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE award_ceremony = 'drama desk award' AND year < 2009) = 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------

***********************************************************

2-11650849-7.html.csv  [['year', 'date', 'winner', 'winner_score', 'loser', 'loser_score', 'attendance', 'location'],
['1950', '1950-10-01', 'Green Bay Packers', '31', 'Chicago Bears', '21', '24893', 'Green Bay'],
['1950', '1950-10-15', 'Chicago Bears', '28', 'Green Bay Packers', '14', '51065', 'Chicago'],
['1951', '1951-09-30', 'Chicago Bears', '31', 'Green Bay Packers', '20', '24666', 'Green Bay'],
['1951', '1951-11-18', 'Chicago Bears', '24', 'Green Bay Packers', '13', '36771', 'Chicago'],
['1952', '1952-09-28', 'Chicago Bears', '24', 'Green Bay Packers', '14', '24656', 'Green Bay'],
['1952', '1952-11-09', 'Green Bay Packers', '41', 'Chicago Bears', '28', '41751', 'Chicago'],
['1953', '1953-10-04', 'Chicago Bears', '17', 'Green Bay Packers', '13', '24835', 'Green Bay'],
['1953', '1953-11-08', 'Chicago Bears', '21', 'Green Bay Packers', '21', '39889', 'Chicago'],
['1954', '1954-10-03', 'Chicago Bears', '10', 'Green Bay Packers', '3', '24414', 'Green Bay'],
['1954', '1954-11-07', 'Chicago Bears', '28', 'Green Bay Packers', '23', '47038', 'Chicago'],
['1955', '1955-10-02', 'Green Bay Packers', '24', 'Chicago Bears', '3', '24662', 'Green Bay'],
['1955', '1955-11-06', 'Chicago Bears', '52', 'Green Bay Packers', '31', '48890', 'Chicago'],
['1956', '1956-10-07', 'Chicago Bears', '37', 'Green Bay Packers', '21', '24668', 'Green Bay'],
['1956', '1956-11-11', 'Chicago Bears', '38', 'Green Bay Packers', '14', '49172', 'Chicago'],
['1957', '1957-09-29', 'Green Bay Packers', '21', 'Chicago Bears', '17', '32132', 'Green Bay'],
['1957', '1957-11-10', 'Chicago Bears', '21', 'Green Bay Packers', '14', '47153', 'Chicago'],
['1958', '1958-09-28', 'Chicago Bears', '34', 'Green Bay Packers', '20', '32150', 'Green Bay'],
['1958', '1958-11-09', 'Chicago Bears', '24', 'Green Bay Packers', '10', '48424', 'Chicago'],
['1959', '1959-09-27', 'Green Bay Packers', '9', 'Chicago Bears', '6', '32150', 'Green Bay'],
['1959', '1959-11-08', 'Chicago Bears', '28', 'Green Bay Packers', '17', '46205', 'Chicago']]

Table Column:  year, date, winner, winner_score, loser, loser_score, attendance, location
DataFrame from database (3 rows) :

year | date | winner | winner_score | loser | loser_score | attendance | location
1950 | 1950-10-01 | Green Bay Packers | 31 | Chicago Bears | 21 | 24893 | Green Bay
1950 | 1950-10-15 | Chicago Bears | 28 | Green Bay Packers | 14 | 51065 | Chicago
1951 | 1951-09-30 | Chicago Bears | 31 | Green Bay Packers | 20 | 24666 | Green Bay
table_ids:  [229, 230]

main_table: 2-11650849-7.html.csv table_qa_group:  [229, 230] number of questions:  2


id:  2-11650849-7.html.csv  S:  on sunday , september 30 , the chicago bears beat the green bay packers 31 - 20  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '1951-09-30' AND winner = 'Chicago Bears' AND winner_score = 31 AND loser = 'Green Bay Packers' AND loser_score = 20) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '1951-09-30' AND winner = 'Chicago Bears' AND winner_score = 31 AND loser = 'Green Bay Packers' AND loser_score = 20) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-11650849-7.html.csv  S:  the chicago bears were the losers against the green bay packers more than ten times  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE loser = 'Chicago Bears' AND winner = 'Green Bay Packers') > 10;


prediction:     (SELECT COUNT(*) FROM T WHERE loser = 'Chicago Bears' AND winner = 'Green Bay Packers') > 10
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------

***********************************************************

2-11051845-5.html.csv  [
    ["ngc_number", "object_type", "constellation", "right_ascension_j2000", "declination_j2000", "apparent_magnitude"],
    [5408, "irregular galaxy", "centaurus", "14h03m21.0s", "22°44′", 14.0],
    [5457, "spiral galaxy", "ursa major", "14h03m12.5s", "20°53′", 8.7],
    [5466, "globular cluster", "boötes", "14h05m27.4s", "32°4′", 10.5],
    [5474, "spiral galaxy", "ursa major", "14h05m01.5s", "39°45′", 11.9],
    [5477, "irregular galaxy", "ursa major", "14h05m33.1s", "27°40′", 14.5]
]

Table Column:  ngc_number, object_type, constellation, right_ascension_j2000, declination_j2000, apparent_magnitude
DataFrame from database (3 rows) :

ngc_number | object_type | constellation | right_ascension_j2000 | declination_j2000 | apparent_magnitude
5408 | irregular galaxy | centaurus | 14h03m21.0s | 22°44′ | 14.0
5457 | spiral galaxy | ursa major | 14h03m12.5s | 20°53′ | 8.7
5466 | globular cluster | boötes | 14h05m27.4s | 32°4′ | 10.5
table_ids:  [231, 232, 233, 234, 235, 236, 237, 238, 239, 240]

main_table: 2-11051845-5.html.csv table_qa_group:  [231, 232, 233, 234, 235, 236, 237, 238, 239, 240] number of questions:  10


id:  2-11051845-5.html.csv  S:  irregular galaxy is the object type having 2.1 more apparent magnitude than spiral galaxy  label:  1
answer_sql;  SELECT (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy') - (SELECT apparent_magnitude FROM T WHERE object_type = 'spiral galaxy') = 2.1;


prediction:     (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy') - (SELECT apparent_magnitude FROM T WHERE object_type = 'spiral galaxy') = 2.1
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  spiral galaxy have the least apparent magnitude  label:  1
answer_sql;  SELECT object_type, MIN(apparent_magnitude) FROM T WHERE object_type = 'spiral galaxy';


prediction:       object_type  MIN(apparent_magnitude)
0  spiral galaxy                      8.7
Gold answer:  1

Gen output:   Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  irregular galaxy has two ngc numbers in the list  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE object_type = 'irregular galaxy') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE object_type = 'irregular galaxy') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  globular cluster has less apparent magnitude than irregular galaxy  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE object_type = 'globular cluster' AND apparent_magnitude < (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy')) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE object_type = 'globular cluster' AND apparent_magnitude < (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy')) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  globular cluster has the second highest declination ( j2000 ) in the list  label:  1
answer_sql;  SELECT ngc_number, object_type, constellation, right_ascension_j2000, declination_j2000, apparent_magnitude
FROM T
WHERE declination_j2000 = (SELECT MAX(declination_j2000) FROM T WHERE object_type = 'globular cluster')
AND object_type = 'globular cluster';


prediction:     ngc_number       object_type  ... declination_j2000 apparent_magnitude
0        5466  globular cluster  ...             32°4′               10.5

[1 rows x 6 columns]
Gold answer:  1

Gen output:   Gold:  1
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  irregular galaxy is the object type having 2.1 more apparent magnitude than globular galaxy  label:  0
answer_sql;  SELECT (SELECT ngc_number FROM T WHERE object_type = 'irregular galaxy') = (SELECT ngc_number FROM T WHERE object_type = 'globular cluster' AND apparent_magnitude = (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy') - 2.1);


prediction:    (SELECT ngc_number FROM T WHERE object_type = 'irregular galaxy') = (SELECT ngc_number FROM T WHERE object_type = 'globular cluster' AND apparent_magnitude = (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy') - 2.1)
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  2 total:  6 Accuracy:  0.3333277778703688

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  spiral galaxy have the most apparent magnitude  label:  0
answer_sql;  SELECT object_type FROM T WHERE apparent_magnitude = (SELECT MAX(apparent_magnitude) FROM T WHERE object_type = 'spiral galaxy');


prediction:       object_type
0  spiral galaxy
Gold answer:  0

Direct ans:  spiral galaxy  Gold:  0

Gen output:  spiral galaxy  Gold:  0
Correcet:  2 total:  7 Accuracy:  0.28571020413994086

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  spiral galaxy has two ngc numbers in the list  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE object_type = 'spiral galaxy') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE object_type = 'spiral galaxy') = 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  8 Accuracy:  0.37499531255859303

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  globular cluster has more apparent magnitude than irregular galaxy  label:  0
answer_sql;  SELECT (SELECT apparent_magnitude FROM T WHERE object_type = 'globular cluster') > (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy');


prediction:     (SELECT apparent_magnitude FROM T WHERE object_type = 'globular cluster') > (SELECT apparent_magnitude FROM T WHERE object_type = 'irregular galaxy')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  9 Accuracy:  0.4444395062277086

-----------------------------------------------



id:  2-11051845-5.html.csv  S:  spiral galaxy has the second highest declination ( j2000 ) in the list  label:  0
answer_sql;  SELECT object_type, declination_j2000 FROM T WHERE object_type = 'spiral galaxy' ORDER BY declination_j2000 DESC LIMIT 1 OFFSET 1;


prediction:       object_type declination_j2000
0  spiral galaxy            20°53′
Gold answer:  0

Gen output:   Gold:  0
Correcet:  4 total:  10 Accuracy:  0.39999600003999963

-----------------------------------------------

***********************************************************

1-12834315-2.html.csv  [
    ["colt_model_no", "name", "stock", "fire_control", "rear_sight", "forward_assist", "case_deflector", "barrel_length", "barrel_profile", "barrel_twist", "hand_guards", "bayonet_lug", "muzzle_device"],
    ["r6000", "ar -15 sporter (sp1)", "a1", "s -1", "a1", "no", "no", "20 in", "a1", "1:12", "triangular", "yes", "type 2 duckbill or a1"],
    ["r6001", "ar -15 sporter carbine (sp1 carbine)", "2nd generation", "s -1", "a1", "no", "no", "16 in", "a1", "1:12", "short ribbed", "yes", "a1"],
    ["r6002", "ar -15 sporter (sp1 , bundled with 3x scope)", "a1", "s -1", "a1", "no", "no", "20 in", "a1", "1:12", "triangular", "yes", "a1"],
    ["r6420", "ar - 15a2 sporter ii carbine", "3rd generation", "s -1", "a1", "yes", "no & yes", "16 in", "a1", "1:7", "short ribbed", "yes", "a2"],
    ["r6430", "sporter lightweight (9 mm)", "a2", "s -1", "a1", "no", "removable", "16 in", "a1", "1:10", "short ribbed", "yes", "a1"],
    ["r6450", "ar -15 9 mm carbine", "3rd generation", "s -1", "a1", "no", "no & removable", "16 in", "a1", "1:10", "short ribbed", "yes", "a1"],
    ["r6500", "ar - 15a2 sporter ii", "a2", "s -1", "a1", "yes", "no & yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"],
    ["r6520", "ar - 15a2 government carbine", "3rd generation", "s -1", "a2", "yes", "yes", "16 in", "a1", "1:7", "short ribbed", "yes", "a2"],
    ["r6530", "sporter lightweight 223", "3rd generation", "s -1", "a2", "yes", "yes", "16 in", "a1", "1:7", "short ribbed", "no", "a2"],
    ["r6550", "ar - 15a2 government", "a2", "s -1", "a2", "yes", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"],
    ["r6550cc", "ar - 15a2 government (w / factory camouflage finish)", "a2", "s -1", "a2", "yes", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"],
    ["r6551", "sporter target", "a2", "s -1", "a2", "yes", "yes", "20 in", "a2", "1:7", "ribbed", "no", "a2"],
    ["r6600", "ar - 15a2 hbar", "a2", "s -1", "a2", "yes", "yes", "20 in", "hbar", "1:7", "ribbed", "yes", "a2"],
    ["r6601", "sporter match hbar", "a2", "s -1", "a2", "yes", "yes", "20 in", "hbar", "1:7", "ribbed", "no", "a2"],
    ["r6700", "sporter competition hbar", "a2", "s -1", "flattop", "yes", "yes", "20 in", "hbar", "1:9", "ribbed", "no", "a2"],
    ["r6721", "ar - 15a3 tactical carbine", "4th generation", "s -1", "a2", "yes", "yes", "16 in", "hbar", "1:9", "short ribbed", "yes", "a2"],
    ["r6724", "sporter competition hbar", "a2", "s -1", "flattop", "yes", "yes", "24 in", "hbar", "1:9", "ribbed", "no", "a2"],
    ["r6731", "ar - 15a3 competition hbar", "a2", "s -1", "a2", "yes", "yes", "16 in", "hbar", "1:9", "short ribbed", "no", "a2"],
    ["r6750", "sporter competition hbar (bundled w / bipod)", "a2", "s -1", "a2", "yes", "yes", "20 in", "super - heavy", "1:7", "ribbed", "no", "a2"],
    ["r6821", "sporter carbine (7.62x39 mm)", "3rd generation", "s -1", "a2", "yes", "yes", "16 in", "hbar", "1:12", "short ribbed", "no", "a1"]
]

Table Column:  colt_model_no, name, stock, fire_control, rear_sight, forward_assist, case_deflector, barrel_length, barrel_profile, barrel_twist, hand_guards, bayonet_lug, muzzle_device
DataFrame from database (3 rows) :

colt_model_no | name | stock | fire_control | rear_sight | forward_assist | case_deflector | barrel_length | barrel_profile | barrel_twist | hand_guards | bayonet_lug | muzzle_device
r6000 | ar -15 sporter (sp1) | a1 | s -1 | a1 | no | no | 20 in | a1 | 1:12 | triangular | yes | type 2 duckbill or a1
r6001 | ar -15 sporter carbine (sp1 carbine) | 2nd generation | s -1 | a1 | no | no | 16 in | a1 | 1:12 | short ribbed | yes | a1
r6002 | ar -15 sporter (sp1 , bundled with 3x scope) | a1 | s -1 | a1 | no | no | 20 in | a1 | 1:12 | triangular | yes | a1
table_ids:  [241, 242, 243]

main_table: 1-12834315-2.html.csv table_qa_group:  [241, 242, 243] number of questions:  3


id:  1-12834315-2.html.csv  S:  the ar - 15a3 competition hbar has a barrel length of 16 in  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE name = 'ar - 15a3 competition hbar' AND barrel_length = '16 in') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE name = 'ar - 15a3 competition hbar' AND barrel_length = '16 in') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  1-12834315-2.html.csv  S:  the sporter target has a s - 1 fire control  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE name = 'sporter target' AND fire_control = 's - 1') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE name = 'sporter target' AND fire_control = 's - 1') > 0
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  1-12834315-2.html.csv  S:  the fire control for the sporter target is a1  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE name = 'ar-15 sporter target' AND fire_control = 'a1') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE name = 'ar-15 sporter target' AND fire_control = 'a1') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------

***********************************************************

2-187504-13.html.csv  [['rank', 'nation', 'gold', 'silver', 'bronze', 'total'],
 ['1', 'soviet union (urs)', '11', '9', '9', '29'],
 ['2', 'east germany (gdr)', '9', '10', '6', '25'],
 ['3', 'switzerland (sui)', '5', '5', '5', '15'],
 ['4', 'finland (fin)', '4', '1', '2', '7'],
 ['5', 'sweden (swe)', '4', '0', '2', '6'],
 ['6', 'austria (aut)', '3', '5', '2', '10'],
 ['7', 'netherlands (ned)', '3', '2', '2', '7'],
 ['8', 'west germany (frg)', '2', '4', '2', '8'],
 ['9', 'united states (usa)', '2', '1', '3', '6'],
 ['10', 'italy (ita)', '2', '1', '2', '5'],
 ['13', 'canada (can)', '0', '2', '3', '5']]

Table Column:  rank, nation, gold, silver, bronze, total
DataFrame from database (3 rows) :

rank | nation | gold | silver | bronze | total
1 | soviet union (urs) | 11 | 9 | 9 | 29
2 | east germany (gdr) | 9 | 10 | 6 | 25
3 | switzerland (sui) | 5 | 5 | 5 | 15
table_ids:  [244, 245, 246, 247, 248, 249, 250, 251, 252, 253]

main_table: 2-187504-13.html.csv table_qa_group:  [244, 245, 246, 247, 248, 249, 250, 251, 252, 253] number of questions:  10


id:  2-187504-13.html.csv  S:  italy received two more gold medals than canada did but tied with the united states and west germany  label:  1
answer_sql;  SELECT (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'canada') + 2 AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'united states') AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'west germany');


prediction:    (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'canada') + 2 AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'united states') AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'west germany')
0                                               None
Gold answer:  1

Direct ans:  none  Gold:  1

Gen output:  none  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-187504-13.html.csv  S:  sweden placed higher than austria in the total medal count for the 1988 olympics  label:  0
answer_sql;  SELECT (SELECT rank FROM T WHERE nation = 'sweden') < (SELECT rank FROM T WHERE nation = 'austria');


prediction:    (SELECT rank FROM T WHERE nation = 'sweden') < (SELECT rank FROM T WHERE nation = 'austria')
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-187504-13.html.csv  S:  six different countries received the same number of bronze medals  label:  1
answer_sql;  SELECT COUNT(DISTINCT nation) FROM T WHERE bronze = (SELECT bronze FROM T GROUP BY bronze HAVING COUNT(*) = 6);


prediction:     COUNT(DISTINCT nation)
0                       6
Gold answer:  1

Direct ans:  6  Gold:  1

Gen output:  6  Gold:  1
Correcet:  0 total:  3 Accuracy:  0.0

-----------------------------------------------



id:  2-187504-13.html.csv  S:  sweden and canada were the only countries on the table that did not receive a medal in one of the categories  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'sweden' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 1 AND (SELECT COUNT(*) FROM T WHERE nation = 'canada' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'sweden' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 1 AND (SELECT COUNT(*) FROM T WHERE nation = 'canada' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 1
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  4 Accuracy:  0.0

-----------------------------------------------



id:  2-187504-13.html.csv  S:  the soviet union received four more medals than east germany in the total medal count  label:  1
answer_sql;  SELECT (SELECT total FROM T WHERE nation = 'soviet union (urs)') = (SELECT total FROM T WHERE nation = 'east germany (gdr)') + 4;


prediction:     (SELECT total FROM T WHERE nation = 'soviet union (urs)') = (SELECT total FROM T WHERE nation = 'east germany (gdr)') + 4
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  5 Accuracy:  0.1999960000799984

-----------------------------------------------



id:  2-187504-13.html.csv  S:  italy received three more gold medals than canada did but tied with the united states and west germany  label:  0
answer_sql;  SELECT (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'canada') + 3 AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'united states') AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'west germany');


prediction:    (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'canada') + 3 AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'united states') AND (SELECT gold FROM T WHERE nation = 'italy') = (SELECT gold FROM T WHERE nation = 'west germany')
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  1 total:  6 Accuracy:  0.1666638889351844

-----------------------------------------------



id:  2-187504-13.html.csv  S:  sweden placed lower than austria in the total medal count for the 1988 olympics  label:  1
answer_sql;  SELECT (SELECT rank FROM T WHERE nation = 'sweden') > (SELECT rank FROM T WHERE nation = 'austria');


prediction:    (SELECT rank FROM T WHERE nation = 'sweden') > (SELECT rank FROM T WHERE nation = 'austria')
0                                               None
Gold answer:  1

Direct ans:  none  Gold:  1

Gen output:  none  Gold:  1
Correcet:  1 total:  7 Accuracy:  0.14285510206997043

-----------------------------------------------



id:  2-187504-13.html.csv  S:  eight different countries received the same number of bronze medals  label:  0
answer_sql;  SELECT COUNT(DISTINCT nation) FROM T WHERE bronze = (SELECT bronze FROM T GROUP BY bronze HAVING COUNT(*) = 8);


prediction:     COUNT(DISTINCT nation)
0                       0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  8 Accuracy:  0.249996875039062

-----------------------------------------------



id:  2-187504-13.html.csv  S:  sweden and canada were the only countries on the table that did not receive a medal in two of the categories  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE nation = 'sweden' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 2 AND (SELECT COUNT(*) FROM T WHERE nation = 'canada' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE nation = 'sweden' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 2 AND (SELECT COUNT(*) FROM T WHERE nation = 'canada' AND (gold = 0 OR silver = 0 OR bronze = 0)) = 2
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  2 total:  9 Accuracy:  0.2222197531138543

-----------------------------------------------



id:  2-187504-13.html.csv  S:  the soviet union received six more medals than east germany in the total medal count  label:  0
answer_sql;  SELECT (SELECT total FROM T WHERE nation = 'soviet union (urs)') = (SELECT total FROM T WHERE nation = 'east germany (gdr)') + 6;


prediction:     (SELECT total FROM T WHERE nation = 'soviet union (urs)') = (SELECT total FROM T WHERE nation = 'east germany (gdr)') + 6
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  10 Accuracy:  0.2999970000299997

-----------------------------------------------

***********************************************************

2-15272585-8.html.csv  [
    ["outcome", "date", "tournament", "surface", "opponent", "score_set1", "score_set2", "score_set3"],
    ["runner-up", "2003-01-28", "tipton", "hard (i)", "matea mezak", 6, 4, 4],
    ["winner", "2003-06-29", "mont-de-marsan", "hard (i)", "oleksandra kravets", 6, 4, 2],
    ["runner-up", "2003-10-03", "latina", "clay", "roberta vinci", 3, 6, 4],
    ["runner-up", "2005-11-08", "pittsburgh", "hard", "lilia osterloh", 6, 7, 4],
    ["winner", "2006-06-06", "cuneo, italy", "clay", "alice canepa", 6, 1, 2]
]

Table Column:  outcome, date, tournament, surface, opponent, score_set1, score_set2, score_set3
DataFrame from database (3 rows) :

outcome | date | tournament | surface | opponent | score_set1 | score_set2 | score_set3
runner-up | 2003-01-28 | tipton | hard (i) | matea mezak | 6 | 4 | 4
winner | 2003-06-29 | mont-de-marsan | hard (i) | oleksandra kravets | 6 | 4 | 2
runner-up | 2003-10-03 | latina | clay | roberta vinci | 3 | 6 | 4
table_ids:  [254, 255, 256, 257, 258, 259, 260, 261, 262, 263]

main_table: 2-15272585-8.html.csv table_qa_group:  [254, 255, 256, 257, 258, 259, 260, 261, 262, 263] number of questions:  10


id:  2-15272585-8.html.csv  S:  galina voskoboeva played a total of 3 games on a hard tennis court  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE surface LIKE '%hard%') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE surface LIKE '%hard%') = 3
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva played 20% of her games on a clay top tennis court  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE surface = 'clay') / (SELECT COUNT(*) FROM T) = 0.2;


prediction:     (SELECT COUNT(*) FROM T WHERE surface = 'clay') / (SELECT COUNT(*) FROM T) = 0.2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva has an equal winrate between both clay and hard courts  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'clay') = (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface LIKE '%hard%');


prediction:     (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'clay') = (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface LIKE '%hard%')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva never played the same opponent more than one time  label:  1
answer_sql;  SELECT COUNT(*) = COUNT(DISTINCT opponent) FROM T;


prediction:     COUNT(*) = COUNT(DISTINCT opponent)
0                                    1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  on average , galina voskoboeva loses with only four points  label:  0
answer_sql;  SELECT AVG(score_set1 + score_set2 + score_set3) = 4 FROM T WHERE outcome = 'runner-up';


prediction:     AVG(score_set1 + score_set2 + score_set3) = 4
0                                              0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  5 Accuracy:  0.999980000399992

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva played a total of 3 games on a hard tennis court , and 1 on clay  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE surface LIKE '%hard%') = 3 AND (SELECT COUNT(*) FROM T WHERE surface = 'clay') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE surface LIKE '%hard%') = 3 AND (SELECT COUNT(*) FROM T WHERE surface = 'clay') = 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  6 Accuracy:  0.9999833336111065

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva played 20% of her games on a clay top tennis court and 1% on hard  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE surface = 'clay') / (SELECT COUNT(*) FROM T) = 0.2 AND (SELECT COUNT(*) FROM T WHERE surface = 'hard') / (SELECT COUNT(*) FROM T) = 0.01;


prediction:     (SELECT COUNT(*) FROM T WHERE surface = 'clay') / (SELECT COUNT(*) FROM T) = 0.2 AND (SELECT COUNT(*) FROM T WHERE surface = 'hard') / (SELECT COUNT(*) FROM T) = 0.01
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  7 Accuracy:  0.999985714489793

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva has an equal winrate between both clay and hard courts but she never won  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'clay') = (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'hard') AND (SELECT COUNT(*) FROM T WHERE outcome = 'winner') = 0;


prediction:     (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'clay') = (SELECT COUNT(*) FROM T WHERE outcome = 'winner' AND surface = 'hard') AND (SELECT COUNT(*) FROM T WHERE outcome = 'winner') = 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  8
Correcet:  8 total:  8 Accuracy:  0.999987500156248

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  galina voskoboeva never played the same opponent more than one time except in 6 june 2006  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T GROUP BY opponent HAVING COUNT(*) > 1) = 0 AND (SELECT COUNT(*) FROM T WHERE date = '2006-06-06' GROUP BY opponent HAVING COUNT(*) > 1) > 0;


prediction:    (SELECT COUNT(*) FROM T GROUP BY opponent HAVING COUNT(*) > 1) = 0 AND (SELECT COUNT(*) FROM T WHERE date = '2006-06-06' GROUP BY opponent HAVING COUNT(*) > 1) > 0
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  8 total:  9 Accuracy:  0.8888790124554172

-----------------------------------------------



id:  2-15272585-8.html.csv  S:  on average , galina voskoboeva loses with only four points against oleksandra kravets and alice canepa  label:  0
answer_sql;  SELECT AVG(score_set1 + score_set2 + score_set3) FROM T WHERE opponent = 'oleksandra kravets' OR opponent = 'alice canepa';


prediction:     AVG(score_set1 + score_set2 + score_set3)
0                                       10.5
Gold answer:  0

Direct ans:  10.5  Gold:  0

Gen output:  10.5  Gold:  0
Correcet:  8 total:  10 Accuracy:  0.7999920000799993

-----------------------------------------------

***********************************************************

2-16653153-30.html.csv  [['team', 'lost', 'last_5_wins', 'last_5_losses', 'streak_result', 'home_wins', 'home_losses', 'away_wins', 'away_losses', 'pts', 'won'],
['south dragons', 8, 4, 1, 'won', 13, 2, 9, 6, 110.25, 73.33],
['melbourne tigers', 10, 3, 2, 'lost', 11, 4, 9, 6, 106.47, 66.67],
['new zealand breakers', 12, 2, 3, 'won', 10, 5, 8, 7, 106.08, 60.0],
['perth wildcats', 13, 4, 1, 'won', 11, 4, 6, 9, 102.06, 56.67],
['townsville crocodiles', 13, 4, 1, 'lost', 12, 3, 5, 10, 99.26, 56.67],
['adelaide 36ers', 15, 3, 2, 'lost', 12, 3, 3, 12, 100.92, 50.0],
['wollongong hawks', 19, 2, 3, 'lost', 9, 6, 2, 13, 95.03, 36.67],
['sydney spirit', 19, 0, 5, 'lost', 9, 6, 2, 13, 94.51, 36.67],
['cairns taipans', 19, 1, 4, 'lost', 5, 10, 6, 9, 93.57, 36.67],
['gold coast blaze', 22, 3, 2, 'won', 6, 9, 2, 13, 93.45, 26.67]]

Table Column:  team, lost, last_5_wins, last_5_losses, streak_result, home_wins, home_losses, away_wins, away_losses, pts, won
DataFrame from database (3 rows) :

team | lost | last_5_wins | last_5_losses | streak_result | home_wins | home_losses | away_wins | away_losses | pts | won
south dragons | 8 | 4 | 1 | won | 13 | 2 | 9 | 6 | 110.25 | 73.33
melbourne tigers | 10 | 3 | 2 | lost | 11 | 4 | 9 | 6 | 106.47 | 66.67
new zealand breakers | 12 | 2 | 3 | won | 10 | 5 | 8 | 7 | 106.08 | 60.0
table_ids:  [264, 265, 266, 267, 268, 269, 270, 271, 272, 273]

main_table: 2-16653153-30.html.csv table_qa_group:  [264, 265, 266, 267, 268, 269, 270, 271, 272, 273] number of questions:  10


id:  2-16653153-30.html.csv  S:  south dragons won the most games in the season  label:  1
answer_sql;  SELECT (SELECT MAX(won) FROM T WHERE team = 'south dragons') > (SELECT MAX(won) FROM T WHERE team != 'south dragons');


prediction:     (SELECT MAX(won) FROM T WHERE team = 'south dragons') > (SELECT MAX(won) FROM T WHERE team != 'south dragons')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  the melbourne tigers have the same away record as south dragons  label:  1
answer_sql;  SELECT (SELECT away_wins FROM T WHERE team = 'melbourne tigers') = (SELECT away_wins FROM T WHERE team = 'south dragons') AND (SELECT away_losses FROM T WHERE team = 'melbourne tigers') = (SELECT away_losses FROM T WHERE team = 'south dragons');


prediction:     (SELECT away_wins FROM T WHERE team = 'melbourne tigers') = (SELECT away_wins FROM T WHERE team = 'south dragons') AND (SELECT away_losses FROM T WHERE team = 'melbourne tigers') = (SELECT away_losses FROM T WHERE team = 'south dragons')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  the new zealand breakers lost two games more than the melbourne tigers  label:  1
answer_sql;  SELECT (SELECT lost FROM T WHERE team = 'new zealand breakers') = (SELECT lost FROM T WHERE team = 'melbourne tigers') + 2;


prediction:     (SELECT lost FROM T WHERE team = 'new zealand breakers') = (SELECT lost FROM T WHERE team = 'melbourne tigers') + 2
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  gold coast blaze had the worst record in the season  label:  1
answer_sql;  SELECT (SELECT MIN(lost) FROM T) = (SELECT lost FROM T WHERE team = 'gold coast blaze');


prediction:     (SELECT MIN(lost) FROM T) = (SELECT lost FROM T WHERE team = 'gold coast blaze')
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  the perth wildcats and townsville crocodiles both have the same loss records for the season  label:  1
answer_sql;  SELECT (SELECT lost FROM T WHERE team = 'perth wildcats') = (SELECT lost FROM T WHERE team = 'townsville crocodiles');


prediction:     (SELECT lost FROM T WHERE team = 'perth wildcats') = (SELECT lost FROM T WHERE team = 'townsville crocodiles')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  gold coast blaze won the most games in the season  label:  0
answer_sql;  SELECT (SELECT MAX(won) FROM T WHERE team = 'gold coast blaze') > (SELECT MAX(won) FROM T);


prediction:     (SELECT MAX(won) FROM T WHERE team = 'gold coast blaze') > (SELECT MAX(won) FROM T)
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  melbourne tigers have the same home record as south dragons  label:  0
answer_sql;  SELECT (SELECT home_wins FROM T WHERE team = 'melbourne tigers') = (SELECT home_wins FROM T WHERE team = 'south dragons') AND (SELECT home_losses FROM T WHERE team = 'melbourne tigers') = (SELECT home_losses FROM T WHERE team = 'south dragons');


prediction:     (SELECT home_wins FROM T WHERE team = 'melbourne tigers') = (SELECT home_wins FROM T WHERE team = 'south dragons') AND (SELECT home_losses FROM T WHERE team = 'melbourne tigers') = (SELECT home_losses FROM T WHERE team = 'south dragons')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  the new zealand breakers won two games more than the melbourne tigers  label:  0
answer_sql;  SELECT (SELECT pts FROM T WHERE team = 'new zealand breakers') - (SELECT pts FROM T WHERE team = 'melbourne tigers') = 2;


prediction:     (SELECT pts FROM T WHERE team = 'new zealand breakers') - (SELECT pts FROM T WHERE team = 'melbourne tigers') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  gold coast blaze had the best record in the season  label:  0
answer_sql;  SELECT (SELECT MAX(pts) FROM T) FROM T WHERE team = 'gold coast blaze';


prediction:     (SELECT MAX(pts) FROM T)
0                    110.25
Gold answer:  0

Direct ans:  110.25  Gold:  0

Gen output:  110.25  Gold:  0
Correcet:  7 total:  9 Accuracy:  0.7777691358984901

-----------------------------------------------



id:  2-16653153-30.html.csv  S:  the perth wildcats and townsville crocodiles both have the same won records for the season  label:  1
answer_sql;  SELECT (SELECT won FROM T WHERE team = 'perth wildcats') = (SELECT won FROM T WHERE team = 'townsville crocodiles');


prediction:     (SELECT won FROM T WHERE team = 'perth wildcats') = (SELECT won FROM T WHERE team = 'townsville crocodiles')
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  8
Correcet:  8 total:  10 Accuracy:  0.7999920000799993

-----------------------------------------------

***********************************************************

2-12206617-3.html.csv  [['date', 'opponent', 'score', 'loss', 'attendance', 'record'],
['may 1', 'rangers', '3 - 0', 'key', 33439, '4 - 1'],
['may 2', 'royals', '3 - 1', 'appier', 22896, '1 - 4'],
['may 3', 'royals', '5 - 1', 'davis', 20809, '2 - 2'],
['may 4', 'royals', '6 - 5', 'boucher', 22628, '0 - 2'],
['may 5', 'royals', '3 - 0', 'gordon', 22588, '1 - 2'],
['may 7', 'rangers', '3 - 2', 'key', 44622, '4 - 2'],
['may 8', 'rangers', '4 - 2', 'ryan', 43211, '3 - 3'],
['may 9', 'white sox', '2 - 0', 'pãrez', 47236, '1 - 2'],
['may 10', 'white sox', '5 - 3 (12)', 'fraser', 50198, '0 - 1'],
['may 11', 'white sox', '5 - 2', 'hough', 50206, '0 - 2'],
['may 12', 'white sox', '4 - 2', 'hibbard', 50108, '2 - 1'],
['may 13', 'royals', '4 - 2', 'davis', 44275, '2 - 4'],
['may 14', 'royals', '4 - 1', 'gubicza', 43357, '0 - 1'],
['may 15', 'royals', '6 - 4', 'boucher', 50113, '0 - 3'],
['may 17', 'white sox', '5 - 3', 'timlin', 30095, '3 - 1'],
['may 18', 'white sox', '9 - 2', 'hibbard', 34861, '2 - 2'],
['may 19', 'white sox', '5 - 4', 'timlin', 41015, '3 - 2'],
['may 20', 'athletics', '1 - 0', 'welch', 24631, '4 - 3'],
['may 21', 'athletics', '11 - 7', 'dressendorfer', 22738, '3 - 3'],
['may 22', 'athletics', '2 - 1', 'stieb', 34028, '4 - 3'],
['may 24', 'angels', '3 - 2', 'finley', 26408, '7 - 2'],
['may 25', 'angels', '5 - 0', 'stottlemyre', 36732, '5 - 1'],
['may 26', 'angels', '6 - 2', 'wells', 45307, '5 - 4'],
['may 28', 'athletics', '8 - 4', 'acker', 50299, '1 - 2'],
['may 29', 'athletics', '8 - 3', 'slusarski', 50262, '1 - 2'],
['may 30', 'athletics', '8 - 6', 'ward', 50271, '0 - 2'],
['may 31', 'angels', '5 - 1', 'langston', 50252, '6 - 2']]

Table Column:  date, opponent, score, loss, attendance, record
DataFrame from database (3 rows) :

date | opponent | score | loss | attendance | record
may 1 | rangers | 3 - 0 | key | 33439 | 4 - 1
may 2 | royals | 3 - 1 | appier | 22896 | 1 - 4
may 3 | royals | 5 - 1 | davis | 20809 | 2 - 2
table_ids:  [274, 275, 276, 277, 278, 279, 280, 281, 282, 283]

main_table: 2-12206617-3.html.csv table_qa_group:  [274, 275, 276, 277, 278, 279, 280, 281, 282, 283] number of questions:  10


id:  2-12206617-3.html.csv  S:  the toronto blue jays played in 8 games with an attendance greater than 5000 in may of the 1991 season  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE 'may%' AND attendance > 5000) = 8;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE 'may%' AND attendance > 5000) = 8
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays played the rangers three times in may during the 1991 season  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'rangers' AND date LIKE 'may%' AND date LIKE '%1991%') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'rangers' AND date LIKE 'may%' AND date LIKE '%1991%') = 3
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays won two of the last three games they played in may 1991  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '%may 1991' AND result = 'win') = 2;
error:  2-12206617-3.html.csv


id:  2-12206617-3.html.csv  S:  the game with the lowest attendance in may of the 1991 toronto blue jays season was played against the royals  label:  0
answer_sql;  SELECT MIN(attendance) FROM T WHERE date LIKE 'may%' AND opponent = 'royals';


prediction:     MIN(attendance)
0            20809
Gold answer:  0

Direct ans:  20809  Gold:  0

Gen output:  20809  Gold:  0
Correcet:  0 total:  3 Accuracy:  0.0

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays lost three consecutive games between the 25th and the 28th may 1991  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date BETWEEN 'may 25' AND 'may 28' AND loss = 'key') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE date BETWEEN 'may 25' AND 'may 28' AND loss = 'key') = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  4 Accuracy:  0.24999375015624611

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays played in 8 games with an attendance lower than 5000 in may of the 1991 season  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE attendance < 5000 AND date LIKE 'may%') = 8;


prediction:     (SELECT COUNT(*) FROM T WHERE attendance < 5000 AND date LIKE 'may%') = 8
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays played the angels three times in may during the 1991 season  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'angels' AND date LIKE 'may%' AND date LIKE '%1991%') = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'angels' AND date LIKE 'may%' AND date LIKE '%1991%') = 3
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays lost two of the last three games they played in may 1991  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date LIKE '%may 1991' AND loss = 'key') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE date LIKE '%may 1991' AND loss = 'key') = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the game with the lowest attendance in may of the 1991 toronto blue jays season was played against the athletics  label:  0
answer_sql;  SELECT (SELECT opponent FROM T WHERE date LIKE 'may%' ORDER BY attendance ASC LIMIT 1) = 'athletics';


prediction:     (SELECT opponent FROM T WHERE date LIKE 'may%' ORDER BY attendance ASC LIMIT 1) = 'athletics'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  8 Accuracy:  0.6249921875976551

-----------------------------------------------



id:  2-12206617-3.html.csv  S:  the toronto blue jays lost one consecutive games between the 25th and the 28th may 1991  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date BETWEEN 'may 25' AND 'may 28' AND loss = 'yes') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE date BETWEEN 'may 25' AND 'may 28' AND loss = 'yes') = 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  9 Accuracy:  0.6666592593415629

-----------------------------------------------

***********************************************************

2-17933602-1.html.csv  [
    ["club", "head_coach", "city", "stadium", "season_rank"],
    ["académica de coimbra", "joão carlos pereira", "coimbra", "estádio cidade de coimbra", "13"],
    ["belenenses", "carlos carvalhal", "lisbon", "estádio do restelo", "15"],
    ["benfica", "giovanni trapattoni", "lisbon", "estádio da luz", "2"],
    ["boavista", "jaime pacheco", "porto", "estádio do bessa - século xxi", "8"],
    ["braga", "jesualdo ferreira", "braga", "estádio municipal de braga - axa", "5"],
    ["estoril - praia", "litos", "estoril", "estádio antónio coimbra da mota", "1"],
    ["gil vicente", "luís campos", "barcelos", "estádio cidade de barcelos", "12"],
    ["união de leiria", "vítor pontes", "leiria", "estádio dr magalhães pessoa", "10"],
    ["penafiel", "manuel fernandes", "penafiel", "estádio municipal 25 de abril", "3"],
    ["marítimo", "manuel cajuda", "funchal", "estádio dos barreiros", "6"],
    ["nacional", "casemiro mior", "funchal", "estádio da madeira", "4"],
    ["beira - mar", "mick wadsworth", "aveiro", "estádio municipal de aveiro", "11"],
    ["moreirense", "vítor oliveira", "guimarães", "estádio do moreirense", "9"],
    ["porto", "luigi delneri", "porto", "estádio do dragão", "1"],
    ["sporting cp", "josé peseiro", "lisbon", "estádio josé alvalade - século xxi", "3"],
    ["rio ave", "carlos brito", "vila do conde", "estádio dos arcos", "7"],
    ["vitória de guimarães", "manuel machado", "guimarães", "estádio d afonso henriques", "14"],
    ["vitória de setúbal", "josé couceiro", "setúbal", "estádio do bonfim", "2"]
]

Table Column:  club, head_coach, city, stadium, season_rank
DataFrame from database (3 rows) :

club | head_coach | city | stadium | season_rank
académica de coimbra | joão carlos pereira | coimbra | estádio cidade de coimbra | 13
belenenses | carlos carvalhal | lisbon | estádio do restelo | 15
benfica | giovanni trapattoni | lisbon | estádio da luz | 2
table_ids:  [284, 285, 286, 287, 288, 289, 290, 291, 292, 293]

main_table: 2-17933602-1.html.csv table_qa_group:  [284, 285, 286, 287, 288, 289, 290, 291, 292, 293] number of questions:  10


id:  2-17933602-1.html.csv  S:  rio ave 's head coach was carlos brito and club sporting cp has josé peseiro  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE club = 'rio ave' AND head_coach = 'carlos brito') > 0 AND (SELECT COUNT(*) FROM T WHERE club = 'sporting cp' AND head_coach = 'josé peseiro') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE club = 'rio ave' AND head_coach = 'carlos brito') > 0 AND (SELECT COUNT(*) FROM T WHERE club = 'sporting cp' AND head_coach = 'josé peseiro') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  the 15th in the liga of the 2003 - 2004 season was in estádio do restelo while the13th in the liga was held in estádio cidade de coimbra  label:  1
answer_sql;  SELECT (SELECT club FROM T WHERE season_rank = 15) = 'belenenses' AND (SELECT club FROM T WHERE season_rank = 13) = 'académica de coimbra' AND (SELECT stadium FROM T WHERE season_rank = 15) = 'estádio do restelo' AND (SELECT stadium FROM T WHERE season_rank = 13) = 'estádio cidade de coimbra';


prediction:     (SELECT club FROM T WHERE season_rank = 15) = 'belenenses' AND (SELECT club FROM T WHERE season_rank = 13) = 'académica de coimbra' AND (SELECT stadium FROM T WHERE season_rank = 15) = 'estádio do restelo' AND (SELECT stadium FROM T WHERE season_rank = 13) = 'estádio cidade de coimbra'
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  josé couceiro was the head coach in setúbal , and it was manuel machado in guimarães  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE city = 'setúbal' AND head_coach = 'josé couceiro') > 0 AND (SELECT COUNT(*) FROM T WHERE city = 'guimarães' AND head_coach = 'manuel machado') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE city = 'setúbal' AND head_coach = 'josé couceiro') > 0 AND (SELECT COUNT(*) FROM T WHERE city = 'guimarães' AND head_coach = 'manuel machado') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  porto was 1st in the liga for the 2003 - 2004 season , followed by benfica  label:  1
answer_sql;  SELECT (SELECT season_rank FROM T WHERE club = 'porto' AND season = '2003 - 2004') = 1 AND (SELECT season_rank FROM T WHERE club = 'benfica' AND season = '2003 - 2004') = 2;
error:  2-17933602-1.html.csv


id:  2-17933602-1.html.csv  S:  clubs belenenses , benfica and sporting cp have lisbon as the city  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')) = 3;


prediction:     (SELECT COUNT(*) FROM T WHERE city = 'lisbon' AND club IN ('belenenses', 'benfica', 'sporting cp')) = 3
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  rio ave 's head coach was carlos brito and club sporting cp has carlos brito as well  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE club = 'rio ave' AND head_coach = 'carlos brito') > 0 AND (SELECT COUNT(*) FROM T WHERE club = 'sporting cp' AND head_coach = 'carlos brito') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE club = 'rio ave' AND head_coach = 'carlos brito') > 0 AND (SELECT COUNT(*) FROM T WHERE club = 'sporting cp' AND head_coach = 'carlos brito') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  5 Accuracy:  0.999980000399992

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  the 15th in the liga of the 2003 - 2004 season was in estádio do restelo while the 2nd in the liga was held in estádio cidade de coimbra  label:  0
answer_sql;  SELECT (SELECT club FROM T WHERE season_rank = 15) = 'belenenses' AND (SELECT club FROM T WHERE season_rank = 2) = 'académica de coimbra';


prediction:     (SELECT club FROM T WHERE season_rank = 15) = 'belenenses' AND (SELECT club FROM T WHERE season_rank = 2) = 'académica de coimbra'
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  6 Accuracy:  0.9999833336111065

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  josé couceiro was the head coach in setúbal , and it was manuel machado in guimarães , the only time guimarães is a city  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE city = 'setúbal' AND head_coach = 'josé couceiro') = 1 AND (SELECT COUNT(*) FROM T WHERE city = 'guimarães' AND head_coach = 'manuel machado') = 1 AND (SELECT COUNT(DISTINCT city) FROM T) = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE city = 'setúbal' AND head_coach = 'josé couceiro') = 1 AND (SELECT COUNT(*) FROM T WHERE city = 'guimarães' AND head_coach = 'manuel machado') = 1 AND (SELECT COUNT(DISTINCT city) FROM T) = 1
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  7 Accuracy:  0.999985714489793

-----------------------------------------------



id:  2-17933602-1.html.csv  S:  porto was 1st in the liga for the 2003 - 2004 season , followed by benfica , both from the city of porto  label:  0
answer_sql;  SELECT (SELECT season_rank FROM T WHERE club = 'porto' AND head_coach = 'porto' AND season = '2003 - 2004') = 1 AND (SELECT season_rank FROM T WHERE club = 'benfica' AND head_coach = 'porto' AND season = '2003 - 2004') = 2;
error:  2-17933602-1.html.csv


id:  2-17933602-1.html.csv  S:  clubs belenenses , benfica and sporting cp are three of four places with lisbon as the city  label:  0
answer_sql;  SELECT (SELECT COUNT(DISTINCT club) FROM T WHERE city = 'lisbon') = 3;


prediction:     (SELECT COUNT(DISTINCT club) FROM T WHERE city = 'lisbon') = 3
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------

***********************************************************

2-10814487-4.html.csv  [
    ["date", "home_team", "home_score", "away_team", "away_score", "home_goals", "away_goals", "attendance", "competition"],
    ["2007-11-02", "bradford", 18, "huddersfield giants", 14, 3, 4, 12130, "super league xii"],
    ["2007-02-18", "warrington wolves", 20, "bradford", 36, 6, 7, 12607, "super league xii"],
    ["2007-02-24", "bradford", 32, "wigan warriors", 28, 6, 6, 12798, "super league xii"],
    ["2007-02-03", "st helens", 34, "bradford", 22, 3, 4, 11793, "super league xii"],
    ["2007-11-03", "bradford", 56, "salford city reds", 18, 8, 10, 10640, "super league xii"],
    ["2007-03-17", "harlequins rl", 22, "bradford", 36, 6, 6, 4011, "super league xii"],
    ["2007-03-25", "bradford", 22, "catalans dragons", 29, 3, 4, 11298, "super league xii"],
    ["2007-03-30", "bradford", 24, "castleford tigers", 16, 4, 4, 6748, "rugby league challenge cup"],
    ["2007-05-04", "bradford", 14, "leeds rhinos", 18, 3, 5, 16706, "super league xii"],
    ["2007-09-04", "wakefield trinity wildcats", 24, "bradford", 36, 6, 7, 9106, "super league xii"],
    ["2007-04-15", "bradford", 52, "hull kr", 22, 8, 9, 10881, "super league xii"],
    ["2007-04-20", "hull fc", 22, "bradford", 32, 4, 6, 12767, "super league xii"],
    ["2007-04-29", "bradford", 36, "warrington wolves", 24, 3, 3, 11200, "super league xii"],
    ["2007-06-05", "bradford", 38, "leeds rhinos", 42, 7, 7, 26667, "super league xii"],
    ["2007-05-13", "wakefield trinity wildcats", 4, "bradford", 14, 1, 3, 3568, "rugby league challenge cup"],
    ["2007-05-18", "huddersfield giants", 36, "bradford", 12, 2, 2, 8667, "super league xii"],
    ["2007-05-27", "bradford", 44, "harlequins rl", 18, 6, 8, 10418, "super league xii"],
    ["2007-02-06", "catalans dragons", 20, "bradford", 28, 4, 5, 7555, "super league xii"],
    ["2007-10-06", "bradford", 52, "huddersfield giants", 20, 8, 10, 7811, "rugby league challenge cup"],
    ["2007-06-17", "bradford", 34, "hull fc", 8, 4, 6, 11557, "super league xii"],
    ["2007-06-29", "leeds rhinos", 14, "bradford", 38, 7, 7, 22000, "super league xii"],
    ["2007-06-07", "wigan warriors", 25, "bradford", 18, 5, 5, 15107, "super league xii"],
    ["2007-07-13", "bradford", 10, "st helens", 4, 3, 3, 11217, "super league xii"],
    ["2007-07-21", "salford city reds", 14, "bradford", 10, 1, 2, 3438, "super league xii"],
    ["2007-07-28", "bradford", 16, "st helens", 35, 1, 3, 14316, "rugby league challenge cup"],
    ["2007-05-08", "bradford", 38, "wakefield trinity wildcats", 24, 5, 8, 10701, "super league xii"],
    ["2007-12-08", "hull kr", 10, "bradford", 28, 4, 5, 6695, "super league xii"],
    ["2007-08-19", "huddersfield giants", 26, "bradford", 22, 5, 5, 6824, "super league xii"],
    ["2007-02-09", "bradford", 16, "leeds rhinos", 16, 2, 4, 18000, "super league xii"],
    ["2007-09-09", "bradford", 40, "catalans dragons", 8, 6, 7, 9350, "super league xii"],
    ["2007-09-14", "hull fc", 20, "bradford", 10, 1, 2, 14409, "super league xii"],
    ["2007-09-21", "bradford", 30, "wigan warriors", 31, 5, 6, 9000, "super league xii"]
]

Table Column:  date, home_team, home_score, away_team, away_score, home_goals, away_goals, attendance, competition
DataFrame from database (3 rows) :

date | home_team | home_score | away_team | away_score | home_goals | away_goals | attendance | competition
2007-11-02 | bradford | 18 | huddersfield giants | 14 | 3 | 4 | 12130 | super league xii
2007-02-18 | warrington wolves | 20 | bradford | 36 | 6 | 7 | 12607 | super league xii
2007-02-24 | bradford | 32 | wigan warriors | 28 | 6 | 6 | 12798 | super league xii
table_ids:  [294, 295, 296, 297]

main_table: 2-10814487-4.html.csv table_qa_group:  [294, 295, 296, 297] number of questions:  4


id:  2-10814487-4.html.csv  S:  the score on 15 / 04 / 07 in super league xii was 52 - 22  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2007-04-15' AND competition = 'super league xii' AND (home_score = 52 OR away_score = 52) AND (home_score = 22 OR away_score = 22)) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2007-04-15' AND competition = 'super league xii' AND (home_score = 52 OR away_score = 52) AND (home_score = 22 OR away_score = 22)) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-10814487-4.html.csv  S:  the super league xii score on 21 / 07 / 07 was 14 - 10  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2007-07-21' AND competition = 'super league xii' AND ((home_score = 14 AND away_score = 10) OR (home_score = 10 AND away_score = 14))) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2007-07-21' AND competition = 'super league xii' AND ((home_score = 14 AND away_score = 10) OR (home_score = 10 AND away_score = 14))) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-10814487-4.html.csv  S:  the score on 15 / 04 / 07 in super league xii was 52 to 22 with an attendance of 9000  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2007-04-15' AND competition = 'super league xii' AND (home_score = 52 OR away_score = 52) AND (home_score = 22 OR away_score = 22) AND attendance = 9000) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2007-04-15' AND competition = 'super league xii' AND (home_score = 52 OR away_score = 52) AND (home_score = 22 OR away_score = 22) AND attendance = 9000) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-10814487-4.html.csv  S:  the score on 21 / 07 / 07 was 14 to 10 and the home team was bradford  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE date = '2007-07-21' AND home_team = 'bradford' AND home_score = 14 AND away_score = 10) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE date = '2007-07-21' AND home_team = 'bradford' AND home_score = 14 AND away_score = 10) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------

***********************************************************

2-16623894-37.html.csv  [['team_1', 'agg_team_1', 'team_2', 'agg_team_2', '1st_leg_team_1', '1st_leg_team_2', '2nd_leg_team_1', '2nd_leg_team_2'],
['hamburg', '6', 'anderlecht', '5', '3', '1', '3', '4'],
['rubin kazan', '2', 'wolfsburg', '3', '1', '1', '1', '2'],
['atlético madrid', '2', 'sporting cp', '2', '0', '0', '2', '2'],
['benfica', '3', 'marseille', '2', '1', '1', '2', '1'],
['panathinaikos', '1', 'standard liège', '4', '1', '3', '0', '1'],
['lille', '1', 'liverpool', '3', '1', '0', '0', '3'],
['juventus', '4', 'fulham', '5', '3', '1', '1', '4'],
['valencia', '5', 'werder bremen', '5', '1', '1', '4', '4']]

Table Column:  team_1, agg_team_1, team_2, agg_team_2, 1st_leg_team_1, 1st_leg_team_2, 2nd_leg_team_1, 2nd_leg_team_2
DataFrame from database (3 rows) :

team_1 | agg_team_1 | team_2 | agg_team_2 | 1st_leg_team_1 | 1st_leg_team_2 | 2nd_leg_team_1 | 2nd_leg_team_2
hamburg | 6 | anderlecht | 5 | 3 | 1 | 3 | 4
rubin kazan | 2 | wolfsburg | 3 | 1 | 1 | 1 | 2
atlético madrid | 2 | sporting cp | 2 | 0 | 0 | 2 | 2
table_ids:  [298, 299, 300, 301, 302]

main_table: 2-16623894-37.html.csv table_qa_group:  [298, 299, 300, 301, 302] number of questions:  5


id:  2-16623894-37.html.csv  S:  the first leg score was 1 - 3 for the match with a team 1 of panathinaikos  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE 1st_leg_team_1 = 'panathinaikos' AND 1st_leg_team_2 = 3) > 0;
error:  2-16623894-37.html.csv


id:  2-16623894-37.html.csv  S:  werder bremen , who is in team 2 , had a score of 4 - 4 in the 2nd leg  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE team_2 = 'werder bremen' AND 2nd_leg_team_1 = 4 AND 2nd_leg_team_2 = 4) > 0;
error:  2-16623894-37.html.csv


id:  2-16623894-37.html.csv  S:  standard liège had a match against hamburg as team 1  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE team_1 = 'standard liège' OR team_2 = 'standard liège') > 0 AND (SELECT COUNT(*) FROM T WHERE team_1 = 'hamburg' OR team_2 = 'hamburg') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE team_1 = 'standard liège' OR team_2 = 'standard liège') > 0 AND (SELECT COUNT(*) FROM T WHERE team_1 = 'hamburg' OR team_2 = 'hamburg') > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-16623894-37.html.csv  S:  the 2nd leg score is less than the first leg score for the match with a team 2 of werder bremen  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE team_2 = 'werder bremen' AND 2nd_leg_team_2 < 1st_leg_team_2) > 0;
error:  2-16623894-37.html.csv


id:  2-16623894-37.html.csv  S:  the first leg score was 1 - 3 for the match with a team 1 of panathinaikos and a team 2 of liverpool  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE team_1 = 'panathinaikos' AND team_2 = 'liverpool' AND 1st_leg_team_1 = 1 AND 1st_leg_team_2 = 3) > 0;
error:  2-16623894-37.html.csv
***********************************************************

2-17751797-4.html.csv  [['tie_no', 'home_team', 'home_score', 'away_team', 'away_score', 'date'],
['1', 'liverpool', '2', 'brighton & hove albion', '2', '1991-01-26'],
['1', 'brighton & hove albion', '2', 'liverpool', '3', '1991-01-30'],
['2', 'notts county', '2', 'oldham athletic', '0', '1991-01-26'],
['3', 'crewe alexandra', '1', 'rotherham united', '0', '1991-01-26'],
['4', 'luton town', '1', 'west ham united', '1', '1991-01-26'],
['4', 'west ham united', '5', 'luton town', '0', '1991-01-30'],
['5', 'woking', '0', 'everton', '1', '1991-01-27'],
['6', 'shrewsbury town', '1', 'wimbledon', '0', '1991-01-26'],
['7', 'newcastle united', '2', 'nottingham forest', '2', '1991-02-13'],
['7', 'nottingham forest', '3', 'newcastle united', '0', '1991-02-18'],
['8', 'tottenham hotspur', '4', 'oxford united', '2', '1991-01-26'],
['9', 'coventry city', '1', 'southampton', '1', '1991-01-26'],
['9', 'southampton', '2', 'coventry city', '0', '1991-01-29'],
['10', 'portsmouth', '5', 'bournemouth', '1', '1991-01-26'],
['11', 'manchester united', '1', 'bolton wanderers', '0', '1991-01-26'],
['12', 'norwich city', '3', 'swindon town', '1', '1991-01-26'],
['13', 'millwall', '4', 'sheffield wednesday', '4', '1991-01-26'],
['13', 'sheffield wednesday', '2', 'millwall', '0', '1991-01-30'],
['14', 'port vale', '1', 'manchester city', '2', '1991-01-26'],
['15', 'arsenal', '0', 'leeds united', '0', '1991-01-27'],
['15', 'leeds united', '1', 'arsenal', '1', '1991-01-30'],
['15', 'arsenal', '0', 'leeds united', '0', '1991-02-13'],
['15', 'leeds united', '1', 'arsenal', '2', '1991-02-16'],
['16', 'cambridge united', '2', 'middlesbrough', '0', '1991-01-26']]

Table Column:  tie_no, home_team, home_score, away_team, away_score, date
DataFrame from database (3 rows) :

tie_no | home_team | home_score | away_team | away_score | date
1 | liverpool | 2 | brighton & hove albion | 2 | 1991-01-26
1 | brighton & hove albion | 2 | liverpool | 3 | 1991-01-30
2 | notts county | 2 | oldham athletic | 0 | 1991-01-26
table_ids:  [303, 304, 305, 306, 307, 308, 309, 310, 311]

main_table: 2-17751797-4.html.csv table_qa_group:  [303, 304, 305, 306, 307, 308, 309, 310, 311] number of questions:  9


id:  2-17751797-4.html.csv  S:  the score was 1 - 0 when the away team was bolton wanderers  label:  1
answer_sql;  SELECT * FROM T WHERE (home_score = 1 OR away_score = 1) AND (home_team = 'bolton wanderers' OR away_team = 'bolton wanderers');


prediction:    tie_no          home_team home_score         away_team away_score        date
0     11  manchester united          1  bolton wanderers          0  1991-01-26
Gold answer:  1

Gen output:   Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  the score was 2 - 3 when the away team was liverpool on the date of 30 / 01 / 1991  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE away_team = 'liverpool' AND home_score = 2 AND away_score = 3 AND date = '1991-01-30') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE away_team = 'liverpool' AND home_score = 2 AND away_score = 3 AND date = '1991-01-30') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  the score was 2 - 2 when the away team was brighton and hove albion  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE away_team = 'brighton & hove albion' AND home_score = 2 AND away_score = 2) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE away_team = 'brighton & hove albion' AND home_score = 2 AND away_score = 2) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  the score was 1 - 0 when the home team was shrewsbury town  label:  1
answer_sql;  SELECT * FROM T WHERE (home_team = 'shrewsbury town' AND (home_score = 1 OR away_score = 1));


prediction:    tie_no        home_team home_score  away_team away_score        date
0      6  shrewsbury town          1  wimbledon          0  1991-01-26
Gold answer:  1

Gen output:   Gold:  1
Correcet:  2 total:  4 Accuracy:  0.49998750031249223

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  for the home team of woking , the tie number was 5 and the score was 0 - 1  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE home_team = 'woking' AND tie_no = 5 AND home_score = 0 AND away_score = 1) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE home_team = 'woking' AND tie_no = 5 AND home_score = 0 AND away_score = 1) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  5 Accuracy:  0.5999880002399952

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  1 - 0 was the score when the home team was wimbledon  label:  0
answer_sql;  SELECT * FROM T WHERE (home_team = 'wimbledon' AND home_score = 1) OR (away_team = 'wimbledon' AND away_score = 1);


prediction:  Empty DataFrame
Columns: [tie_no, home_team, home_score, away_team, away_score, date]
Index: []
Gold answer:  0

Gen output:   Gold:  0
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  2 - 3 was the score when the home team was liverpool after 30 / 01 / 1991  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE home_team = 'liverpool' AND date > '1991-01-30' AND home_score = 2 AND away_score = 3) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE home_team = 'liverpool' AND date > '1991-01-30' AND home_score = 2 AND away_score = 3) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  1 - 0 was the score the home team was bolton wanderers  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE home_score = 1 AND home_team = 'bolton wanderers') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE home_score = 1 AND home_team = 'bolton wanderers') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  8 Accuracy:  0.6249921875976551

-----------------------------------------------



id:  2-17751797-4.html.csv  S:  5 was the tie no before the away team was woking  label:  0
answer_sql;  SELECT (SELECT tie_no FROM T WHERE away_team = 'woking') = 5 - 1;


prediction:    (SELECT tie_no FROM T WHERE away_team = 'woking') = 5 - 1
0                                               None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  5 total:  9 Accuracy:  0.5555493827846357

-----------------------------------------------

***********************************************************

2-11545282-4.html.csv  [
    ["player", "nationality", "position", "start_year", "end_year", "school___club_team"],
    ["adrian dantley", "united states", "guard - forward", 1979, 1986, "notre dame"],
    ["brad davis", "united states", "guard", 1979, 1980, "maryland"],
    ["darryl dawkins", "united states", "center", 1987, 1988, "maynard evans hs"],
    ["paul dawkins", "united states", "guard", 1979, 1980, "northern illinois"],
    ["greg deane", "united states", "guard", 1979, 1980, "utah"],
    ["james donaldson", "united states", "center", 1993, 1995, "washington state"],
    ["john drew", "united states", "guard - forward", 1982, 1985, "gardner - webb"],
    ["john duren", "united states", "guard", 1980, 1982, "georgetown"]
]

Table Column:  player, nationality, position, start_year, end_year, school___club_team
DataFrame from database (3 rows) :

player | nationality | position | start_year | end_year | school___club_team
adrian dantley | united states | guard - forward | 1979 | 1986 | notre dame
brad davis | united states | guard | 1979 | 1980 | maryland
darryl dawkins | united states | center | 1987 | 1988 | maynard evans hs
table_ids:  [312, 313, 314, 315, 316, 317, 318, 319, 320, 321]

main_table: 2-11545282-4.html.csv table_qa_group:  [312, 313, 314, 315, 316, 317, 318, 319, 320, 321] number of questions:  10


id:  2-11545282-4.html.csv  S:  the jazz had two players with the last name dawkins but their time on the team did not overlap  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player LIKE '%dawkins%' AND end_year < (SELECT MIN(start_year) FROM T WHERE player LIKE '%dawkins%')) = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE player LIKE '%dawkins%' AND end_year < (SELECT MIN(start_year) FROM T WHERE player LIKE '%dawkins%')) = 2
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  paul dawkins played for the jazz seven years before darryl dawkins  label:  1
answer_sql;  SELECT (SELECT start_year FROM T WHERE player = 'paul dawkins') = (SELECT end_year FROM T WHERE player = 'darryl dawkins') - 7;


prediction:     (SELECT start_year FROM T WHERE player = 'paul dawkins') = (SELECT end_year FROM T WHERE player = 'darryl dawkins') - 7
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  adrian dantley was on the team the entire time that brad davis was  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'adrian dantley' AND start_year <= (SELECT start_year FROM T WHERE player = 'brad davis') AND end_year >= (SELECT end_year FROM T WHERE player = 'brad davis')) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'adrian dantley' AND start_year <= (SELECT start_year FROM T WHERE player = 'brad davis') AND end_year >= (SELECT end_year FROM T WHERE player = 'brad davis')) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  james donaldson had two stints on the jazz 's roster  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'james donaldson') = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'james donaldson') = 2
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  1 total:  4 Accuracy:  0.24999375015624611

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  the jazz had at least three guards that were on the team 1979 - 80  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position = 'guard' AND start_year <= 1979 AND end_year >= 1980) >= 3;


prediction:     (SELECT COUNT(*) FROM T WHERE position = 'guard' AND start_year <= 1979 AND end_year >= 1980) >= 3
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  the jazz had two players , both guards , with the last name dawkins but their time on the team did not overlap  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position = 'guard' AND player LIKE '%dawkins%') = 2 AND (SELECT COUNT(*) FROM T WHERE position = 'guard' AND player LIKE '%dawkins%' AND start_year <> end_year) = 2;


prediction:     (SELECT COUNT(*) FROM T WHERE position = 'guard' AND player LIKE '%dawkins%') = 2 AND (SELECT COUNT(*) FROM T WHERE position = 'guard' AND player LIKE '%dawkins%' AND start_year <> end_year) = 2
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  3
Correcet:  3 total:  6 Accuracy:  0.49999166680555324

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  darryl dawkins played for the jazz seven years before paul dawkins  label:  0
answer_sql;  SELECT (SELECT end_year FROM T WHERE player = 'darryl dawkins') = (SELECT start_year FROM T WHERE player = 'paul dawkins') - 7;


prediction:     (SELECT end_year FROM T WHERE player = 'darryl dawkins') = (SELECT start_year FROM T WHERE player = 'paul dawkins') - 7
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  7 Accuracy:  0.5714204082798817

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  adrian dantley was on the team the entire time that brad davis was also on the team , as well as surpassing davis by four additional years  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'adrian dantley' AND start_year <= (SELECT start_year FROM T WHERE player = 'brad davis') AND end_year >= (SELECT end_year FROM T WHERE player = 'brad davis') + 4) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'adrian dantley' AND start_year <= (SELECT start_year FROM T WHERE player = 'brad davis') AND end_year >= (SELECT end_year FROM T WHERE player = 'brad davis') + 4) > 0
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  4 total:  8 Accuracy:  0.499993750078124

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  james donaldson had two stints on the jazz 's roster , totaling five years in total  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE player = 'james donaldson') = 2 AND (SELECT SUM(end_year - start_year) FROM T WHERE player = 'james donaldson') = 5;


prediction:     (SELECT COUNT(*) FROM T WHERE player = 'james donaldson') = 2 AND (SELECT SUM(end_year - start_year) FROM T WHERE player = 'james donaldson') = 5
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  5
Correcet:  5 total:  9 Accuracy:  0.5555493827846357

-----------------------------------------------



id:  2-11545282-4.html.csv  S:  the jazz had at least three guards that were on the team during 1979 - 80 , one being james donaldson  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE position = 'guard' AND (start_year <= 1979 AND end_year >= 1980)) >= 3 AND (SELECT COUNT(*) FROM T WHERE player = 'james donaldson' AND position = 'guard' AND (start_year <= 1979 AND end_year >= 1980)) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE position = 'guard' AND (start_year <= 1979 AND end_year >= 1980)) >= 3 AND (SELECT COUNT(*) FROM T WHERE player = 'james donaldson' AND position = 'guard' AND (start_year <= 1979 AND end_year >= 1980)) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  10 Accuracy:  0.5999940000599994

-----------------------------------------------

***********************************************************

1-1341522-41.html.csv  [['district', 'incumbent', 'party', 'first_elected', 'status', 'opponent_name', 'opponent_party', 'opponent_vote_percentage'],
['pennsylvania4', 'ron klink', 'democratic', '1992', 're-elected', 'ron klink', 'd', '64.2'],
['pennsylvania5', 'william f clinger , jr', 'republican', '1978', 're-elected', 'william f clinger , jr', 'r', 'unopposed'],
['pennsylvania7', 'curt weldon', 'republican', '1986', 're-elected', 'curt weldon', 'r', '69.7'],
['pennsylvania9', 'bud shuster', 'republican', '1972', 're-elected', 'bud shuster', 'r', 'unopposed'],
['pennsylvania12', 'john murtha', 'democratic', '1974', 're-elected', 'john murtha', 'd', '68.9'],
['pennsylvania17', 'george gekas', 'republican', '1982', 're-elected', 'george gekas', 'r', 'unopposed'],
['pennsylvania18', 'rick santorum', 'republican', '1990', 'retired to run for us senate democratic gain', 'michael f doyle', 'd', '54.8'],
['pennsylvania19', 'william f goodling', 'republican', '1974', 're-elected', 'william f goodling', 'r', 'unopposed']]

Table Column:  district, incumbent, party, first_elected, status, opponent_name, opponent_party, opponent_vote_percentage
DataFrame from database (3 rows) :

district | incumbent | party | first_elected | status | opponent_name | opponent_party | opponent_vote_percentage
pennsylvania4 | ron klink | democratic | 1992 | re-elected | ron klink | d | 64.2
pennsylvania5 | william f clinger , jr | republican | 1978 | re-elected | william f clinger , jr | r | unopposed
pennsylvania7 | curt weldon | republican | 1986 | re-elected | curt weldon | r | 69.7
table_ids:  [322, 323, 324, 325, 326, 327]

main_table: 1-1341522-41.html.csv table_qa_group:  [322, 323, 324, 325, 326, 327] number of questions:  6


id:  1-1341522-41.html.csv  S:  pennsylvania17 is the only district that had someone first elected in the 1980s  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE first_elected LIKE '198%') = 1 AND district = 'pennsylvania17';
error:  1-1341522-41.html.csv


id:  1-1341522-41.html.csv  S:  there were more republican than democratic incumbents who were first elected in 1974  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE party = 'republican' AND first_elected = 1974) > (SELECT COUNT(*) FROM T WHERE party = 'democratic' AND first_elected = 1974);


prediction:     (SELECT COUNT(*) FROM T WHERE party = 'republican' AND first_elected = 1974) > (SELECT COUNT(*) FROM T WHERE party = 'democratic' AND first_elected = 1974)
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  1 Accuracy:  0.0

-----------------------------------------------



id:  1-1341522-41.html.csv  S:  william f goodling was one of six republican incumbents to be re - elected  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE party = 'republican' AND status = 're-elected') = 6;


prediction:     (SELECT COUNT(*) FROM T WHERE party = 'republican' AND status = 're-elected') = 6
0                                                  0
Gold answer:  1

Direct ans:  0  Gold:  1

Gen output:  0  Gold:  1
Correcet:  0 total:  2 Accuracy:  0.0

-----------------------------------------------



id:  1-1341522-41.html.csv  S:  bud shuster ran opposed in the election  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE incumbent = 'bud shuster' AND status = 're-elected' AND opponent_name = 'unopposed') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE incumbent = 'bud shuster' AND status = 're-elected' AND opponent_name = 'unopposed') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  3 Accuracy:  0.3333222225925802

-----------------------------------------------



id:  1-1341522-41.html.csv  S:  there were two republican imcubents that were first elected in 1974  label:  0
answer_sql;  SELECT COUNT(*) FROM T WHERE party = 'republican' AND first_elected = 1974;


prediction:     COUNT(*)
0         1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  1 total:  4 Accuracy:  0.24999375015624611

-----------------------------------------------



id:  1-1341522-41.html.csv  S:  district pennsylvania12 has incumbent ron klink  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE district = 'pennsylvania12' AND incumbent = 'ron klink') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE district = 'pennsylvania12' AND incumbent = 'ron klink') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  2
Correcet:  2 total:  5 Accuracy:  0.3999920001599968

-----------------------------------------------

***********************************************************

2-16409445-1.html.csv  [['week', 'date', 'opponent', 'result', 'tv_time', 'attendance'],
['1', '1997-08-31', 'tennessee oilers', 'l 24 - 21', 'nbc t10:0', '30171'],
['2', '1997-09-08', 'kansas city chiefs', 'l 28 - 27', 'abc t18:0', '61523'],
['3', '1997-09-14', 'atlanta falcons', 'w 36 - 31', 'nbc t10:0', '47922'],
['4', '1997-09-21', 'new york jets', 'l 23 - 22', 'nbc t10:0', '72586'],
['5', '1997-09-28', 'st louis rams', 'w 35 - 17', 'fox t13:15', '42506'],
['6', '1997-10-05', 'san diego chargers', 'l 25 - 10', 'nbc t13:15', '43648'],
['8', '1997-10-19', 'denver broncos', 'w 28 - 25', 'nbc t13:15', '57006'],
['9', '1997-10-26', 'seattle seahawks', 'l 45 - 34', 'nbc t13:15', '66264'],
['10', '1997-11-02', 'carolina panthers', 'l 38 - 14', 'nbc t10:0', '71064'],
['11', '1997-11-09', 'new orleans saints', 'l 13 - 10', 'fox t13:15', '40091'],
['12', '1997-11-16', 'san diego chargers', 'w 38 - 13', 'nbc t13:15', '65714'],
['13', '1997-11-24', 'denver broncos', 'l 31 - 3', 'abc t18:0', '75307'],
['14', '1997-11-30', 'miami dolphins', 'l 34 - 16', 'nbc t13:15', '50569'],
['15', '1997-12-07', 'kansas city chiefs', 'l 30 - 0', 'nbc t10:0', '76379'],
['16', '1997-12-14', 'seattle seahawks', 'l 22 - 21', 'nbc t13:15', '40124'],
['17', '1997-12-21', 'jacksonville jaguars', 'l 20 - 9', 'nbc t13:15', '40032']]

Table Column:  week, date, opponent, result, tv_time, attendance
DataFrame from database (3 rows) :

week | date | opponent | result | tv_time | attendance
1 | 1997-08-31 | tennessee oilers | l 24 - 21 | nbc t10:0 | 30171
2 | 1997-09-08 | kansas city chiefs | l 28 - 27 | abc t18:0 | 61523
3 | 1997-09-14 | atlanta falcons | w 36 - 31 | nbc t10:0 | 47922
table_ids:  [328, 329, 330]

main_table: 2-16409445-1.html.csv table_qa_group:  [328, 329, 330] number of questions:  3


id:  2-16409445-1.html.csv  S:  the new orleans saints were the opponents for the first time in the 11th week  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE opponent = 'new orleans saints' AND week = 11) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE opponent = 'new orleans saints' AND week = 11) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-16409445-1.html.csv  S:  week 4 had a higher attendance than week 3  label:  1
answer_sql;  SELECT (SELECT attendance FROM T WHERE week = 4) > (SELECT attendance FROM T WHERE week = 3);


prediction:     (SELECT attendance FROM T WHERE week = 4) > (SELECT attendance FROM T WHERE week = 3)
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-16409445-1.html.csv  S:  on november 29 , 1997 when the new orleans saints were in the opponents has the least attendance of the season  label:  0
answer_sql;  SELECT MIN(attendance) FROM T WHERE date = '1997-11-29' AND opponent = 'new orleans saints';


prediction:    MIN(attendance)
0            None
Gold answer:  0

Direct ans:  none  Gold:  0

Gen output:  none  Gold:  0
Correcet:  2 total:  3 Accuracy:  0.6666444451851604

-----------------------------------------------

***********************************************************

2-18622227-6.html.csv  [['tournament', 'year', 'result'],
 ['australian open', '1986', 'a'],
 ['australian open', '1988', '3r'],
 ['australian open', '1989', '3r'],
 ['australian open', '1990', '3r'],
 ['australian open', '1991', 'a'],
 ['australian open', '1992', 'qf'],
 ['australian open', '1993', '3r'],
 ['australian open', '1994', '2r'],
 ['australian open', '1995', '1r'],
 ['australian open', '1996', 'a'],
 ['australian open', '1997', '2r'],
 ['australian open', '1998', '1r'],
 ['australian open', '1999', '1r'],
 ['french open', '1986', 'a'],
 ['french open', '1988', 'qf'],
 ['french open', '1989', 'qf'],
 ['french open', '1990', '3r'],
 ['french open', '1991', '3r'],
 ['french open', '1992', 'qf'],
 ['french open', '1993', 'qf'],
 ['french open', '1994', '1r'],
 ['french open', '1995', 'qf'],
 ['french open', '1996', 'qf'],
 ['french open', '1997', '2r'],
 ['french open', '1998', '3r'],
 ['french open', '1999', '1r'],
 ['wimbledon', '1986', 'a'],
 ['wimbledon', '1988', 'sf'],
 ['wimbledon', '1989', 'qf'],
 ['wimbledon', '1990', '3r'],
 ['wimbledon', '1991', 'qf'],
 ['wimbledon', '1992', '3r'],
 ['wimbledon', '1993', '1r'],
 ['wimbledon', '1994', '2r'],
 ['wimbledon', '1995', '3r'],
 ['wimbledon', '1996', 'qf'],
 ['wimbledon', '1997', '3r'],
 ['wimbledon', '1998', '3r'],
 ['wimbledon', '1999', '1r'],
 ['us open', '1986', '1r'],
 ['us open', '1988', '2r'],
 ['us open', '1989', '3r'],
 ['us open', '1990', '3r'],
 ['us open', '1991', 'qf'],
 ['us open', '1992', 'a'],
 ['us open', '1993', '3r'],
 ['us open', '1994', 'qf'],
 ['us open', '1995', '3r'],
 ['us open', '1996', '2r'],
 ['us open', '1997', '3r'],
 ['us open', '1998', '2r'],
 ['us open', '1999', '1r']]

Table Column:  tournament, year, result
DataFrame from database (3 rows) :

tournament | year | result
australian open | 1986 | a
australian open | 1988 | 3r
australian open | 1989 | 3r
table_ids:  [331, 332, 333, 334, 335, 336, 337, 338, 339, 340]

main_table: 2-18622227-6.html.csv table_qa_group:  [331, 332, 333, 334, 335, 336, 337, 338, 339, 340] number of questions:  10


id:  2-18622227-6.html.csv  S:  the australian open and the french open had the same results in 1996 and 1990  label:  0
answer_sql;  SELECT (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1996) = (SELECT result FROM T WHERE tournament = 'french open' AND year = 1996) AND (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1990) = (SELECT result FROM T WHERE tournament = 'french open' AND year = 1990);


prediction:     (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1996) = (SELECT result FROM T WHERE tournament = 'french open' AND year = 1996) AND (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1990) = (SELECT result FROM T WHERE tournament = 'french open' AND year = 1990)
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the us open had the same result in the years 1986 and 1999  label:  1
answer_sql;  SELECT (SELECT result FROM T WHERE tournament = 'us open' AND year = 1986) = (SELECT result FROM T WHERE tournament = 'us open' AND year = 1999);


prediction:     (SELECT result FROM T WHERE tournament = 'us open' AND year = 1986) = (SELECT result FROM T WHERE tournament = 'us open' AND year = 1999)
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  wimbledon had only one a result during the years 1986 to 1999  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a' AND year BETWEEN 1986 AND 1999) = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a' AND year BETWEEN 1986 AND 1999) = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  each tournament had the same result in the years 1990 and 1999  label:  0
answer_sql;  SELECT (SELECT COUNT(DISTINCT result) FROM T WHERE year = 1990) = 1 AND (SELECT COUNT(DISTINCT result) FROM T WHERE year = 1999) = 1;


prediction:     (SELECT COUNT(DISTINCT result) FROM T WHERE year = 1990) = 1 AND (SELECT COUNT(DISTINCT result) FROM T WHERE year = 1999) = 1
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  3 total:  4 Accuracy:  0.7499812504687383

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the australian open had three a results and wimbledon had only one  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE tournament = 'australian open' AND result = 'a') = 3 AND (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a') = 1;


prediction:     (SELECT COUNT(*) FROM T WHERE tournament = 'australian open' AND result = 'a') = 3 AND (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a') = 1
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  4
Correcet:  4 total:  5 Accuracy:  0.7999840003199936

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the results in 1996 is different for australian open and french open  label:  1
answer_sql;  SELECT (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1996) <> (SELECT result FROM T WHERE tournament = 'french open' AND year = 1996);


prediction:     (SELECT result FROM T WHERE tournament = 'australian open' AND year = 1996) <> (SELECT result FROM T WHERE tournament = 'french open' AND year = 1996)
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  5
Correcet:  5 total:  6 Accuracy:  0.8333194446759221

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the us open had 1r in 1986 but had 3r in 1999  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE tournament = 'us open' AND year = 1986 AND result = '1r') > 0 AND (SELECT COUNT(*) FROM T WHERE tournament = 'us open' AND year = 1999 AND result = '3r') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE tournament = 'us open' AND year = 1986 AND result = '1r') > 0 AND (SELECT COUNT(*) FROM T WHERE tournament = 'us open' AND year = 1999 AND result = '3r') > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  6
Correcet:  6 total:  7 Accuracy:  0.8571306124198226

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the wimbledon had the same result in the years 1986 and 1999  label:  0
answer_sql;  SELECT (SELECT result FROM T WHERE tournament = 'wimbledon' AND year = 1986) = (SELECT result FROM T WHERE tournament = 'wimbledon' AND year = 1999);


prediction:     (SELECT result FROM T WHERE tournament = 'wimbledon' AND year = 1986) = (SELECT result FROM T WHERE tournament = 'wimbledon' AND year = 1999)
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  7
Correcet:  7 total:  8 Accuracy:  0.874989062636717

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the us open had the different result in the years 1990 and 1999  label:  1
answer_sql;  SELECT (SELECT result FROM T WHERE tournament = 'us open' AND year = 1990) != (SELECT result FROM T WHERE tournament = 'us open' AND year = 1999);


prediction:     (SELECT result FROM T WHERE tournament = 'us open' AND year = 1990) != (SELECT result FROM T WHERE tournament = 'us open' AND year = 1999)
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  8
Correcet:  8 total:  9 Accuracy:  0.8888790124554172

-----------------------------------------------



id:  2-18622227-6.html.csv  S:  the australian open had same a results as wimbledon had  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE tournament = 'australian open' AND result = 'a') = (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a');


prediction:     (SELECT COUNT(*) FROM T WHERE tournament = 'australian open' AND result = 'a') = (SELECT COUNT(*) FROM T WHERE tournament = 'wimbledon' AND result = 'a')
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  9
Correcet:  9 total:  10 Accuracy:  0.8999910000899991

-----------------------------------------------

***********************************************************

2-17340355-10.html.csv  [['game', 'date', 'team', 'location', 'attendance', 'record'],
['75', 'April 1', 'Houston', 'US Airways Center', '18422', '41', '34'],
['76', 'April 3', 'Sacramento', 'US Airways Center', '18422', '42', '34'],
['77', 'April 5', 'Dallas', 'American Airlines Center', '20301', '42', '35'],
['78', 'April 8', 'New Orleans', 'New Orleans Arena', '17781', '43', '35'],
['79', 'April 10', 'Memphis', 'FedExForum', '15908', '43', '36'],
['80', 'April 11', 'Minnesota', 'Target Center', '18478', '44', '36'],
['81', 'April 13', 'Memphis', 'US Airways Center', '18422', '45', '36'],
['82', 'April 15', 'Golden State', 'US Airways Center', '18422', '46', '36']]

error

2-17338083-13.html.csv  [['state', 'type', 'name', 'title', 'royal_house', 'from'],
['cai', 'sovereign', 'yi', 'marquis', 'ji', '837 bc'],
['cao', 'sovereign', 'you', 'count', 'none', '835 bc'],
['cao', 'sovereign', 'dai', 'count', 'none', '826 bc'],
['chen', 'sovereign', 'li', 'duke', 'none', '831 bc'],
['chu', 'sovereign', 'xiong yan the younger', 'viscount', 'mi', '837 bc'],
['chu', 'sovereign', 'xiong shuang', 'viscount', 'mi', '827 bc'],
['chu', 'sovereign', 'xiong xun', 'viscount', 'mi', '821 bc'],
['jin', 'sovereign', 'xi', 'marquis', 'ji', '840 bc'],
['jin', 'sovereign', 'xian', 'marquis', 'ji', '822 bc'],
['lu', 'sovereign', 'shen', 'duke', 'ji', '854 bc'],
['lu', 'sovereign', 'wu', 'duke', 'ji', '825 bc'],
['qi', 'sovereign', 'wu', 'duke', 'jiang', '850 bc'],
['qi', 'sovereign', 'li', 'duke', 'jiang', '824 bc'],
['qin', 'sovereign', 'qin zhong', 'ruler', 'ying', '845 bc'],
['qin', 'sovereign', 'zhuang', 'duke', 'ying', '822 bc'],
['song', 'sovereign', 'hui', 'duke', 'none', '830 bc'],
['wey', 'sovereign', 'li', 'marquis', 'none', '855 bc'],
['yan', 'sovereign', 'hui', 'marquis', 'none', '864 bc'],
['yan', 'sovereign', 'li', 'marquis', 'none', '826 bc']]

Table Column:  state, type, name, title, royal_house, from
DataFrame from database (3 rows) :

state | type | name | title | royal_house | from
cai | sovereign | yi | marquis | ji | 837 bc
cao | sovereign | you | count | none | 835 bc
cao | sovereign | dai | count | none | 826 bc
table_ids:  [351, 352, 353, 354, 355, 356]

main_table: 2-17338083-13.html.csv table_qa_group:  [351, 352, 353, 354, 355, 356] number of questions:  6


id:  2-17338083-13.html.csv  S:  from 830 bc , the state is song  label:  1
answer_sql;  SELECT (SELECT state FROM T WHERE "from" = '830 bc') = 'song';


prediction:     (SELECT state FROM T WHERE "from" = '830 bc') = 'song'
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-17338083-13.html.csv  S:  xi or xian is the name when the state is jin  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE state = 'jin' AND (name = 'xi' OR name = 'xian')) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE state = 'jin' AND (name = 'xi' OR name = 'xian')) > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  2
Correcet:  2 total:  2 Accuracy:  0.9999500024998749

-----------------------------------------------



id:  2-17338083-13.html.csv  S:  yi is the name when the royal house is ji and the state is cai  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE name = 'yi' AND royal_house = 'ji' AND state = 'cai') > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE name = 'yi' AND royal_house = 'ji' AND state = 'cai') > 0
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  3
Correcet:  3 total:  3 Accuracy:  0.9999666677777407

-----------------------------------------------



id:  2-17338083-13.html.csv  S:  xi or xian is the name when the state is jin and the title is duke  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE state = 'jin' AND title = 'duke' AND (name = 'xi' OR name = 'xian')) > 0;


prediction:     (SELECT COUNT(*) FROM T WHERE state = 'jin' AND title = 'duke' AND (name = 'xi' OR name = 'xian')) > 0
0                                                  0
Gold answer:  0

Direct ans:  0  Gold:  0

Gen output:  0  Gold:  0
correct:  4
Correcet:  4 total:  4 Accuracy:  0.9999750006249845

-----------------------------------------------



id:  2-17338083-13.html.csv  S:  yi is the name when the royal house is ji and the state is cai and the year was 826  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE name = 'yi' AND royal_house = 'ji' AND state = 'cai' AND from = '826 bc') > 0;
error:  2-17338083-13.html.csv


id:  2-17338083-13.html.csv  S:  when the from is 830 bc , the state is wey  label:  0
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE from = '830 bc' AND state = 'wey') > 0;
error:  2-17338083-13.html.csv
***********************************************************
2-11821711-13.html.csv  [['round', 'player', 'nationality', 'nhl_team', 'college_junior_club_team_league'],
['1', 'thomas hickey (d)', 'canada', 'los angeles kings', 'seattle thunderbirds ( whl )'],
['2', 'oscar moller (c)', 'sweden', 'los angeles kings', 'chilliwack bruins ( whl )'],
['2', 'wayne simmonds (rw)', 'canada', 'los angeles kings', 'owen sound attack ( whl )'],
['3', 'bryan cameron (c)', 'canada', 'los angeles kings', 'belleville bulls ( ohl )'],
['4', 'alec martinez (d)', 'united states', 'los angeles kings', 'miami university ( ncaa )'],
['4', 'dwight king (c)', 'canada', 'los angeles kings', 'lethbridge hurricanes ( whl )'],
['5', 'linden rowat (g)', 'canada', 'los angeles kings', 'regina pats ( whl )'],
['5', 'joshua turnbull (c)', 'united states', 'los angeles kings', 'waterloo black hawks ( ushl )'],
['7', 'josh kidd (d)', 'canada', 'los angeles kings', 'erie otters ( ohl )'],
['7', 'matt fillier (lw)', 'canada', 'los angeles kings', 'st john \'s fog devils ( qmjhl )']]

Table Column:  round, player, nationality, nhl_team, college_junior_club_team_league
DataFrame from database (3 rows) :

round | player | nationality | nhl_team | college_junior_club_team_league
1 | thomas hickey (d) | canada | los angeles kings | seattle thunderbirds ( whl )
2 | oscar moller (c) | sweden | los angeles kings | chilliwack bruins ( whl )
2 | wayne simmonds (rw) | canada | los angeles kings | owen sound attack ( whl )
table_ids:  [357, 358]

main_table: 2-11821711-13.html.csv table_qa_group:  [357, 358] number of questions:  2


id:  2-11821711-13.html.csv  S:  players in rounds higher than 4 , were from either canada or the united states  label:  1
answer_sql;  SELECT (SELECT COUNT(*) FROM T WHERE round > 4 AND (nationality = 'canada' OR nationality = 'united states')) = (SELECT COUNT(*) FROM T WHERE round > 4);


prediction:     (SELECT COUNT(*) FROM T WHERE round > 4 AND (nationality = 'canada' OR nationality = 'united states')) = (SELECT COUNT(*) FROM T WHERE round > 4)
0                                                  1
Gold answer:  1

Direct ans:  1  Gold:  1

Gen output:  1  Gold:  1
correct:  1
Correcet:  1 total:  1 Accuracy:  0.9999000099990001

-----------------------------------------------



id:  2-11821711-13.html.csv  S:  canada and the united states are the two nationalities of players with rounds lower than four  label:  0
answer_sql;  SELECT (SELECT COUNT(DISTINCT nationality) FROM T WHERE round < 4) = 2 AND (SELECT COUNT(DISTINCT nationality) FROM T WHERE round < 4) = 2;


prediction:     (SELECT COUNT(DISTINCT nationality) FROM T WHERE round < 4) = 2 AND (SELECT COUNT(DISTINCT nationality) FROM T WHERE round < 4) = 2
0                                                  1
Gold answer:  0

Direct ans:  1  Gold:  0

Gen output:  1  Gold:  0
Correcet:  1 total:  2 Accuracy:  0.49997500124993743

-----------------------------------------------

***********************************************************


Process finished with exit code 0
